/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/brotli/dec/bit_reader.js":
/*!***********************************************!*\
  !*** ./node_modules/brotli/dec/bit_reader.js ***!
  \***********************************************/
/***/ ((module) => {

/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Bit reading helpers
*/

var BROTLI_READ_SIZE = 4096;
var BROTLI_IBUF_SIZE =  (2 * BROTLI_READ_SIZE + 32);
var BROTLI_IBUF_MASK =  (2 * BROTLI_READ_SIZE - 1);

var kBitMask = new Uint32Array([
  0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767,
  65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215
]);

/* Input byte buffer, consist of a ringbuffer and a "slack" region where */
/* bytes from the start of the ringbuffer are copied. */
function BrotliBitReader(input) {
  this.buf_ = new Uint8Array(BROTLI_IBUF_SIZE);
  this.input_ = input;    /* input callback */
  
  this.reset();
}

BrotliBitReader.READ_SIZE = BROTLI_READ_SIZE;
BrotliBitReader.IBUF_MASK = BROTLI_IBUF_MASK;

BrotliBitReader.prototype.reset = function() {
  this.buf_ptr_ = 0;      /* next input will write here */
  this.val_ = 0;          /* pre-fetched bits */
  this.pos_ = 0;          /* byte position in stream */
  this.bit_pos_ = 0;      /* current bit-reading position in val_ */
  this.bit_end_pos_ = 0;  /* bit-reading end position from LSB of val_ */
  this.eos_ = 0;          /* input stream is finished */
  
  this.readMoreInput();
  for (var i = 0; i < 4; i++) {
    this.val_ |= this.buf_[this.pos_] << (8 * i);
    ++this.pos_;
  }
  
  return this.bit_end_pos_ > 0;
};

/* Fills up the input ringbuffer by calling the input callback.

   Does nothing if there are at least 32 bytes present after current position.

   Returns 0 if either:
    - the input callback returned an error, or
    - there is no more input and the position is past the end of the stream.

   After encountering the end of the input stream, 32 additional zero bytes are
   copied to the ringbuffer, therefore it is safe to call this function after
   every 32 bytes of input is read.
*/
BrotliBitReader.prototype.readMoreInput = function() {
  if (this.bit_end_pos_ > 256) {
    return;
  } else if (this.eos_) {
    if (this.bit_pos_ > this.bit_end_pos_)
      throw new Error('Unexpected end of input ' + this.bit_pos_ + ' ' + this.bit_end_pos_);
  } else {
    var dst = this.buf_ptr_;
    var bytes_read = this.input_.read(this.buf_, dst, BROTLI_READ_SIZE);
    if (bytes_read < 0) {
      throw new Error('Unexpected end of input');
    }
    
    if (bytes_read < BROTLI_READ_SIZE) {
      this.eos_ = 1;
      /* Store 32 bytes of zero after the stream end. */
      for (var p = 0; p < 32; p++)
        this.buf_[dst + bytes_read + p] = 0;
    }
    
    if (dst === 0) {
      /* Copy the head of the ringbuffer to the slack region. */
      for (var p = 0; p < 32; p++)
        this.buf_[(BROTLI_READ_SIZE << 1) + p] = this.buf_[p];

      this.buf_ptr_ = BROTLI_READ_SIZE;
    } else {
      this.buf_ptr_ = 0;
    }
    
    this.bit_end_pos_ += bytes_read << 3;
  }
};

/* Guarantees that there are at least 24 bits in the buffer. */
BrotliBitReader.prototype.fillBitWindow = function() {    
  while (this.bit_pos_ >= 8) {
    this.val_ >>>= 8;
    this.val_ |= this.buf_[this.pos_ & BROTLI_IBUF_MASK] << 24;
    ++this.pos_;
    this.bit_pos_ = this.bit_pos_ - 8 >>> 0;
    this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;
  }
};

/* Reads the specified number of bits from Read Buffer. */
BrotliBitReader.prototype.readBits = function(n_bits) {
  if (32 - this.bit_pos_ < n_bits) {
    this.fillBitWindow();
  }
  
  var val = ((this.val_ >>> this.bit_pos_) & kBitMask[n_bits]);
  this.bit_pos_ += n_bits;
  return val;
};

module.exports = BrotliBitReader;


/***/ }),

/***/ "./node_modules/brotli/dec/context.js":
/*!********************************************!*\
  !*** ./node_modules/brotli/dec/context.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Lookup table to map the previous two bytes to a context id.

   There are four different context modeling modes defined here:
     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,
     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,
     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,
     CONTEXT_SIGNED: second-order context model tuned for signed integers.

   The context id for the UTF8 context model is calculated as follows. If p1
   and p2 are the previous two bytes, we calcualte the context as

     context = kContextLookup[p1] | kContextLookup[p2 + 256].

   If the previous two bytes are ASCII characters (i.e. < 128), this will be
   equivalent to

     context = 4 * context1(p1) + context2(p2),

   where context1 is based on the previous byte in the following way:

     0  : non-ASCII control
     1  : \t, \n, \r
     2  : space
     3  : other punctuation
     4  : " '
     5  : %
     6  : ( < [ {
     7  : ) > ] }
     8  : , ; :
     9  : .
     10 : =
     11 : number
     12 : upper-case vowel
     13 : upper-case consonant
     14 : lower-case vowel
     15 : lower-case consonant

   and context2 is based on the second last byte:

     0 : control, space
     1 : punctuation
     2 : upper-case letter, number
     3 : lower-case letter

   If the last byte is ASCII, and the second last byte is not (in a valid UTF8
   stream it will be a continuation byte, value between 128 and 191), the
   context is the same as if the second last byte was an ASCII control or space.

   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will
   be a continuation byte and the context id is 2 or 3 depending on the LSB of
   the last byte and to a lesser extent on the second last byte if it is ASCII.

   If the last byte is a UTF8 continuation byte, the second last byte can be:
     - continuation byte: the next byte is probably ASCII or lead byte (assuming
       4-byte UTF8 characters are rare) and the context id is 0 or 1.
     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1
     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3

   The possible value combinations of the previous two bytes, the range of
   context ids and the type of the next byte is summarized in the table below:

   |--------\-----------------------------------------------------------------|
   |         \                         Last byte                              |
   | Second   \---------------------------------------------------------------|
   | last byte \    ASCII            |   cont. byte        |   lead byte      |
   |            \   (0-127)          |   (128-191)         |   (192-)         |
   |=============|===================|=====================|==================|
   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |
   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |
   |-------------|-------------------|---------------------|------------------|
   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |
   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |
   |-------------|-------------------|---------------------|------------------|
   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |
   |  (192-207)  |                   |  context: 0 - 1     |                  |
   |-------------|-------------------|---------------------|------------------|
   |  lead byte  | not valid         |  next: cont.        |  not valid       |
   |  (208-)     |                   |  context: 2 - 3     |                  |
   |-------------|-------------------|---------------------|------------------|

   The context id for the signed context mode is calculated as:

     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].

   For any context modeling modes, the context ids can be calculated by |-ing
   together two lookups from one table using context model dependent offsets:

     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].

   where offset1 and offset2 are dependent on the context mode.
*/

var CONTEXT_LSB6         = 0;
var CONTEXT_MSB6         = 1;
var CONTEXT_UTF8         = 2;
var CONTEXT_SIGNED       = 3;

/* Common context lookup table for all context modes. */
exports.lookup = new Uint8Array([
  /* CONTEXT_UTF8, last byte. */
  /* ASCII range. */
   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,
   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,
  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,
  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,
  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,
  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,
  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,
  /* UTF8 continuation byte range. */
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  /* UTF8 lead byte range. */
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  /* CONTEXT_UTF8 second last byte. */
  /* ASCII range. */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,
  /* UTF8 continuation byte range. */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  /* UTF8 lead byte range. */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  /* CONTEXT_SIGNED, second last byte. */
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */
   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,
  /* CONTEXT_LSB6, last byte. */
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
  /* CONTEXT_MSB6, last byte. */
   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,
   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,
   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,
  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,
  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,
  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,
  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,
  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,
  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,
  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,
  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,
  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,
  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,
  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,
  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,
  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,
  /* CONTEXT_{M,L}SB6, second last byte, */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
]);

exports.lookupOffsets = new Uint16Array([
  /* CONTEXT_LSB6 */
  1024, 1536,
  /* CONTEXT_MSB6 */
  1280, 1536,
  /* CONTEXT_UTF8 */
  0, 256,
  /* CONTEXT_SIGNED */
  768, 512,
]);


/***/ }),

/***/ "./node_modules/brotli/dec/decode.js":
/*!*******************************************!*\
  !*** ./node_modules/brotli/dec/decode.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

var BrotliInput = (__webpack_require__(/*! ./streams */ "./node_modules/brotli/dec/streams.js").BrotliInput);
var BrotliOutput = (__webpack_require__(/*! ./streams */ "./node_modules/brotli/dec/streams.js").BrotliOutput);
var BrotliBitReader = __webpack_require__(/*! ./bit_reader */ "./node_modules/brotli/dec/bit_reader.js");
var BrotliDictionary = __webpack_require__(/*! ./dictionary */ "./node_modules/brotli/dec/dictionary.js");
var HuffmanCode = (__webpack_require__(/*! ./huffman */ "./node_modules/brotli/dec/huffman.js").HuffmanCode);
var BrotliBuildHuffmanTable = (__webpack_require__(/*! ./huffman */ "./node_modules/brotli/dec/huffman.js").BrotliBuildHuffmanTable);
var Context = __webpack_require__(/*! ./context */ "./node_modules/brotli/dec/context.js");
var Prefix = __webpack_require__(/*! ./prefix */ "./node_modules/brotli/dec/prefix.js");
var Transform = __webpack_require__(/*! ./transform */ "./node_modules/brotli/dec/transform.js");

var kDefaultCodeLength = 8;
var kCodeLengthRepeatCode = 16;
var kNumLiteralCodes = 256;
var kNumInsertAndCopyCodes = 704;
var kNumBlockLengthCodes = 26;
var kLiteralContextBits = 6;
var kDistanceContextBits = 2;

var HUFFMAN_TABLE_BITS = 8;
var HUFFMAN_TABLE_MASK = 0xff;
/* Maximum possible Huffman table size for an alphabet size of 704, max code
 * length 15 and root table bits 8. */
var HUFFMAN_MAX_TABLE_SIZE = 1080;

var CODE_LENGTH_CODES = 18;
var kCodeLengthCodeOrder = new Uint8Array([
  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,
]);

var NUM_DISTANCE_SHORT_CODES = 16;
var kDistanceShortCodeIndexOffset = new Uint8Array([
  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2
]);

var kDistanceShortCodeValueOffset = new Int8Array([
  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3
]);

var kMaxHuffmanTableSize = new Uint16Array([
  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,
  854, 886, 920, 952, 984, 1016, 1048, 1080
]);

function DecodeWindowBits(br) {
  var n;
  if (br.readBits(1) === 0) {
    return 16;
  }
  
  n = br.readBits(3);
  if (n > 0) {
    return 17 + n;
  }
  
  n = br.readBits(3);
  if (n > 0) {
    return 8 + n;
  }
  
  return 17;
}

/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */
function DecodeVarLenUint8(br) {
  if (br.readBits(1)) {
    var nbits = br.readBits(3);
    if (nbits === 0) {
      return 1;
    } else {
      return br.readBits(nbits) + (1 << nbits);
    }
  }
  return 0;
}

function MetaBlockLength() {
  this.meta_block_length = 0;
  this.input_end = 0;
  this.is_uncompressed = 0;
  this.is_metadata = false;
}

function DecodeMetaBlockLength(br) {
  var out = new MetaBlockLength;  
  var size_nibbles;
  var size_bytes;
  var i;
  
  out.input_end = br.readBits(1);
  if (out.input_end && br.readBits(1)) {
    return out;
  }
  
  size_nibbles = br.readBits(2) + 4;
  if (size_nibbles === 7) {
    out.is_metadata = true;
    
    if (br.readBits(1) !== 0)
      throw new Error('Invalid reserved bit');
    
    size_bytes = br.readBits(2);
    if (size_bytes === 0)
      return out;
    
    for (i = 0; i < size_bytes; i++) {
      var next_byte = br.readBits(8);
      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)
        throw new Error('Invalid size byte');
      
      out.meta_block_length |= next_byte << (i * 8);
    }
  } else {
    for (i = 0; i < size_nibbles; ++i) {
      var next_nibble = br.readBits(4);
      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)
        throw new Error('Invalid size nibble');
      
      out.meta_block_length |= next_nibble << (i * 4);
    }
  }
  
  ++out.meta_block_length;
  
  if (!out.input_end && !out.is_metadata) {
    out.is_uncompressed = br.readBits(1);
  }
  
  return out;
}

/* Decodes the next Huffman code from bit-stream. */
function ReadSymbol(table, index, br) {
  var start_index = index;
  
  var nbits;
  br.fillBitWindow();
  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;
  nbits = table[index].bits - HUFFMAN_TABLE_BITS;
  if (nbits > 0) {
    br.bit_pos_ += HUFFMAN_TABLE_BITS;
    index += table[index].value;
    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);
  }
  br.bit_pos_ += table[index].bits;
  return table[index].value;
}

function ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {
  var symbol = 0;
  var prev_code_len = kDefaultCodeLength;
  var repeat = 0;
  var repeat_code_len = 0;
  var space = 32768;
  
  var table = [];
  for (var i = 0; i < 32; i++)
    table.push(new HuffmanCode(0, 0));
  
  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);

  while (symbol < num_symbols && space > 0) {
    var p = 0;
    var code_len;
    
    br.readMoreInput();
    br.fillBitWindow();
    p += (br.val_ >>> br.bit_pos_) & 31;
    br.bit_pos_ += table[p].bits;
    code_len = table[p].value & 0xff;
    if (code_len < kCodeLengthRepeatCode) {
      repeat = 0;
      code_lengths[symbol++] = code_len;
      if (code_len !== 0) {
        prev_code_len = code_len;
        space -= 32768 >> code_len;
      }
    } else {
      var extra_bits = code_len - 14;
      var old_repeat;
      var repeat_delta;
      var new_len = 0;
      if (code_len === kCodeLengthRepeatCode) {
        new_len = prev_code_len;
      }
      if (repeat_code_len !== new_len) {
        repeat = 0;
        repeat_code_len = new_len;
      }
      old_repeat = repeat;
      if (repeat > 0) {
        repeat -= 2;
        repeat <<= extra_bits;
      }
      repeat += br.readBits(extra_bits) + 3;
      repeat_delta = repeat - old_repeat;
      if (symbol + repeat_delta > num_symbols) {
        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');
      }
      
      for (var x = 0; x < repeat_delta; x++)
        code_lengths[symbol + x] = repeat_code_len;
      
      symbol += repeat_delta;
      
      if (repeat_code_len !== 0) {
        space -= repeat_delta << (15 - repeat_code_len);
      }
    }
  }
  if (space !== 0) {
    throw new Error("[ReadHuffmanCodeLengths] space = " + space);
  }
  
  for (; symbol < num_symbols; symbol++)
    code_lengths[symbol] = 0;
}

function ReadHuffmanCode(alphabet_size, tables, table, br) {
  var table_size = 0;
  var simple_code_or_skip;
  var code_lengths = new Uint8Array(alphabet_size);
  
  br.readMoreInput();
  
  /* simple_code_or_skip is used as follows:
     1 for simple code;
     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */
  simple_code_or_skip = br.readBits(2);
  if (simple_code_or_skip === 1) {
    /* Read symbols, codes & code lengths directly. */
    var i;
    var max_bits_counter = alphabet_size - 1;
    var max_bits = 0;
    var symbols = new Int32Array(4);
    var num_symbols = br.readBits(2) + 1;
    while (max_bits_counter) {
      max_bits_counter >>= 1;
      ++max_bits;
    }

    for (i = 0; i < num_symbols; ++i) {
      symbols[i] = br.readBits(max_bits) % alphabet_size;
      code_lengths[symbols[i]] = 2;
    }
    code_lengths[symbols[0]] = 1;
    switch (num_symbols) {
      case 1:
        break;
      case 3:
        if ((symbols[0] === symbols[1]) ||
            (symbols[0] === symbols[2]) ||
            (symbols[1] === symbols[2])) {
          throw new Error('[ReadHuffmanCode] invalid symbols');
        }
        break;
      case 2:
        if (symbols[0] === symbols[1]) {
          throw new Error('[ReadHuffmanCode] invalid symbols');
        }
        
        code_lengths[symbols[1]] = 1;
        break;
      case 4:
        if ((symbols[0] === symbols[1]) ||
            (symbols[0] === symbols[2]) ||
            (symbols[0] === symbols[3]) ||
            (symbols[1] === symbols[2]) ||
            (symbols[1] === symbols[3]) ||
            (symbols[2] === symbols[3])) {
          throw new Error('[ReadHuffmanCode] invalid symbols');
        }
        
        if (br.readBits(1)) {
          code_lengths[symbols[2]] = 3;
          code_lengths[symbols[3]] = 3;
        } else {
          code_lengths[symbols[0]] = 2;
        }
        break;
    }
  } else {  /* Decode Huffman-coded code lengths. */
    var i;
    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);
    var space = 32;
    var num_codes = 0;
    /* Static Huffman code for the code length code lengths */
    var huff = [
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), 
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), 
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)
    ];
    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {
      var code_len_idx = kCodeLengthCodeOrder[i];
      var p = 0;
      var v;
      br.fillBitWindow();
      p += (br.val_ >>> br.bit_pos_) & 15;
      br.bit_pos_ += huff[p].bits;
      v = huff[p].value;
      code_length_code_lengths[code_len_idx] = v;
      if (v !== 0) {
        space -= (32 >> v);
        ++num_codes;
      }
    }
    
    if (!(num_codes === 1 || space === 0))
      throw new Error('[ReadHuffmanCode] invalid num_codes or space');
    
    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);
  }
  
  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);
  
  if (table_size === 0) {
    throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
  }
  
  return table_size;
}

function ReadBlockLength(table, index, br) {
  var code;
  var nbits;
  code = ReadSymbol(table, index, br);
  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;
  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);
}

function TranslateShortCodes(code, ringbuffer, index) {
  var val;
  if (code < NUM_DISTANCE_SHORT_CODES) {
    index += kDistanceShortCodeIndexOffset[code];
    index &= 3;
    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];
  } else {
    val = code - NUM_DISTANCE_SHORT_CODES + 1;
  }
  return val;
}

function MoveToFront(v, index) {
  var value = v[index];
  var i = index;
  for (; i; --i) v[i] = v[i - 1];
  v[0] = value;
}

function InverseMoveToFrontTransform(v, v_len) {
  var mtf = new Uint8Array(256);
  var i;
  for (i = 0; i < 256; ++i) {
    mtf[i] = i;
  }
  for (i = 0; i < v_len; ++i) {
    var index = v[i];
    v[i] = mtf[index];
    if (index) MoveToFront(mtf, index);
  }
}

/* Contains a collection of huffman trees with the same alphabet size. */
function HuffmanTreeGroup(alphabet_size, num_htrees) {
  this.alphabet_size = alphabet_size;
  this.num_htrees = num_htrees;
  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  
  this.htrees = new Uint32Array(num_htrees);
}

HuffmanTreeGroup.prototype.decode = function(br) {
  var i;
  var table_size;
  var next = 0;
  for (i = 0; i < this.num_htrees; ++i) {
    this.htrees[i] = next;
    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);
    next += table_size;
  }
};

function DecodeContextMap(context_map_size, br) {
  var out = { num_htrees: null, context_map: null };
  var use_rle_for_zeros;
  var max_run_length_prefix = 0;
  var table;
  var i;
  
  br.readMoreInput();
  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;

  var context_map = out.context_map = new Uint8Array(context_map_size);
  if (num_htrees <= 1) {
    return out;
  }

  use_rle_for_zeros = br.readBits(1);
  if (use_rle_for_zeros) {
    max_run_length_prefix = br.readBits(4) + 1;
  }
  
  table = [];
  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {
    table[i] = new HuffmanCode(0, 0);
  }
  
  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);
  
  for (i = 0; i < context_map_size;) {
    var code;

    br.readMoreInput();
    code = ReadSymbol(table, 0, br);
    if (code === 0) {
      context_map[i] = 0;
      ++i;
    } else if (code <= max_run_length_prefix) {
      var reps = 1 + (1 << code) + br.readBits(code);
      while (--reps) {
        if (i >= context_map_size) {
          throw new Error("[DecodeContextMap] i >= context_map_size");
        }
        context_map[i] = 0;
        ++i;
      }
    } else {
      context_map[i] = code - max_run_length_prefix;
      ++i;
    }
  }
  if (br.readBits(1)) {
    InverseMoveToFrontTransform(context_map, context_map_size);
  }
  
  return out;
}

function DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {
  var ringbuffer = tree_type * 2;
  var index = tree_type;
  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);
  var block_type;
  if (type_code === 0) {
    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];
  } else if (type_code === 1) {
    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;
  } else {
    block_type = type_code - 2;
  }
  if (block_type >= max_block_type) {
    block_type -= max_block_type;
  }
  block_types[tree_type] = block_type;
  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;
  ++indexes[index];
}

function CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {
  var rb_size = ringbuffer_mask + 1;
  var rb_pos = pos & ringbuffer_mask;
  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;
  var nbytes;

  /* For short lengths copy byte-by-byte */
  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {
    while (len-- > 0) {
      br.readMoreInput();
      ringbuffer[rb_pos++] = br.readBits(8);
      if (rb_pos === rb_size) {
        output.write(ringbuffer, rb_size);
        rb_pos = 0;
      }
    }
    return;
  }

  if (br.bit_end_pos_ < 32) {
    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');
  }

  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */
  while (br.bit_pos_ < 32) {
    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);
    br.bit_pos_ += 8;
    ++rb_pos;
    --len;
  }

  /* Copy remaining bytes from br.buf_ to ringbuffer. */
  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;
  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {
    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;
    for (var x = 0; x < tail; x++)
      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];
    
    nbytes -= tail;
    rb_pos += tail;
    len -= tail;
    br_pos = 0;
  }

  for (var x = 0; x < nbytes; x++)
    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];
  
  rb_pos += nbytes;
  len -= nbytes;

  /* If we wrote past the logical end of the ringbuffer, copy the tail of the
     ringbuffer to its beginning and flush the ringbuffer to the output. */
  if (rb_pos >= rb_size) {
    output.write(ringbuffer, rb_size);
    rb_pos -= rb_size;    
    for (var x = 0; x < rb_pos; x++)
      ringbuffer[x] = ringbuffer[rb_size + x];
  }

  /* If we have more to copy than the remaining size of the ringbuffer, then we
     first fill the ringbuffer from the input and then flush the ringbuffer to
     the output */
  while (rb_pos + len >= rb_size) {
    nbytes = rb_size - rb_pos;
    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {
      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');
    }
    output.write(ringbuffer, rb_size);
    len -= nbytes;
    rb_pos = 0;
  }

  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be
     flushed to the output at a later time. */
  if (br.input_.read(ringbuffer, rb_pos, len) < len) {
    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');
  }

  /* Restore the state of the bit reader. */
  br.reset();
}

/* Advances the bit reader position to the next byte boundary and verifies
   that any skipped bits are set to zero. */
function JumpToByteBoundary(br) {
  var new_bit_pos = (br.bit_pos_ + 7) & ~7;
  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);
  return pad_bits == 0;
}

function BrotliDecompressedSize(buffer) {
  var input = new BrotliInput(buffer);
  var br = new BrotliBitReader(input);
  DecodeWindowBits(br);
  var out = DecodeMetaBlockLength(br);
  return out.meta_block_length;
}

exports.BrotliDecompressedSize = BrotliDecompressedSize;

function BrotliDecompressBuffer(buffer, output_size) {
  var input = new BrotliInput(buffer);
  
  if (output_size == null) {
    output_size = BrotliDecompressedSize(buffer);
  }
  
  var output_buffer = new Uint8Array(output_size);
  var output = new BrotliOutput(output_buffer);
  
  BrotliDecompress(input, output);
  
  if (output.pos < output.buffer.length) {
    output.buffer = output.buffer.subarray(0, output.pos);
  }
  
  return output.buffer;
}

exports.BrotliDecompressBuffer = BrotliDecompressBuffer;

function BrotliDecompress(input, output) {
  var i;
  var pos = 0;
  var input_end = 0;
  var window_bits = 0;
  var max_backward_distance;
  var max_distance = 0;
  var ringbuffer_size;
  var ringbuffer_mask;
  var ringbuffer;
  var ringbuffer_end;
  /* This ring buffer holds a few past copy distances that will be used by */
  /* some special distance codes. */
  var dist_rb = [ 16, 15, 11, 4 ];
  var dist_rb_idx = 0;
  /* The previous 2 bytes used for context. */
  var prev_byte1 = 0;
  var prev_byte2 = 0;
  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];
  var block_type_trees;
  var block_len_trees;
  var br;

  /* We need the slack region for the following reasons:
       - always doing two 8-byte copies for fast backward copying
       - transforms
       - flushing the input ringbuffer when decoding uncompressed blocks */
  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;

  br = new BrotliBitReader(input);

  /* Decode window size. */
  window_bits = DecodeWindowBits(br);
  max_backward_distance = (1 << window_bits) - 16;

  ringbuffer_size = 1 << window_bits;
  ringbuffer_mask = ringbuffer_size - 1;
  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);
  ringbuffer_end = ringbuffer_size;

  block_type_trees = [];
  block_len_trees = [];
  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {
    block_type_trees[x] = new HuffmanCode(0, 0);
    block_len_trees[x] = new HuffmanCode(0, 0);
  }

  while (!input_end) {
    var meta_block_remaining_len = 0;
    var is_uncompressed;
    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];
    var block_type = [ 0 ];
    var num_block_types = [ 1, 1, 1 ];
    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];
    var block_type_rb_index = [ 0 ];
    var distance_postfix_bits;
    var num_direct_distance_codes;
    var distance_postfix_mask;
    var num_distance_codes;
    var context_map = null;
    var context_modes = null;
    var num_literal_htrees;
    var dist_context_map = null;
    var num_dist_htrees;
    var context_offset = 0;
    var context_map_slice = null;
    var literal_htree_index = 0;
    var dist_context_offset = 0;
    var dist_context_map_slice = null;
    var dist_htree_index = 0;
    var context_lookup_offset1 = 0;
    var context_lookup_offset2 = 0;
    var context_mode;
    var htree_command;

    for (i = 0; i < 3; ++i) {
      hgroup[i].codes = null;
      hgroup[i].htrees = null;
    }

    br.readMoreInput();
    
    var _out = DecodeMetaBlockLength(br);
    meta_block_remaining_len = _out.meta_block_length;
    if (pos + meta_block_remaining_len > output.buffer.length) {
      /* We need to grow the output buffer to fit the additional data. */
      var tmp = new Uint8Array( pos + meta_block_remaining_len );
      tmp.set( output.buffer );
      output.buffer = tmp;
    }    
    input_end = _out.input_end;
    is_uncompressed = _out.is_uncompressed;
    
    if (_out.is_metadata) {
      JumpToByteBoundary(br);
      
      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {
        br.readMoreInput();
        /* Read one byte and ignore it. */
        br.readBits(8);
      }
      
      continue;
    }
    
    if (meta_block_remaining_len === 0) {
      continue;
    }
    
    if (is_uncompressed) {
      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;
      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,
                                    ringbuffer, ringbuffer_mask, br);
      pos += meta_block_remaining_len;
      continue;
    }
    
    for (i = 0; i < 3; ++i) {
      num_block_types[i] = DecodeVarLenUint8(br) + 1;
      if (num_block_types[i] >= 2) {
        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);
        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);
        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);
        block_type_rb_index[i] = 1;
      }
    }
    
    br.readMoreInput();
    
    distance_postfix_bits = br.readBits(2);
    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);
    distance_postfix_mask = (1 << distance_postfix_bits) - 1;
    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));
    context_modes = new Uint8Array(num_block_types[0]);

    for (i = 0; i < num_block_types[0]; ++i) {
       br.readMoreInput();
       context_modes[i] = (br.readBits(2) << 1);
    }
    
    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);
    num_literal_htrees = _o1.num_htrees;
    context_map = _o1.context_map;
    
    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);
    num_dist_htrees = _o2.num_htrees;
    dist_context_map = _o2.context_map;
    
    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);
    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);
    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);

    for (i = 0; i < 3; ++i) {
      hgroup[i].decode(br);
    }

    context_map_slice = 0;
    dist_context_map_slice = 0;
    context_mode = context_modes[block_type[0]];
    context_lookup_offset1 = Context.lookupOffsets[context_mode];
    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];
    htree_command = hgroup[1].htrees[0];

    while (meta_block_remaining_len > 0) {
      var cmd_code;
      var range_idx;
      var insert_code;
      var copy_code;
      var insert_length;
      var copy_length;
      var distance_code;
      var distance;
      var context;
      var j;
      var copy_dst;

      br.readMoreInput();
      
      if (block_length[1] === 0) {
        DecodeBlockType(num_block_types[1],
                        block_type_trees, 1, block_type, block_type_rb,
                        block_type_rb_index, br);
        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);
        htree_command = hgroup[1].htrees[block_type[1]];
      }
      --block_length[1];
      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);
      range_idx = cmd_code >> 6;
      if (range_idx >= 2) {
        range_idx -= 2;
        distance_code = -1;
      } else {
        distance_code = 0;
      }
      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);
      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);
      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +
          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);
      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +
          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);
      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];
      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];
      for (j = 0; j < insert_length; ++j) {
        br.readMoreInput();

        if (block_length[0] === 0) {
          DecodeBlockType(num_block_types[0],
                          block_type_trees, 0, block_type, block_type_rb,
                          block_type_rb_index, br);
          block_length[0] = ReadBlockLength(block_len_trees, 0, br);
          context_offset = block_type[0] << kLiteralContextBits;
          context_map_slice = context_offset;
          context_mode = context_modes[block_type[0]];
          context_lookup_offset1 = Context.lookupOffsets[context_mode];
          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];
        }
        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |
                   Context.lookup[context_lookup_offset2 + prev_byte2]);
        literal_htree_index = context_map[context_map_slice + context];
        --block_length[0];
        prev_byte2 = prev_byte1;
        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);
        ringbuffer[pos & ringbuffer_mask] = prev_byte1;
        if ((pos & ringbuffer_mask) === ringbuffer_mask) {
          output.write(ringbuffer, ringbuffer_size);
        }
        ++pos;
      }
      meta_block_remaining_len -= insert_length;
      if (meta_block_remaining_len <= 0) break;

      if (distance_code < 0) {
        var context;
        
        br.readMoreInput();
        if (block_length[2] === 0) {
          DecodeBlockType(num_block_types[2],
                          block_type_trees, 2, block_type, block_type_rb,
                          block_type_rb_index, br);
          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);
          dist_context_offset = block_type[2] << kDistanceContextBits;
          dist_context_map_slice = dist_context_offset;
        }
        --block_length[2];
        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;
        dist_htree_index = dist_context_map[dist_context_map_slice + context];
        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);
        if (distance_code >= num_direct_distance_codes) {
          var nbits;
          var postfix;
          var offset;
          distance_code -= num_direct_distance_codes;
          postfix = distance_code & distance_postfix_mask;
          distance_code >>= distance_postfix_bits;
          nbits = (distance_code >> 1) + 1;
          offset = ((2 + (distance_code & 1)) << nbits) - 4;
          distance_code = num_direct_distance_codes +
              ((offset + br.readBits(nbits)) <<
               distance_postfix_bits) + postfix;
        }
      }

      /* Convert the distance code to the actual distance by possibly looking */
      /* up past distnaces from the ringbuffer. */
      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);
      if (distance < 0) {
        throw new Error('[BrotliDecompress] invalid distance');
      }

      if (pos < max_backward_distance &&
          max_distance !== max_backward_distance) {
        max_distance = pos;
      } else {
        max_distance = max_backward_distance;
      }

      copy_dst = pos & ringbuffer_mask;

      if (distance > max_distance) {
        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&
            copy_length <= BrotliDictionary.maxDictionaryWordLength) {
          var offset = BrotliDictionary.offsetsByLength[copy_length];
          var word_id = distance - max_distance - 1;
          var shift = BrotliDictionary.sizeBitsByLength[copy_length];
          var mask = (1 << shift) - 1;
          var word_idx = word_id & mask;
          var transform_idx = word_id >> shift;
          offset += word_idx * copy_length;
          if (transform_idx < Transform.kNumTransforms) {
            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);
            copy_dst += len;
            pos += len;
            meta_block_remaining_len -= len;
            if (copy_dst >= ringbuffer_end) {
              output.write(ringbuffer, ringbuffer_size);
              
              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)
                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];
            }
          } else {
            throw new Error("Invalid backward reference. pos: " + pos + " distance: " + distance +
              " len: " + copy_length + " bytes left: " + meta_block_remaining_len);
          }
        } else {
          throw new Error("Invalid backward reference. pos: " + pos + " distance: " + distance +
            " len: " + copy_length + " bytes left: " + meta_block_remaining_len);
        }
      } else {
        if (distance_code > 0) {
          dist_rb[dist_rb_idx & 3] = distance;
          ++dist_rb_idx;
        }

        if (copy_length > meta_block_remaining_len) {
          throw new Error("Invalid backward reference. pos: " + pos + " distance: " + distance +
            " len: " + copy_length + " bytes left: " + meta_block_remaining_len);
        }

        for (j = 0; j < copy_length; ++j) {
          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];
          if ((pos & ringbuffer_mask) === ringbuffer_mask) {
            output.write(ringbuffer, ringbuffer_size);
          }
          ++pos;
          --meta_block_remaining_len;
        }
      }

      /* When we get here, we must have inserted at least one literal and */
      /* made a copy of at least length two, therefore accessing the last 2 */
      /* bytes is valid. */
      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];
      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];
    }

    /* Protect pos from overflow, wrap it around at every GB of input data */
    pos &= 0x3fffffff;
  }

  output.write(ringbuffer, pos & ringbuffer_mask);
}

exports.BrotliDecompress = BrotliDecompress;

BrotliDictionary.init();


/***/ }),

/***/ "./node_modules/brotli/dec/dictionary-browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/brotli/dec/dictionary-browser.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js");

/**
 * The normal dictionary-data.js is quite large, which makes it 
 * unsuitable for browser usage. In order to make it smaller, 
 * we read dictionary.bin, which is a compressed version of
 * the dictionary, and on initial load, Brotli decompresses 
 * it's own dictionary. 😜
 */
exports.init = function() {
  var BrotliDecompressBuffer = (__webpack_require__(/*! ./decode */ "./node_modules/brotli/dec/decode.js").BrotliDecompressBuffer);
  var compressed = base64.toByteArray(__webpack_require__(/*! ./dictionary.bin.js */ "./node_modules/brotli/dec/dictionary.bin.js"));
  return BrotliDecompressBuffer(compressed);
};


/***/ }),

/***/ "./node_modules/brotli/dec/dictionary.bin.js":
/*!***************************************************!*\
  !*** ./node_modules/brotli/dec/dictionary.bin.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports="";


/***/ }),

/***/ "./node_modules/brotli/dec/dictionary.js":
/*!***********************************************!*\
  !*** ./node_modules/brotli/dec/dictionary.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Collection of static dictionary words.
*/

var data = __webpack_require__(/*! ./dictionary-data */ "./node_modules/brotli/dec/dictionary-browser.js");
exports.init = function() {
  exports.dictionary = data.init();
};

exports.offsetsByLength = new Uint32Array([
     0,     0,     0,     0,     0,  4096,  9216, 21504, 35840, 44032,
 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536,
 115968, 118528, 119872, 121280, 122016,
]);

exports.sizeBitsByLength = new Uint8Array([
  0,  0,  0,  0, 10, 10, 11, 11, 10, 10,
 10, 10, 10,  9,  9,  8,  7,  7,  8,  7,
  7,  6,  6,  5,  5,
]);

exports.minDictionaryWordLength = 4;
exports.maxDictionaryWordLength = 24;


/***/ }),

/***/ "./node_modules/brotli/dec/huffman.js":
/*!********************************************!*\
  !*** ./node_modules/brotli/dec/huffman.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

function HuffmanCode(bits, value) {
  this.bits = bits;   /* number of bits used for this symbol */
  this.value = value; /* symbol value or table offset */
}

exports.HuffmanCode = HuffmanCode;

var MAX_LENGTH = 15;

/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the
   bit-wise reversal of the len least significant bits of key. */
function GetNextKey(key, len) {
  var step = 1 << (len - 1);
  while (key & step) {
    step >>= 1;
  }
  return (key & (step - 1)) + step;
}

/* Stores code in table[0], table[step], table[2*step], ..., table[end] */
/* Assumes that end is an integer multiple of step */
function ReplicateValue(table, i, step, end, code) {
  do {
    end -= step;
    table[i + end] = new HuffmanCode(code.bits, code.value);
  } while (end > 0);
}

/* Returns the table width of the next 2nd level table. count is the histogram
   of bit lengths for the remaining symbols, len is the code length of the next
   processed symbol */
function NextTableBitSize(count, len, root_bits) {
  var left = 1 << (len - root_bits);
  while (len < MAX_LENGTH) {
    left -= count[len];
    if (left <= 0) break;
    ++len;
    left <<= 1;
  }
  return len - root_bits;
}

exports.BrotliBuildHuffmanTable = function(root_table, table, root_bits, code_lengths, code_lengths_size) {
  var start_table = table;
  var code;            /* current table entry */
  var len;             /* current code length */
  var symbol;          /* symbol index in original or sorted table */
  var key;             /* reversed prefix code */
  var step;            /* step size to replicate values in current table */
  var low;             /* low bits for current root entry */
  var mask;            /* mask for low bits */
  var table_bits;      /* key length of current table */
  var table_size;      /* size of current table */
  var total_size;      /* sum of root table size and 2nd level table sizes */
  var sorted;          /* symbols sorted by code length */
  var count = new Int32Array(MAX_LENGTH + 1);  /* number of codes of each length */
  var offset = new Int32Array(MAX_LENGTH + 1);  /* offsets in sorted table for each length */

  sorted = new Int32Array(code_lengths_size);

  /* build histogram of code lengths */
  for (symbol = 0; symbol < code_lengths_size; symbol++) {
    count[code_lengths[symbol]]++;
  }

  /* generate offsets into sorted symbol table by code length */
  offset[1] = 0;
  for (len = 1; len < MAX_LENGTH; len++) {
    offset[len + 1] = offset[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (symbol = 0; symbol < code_lengths_size; symbol++) {
    if (code_lengths[symbol] !== 0) {
      sorted[offset[code_lengths[symbol]]++] = symbol;
    }
  }
  
  table_bits = root_bits;
  table_size = 1 << table_bits;
  total_size = table_size;

  /* special case code with only one value */
  if (offset[MAX_LENGTH] === 1) {
    for (key = 0; key < total_size; ++key) {
      root_table[table + key] = new HuffmanCode(0, sorted[0] & 0xffff);
    }
    
    return total_size;
  }

  /* fill in root table */
  key = 0;
  symbol = 0;
  for (len = 1, step = 2; len <= root_bits; ++len, step <<= 1) {
    for (; count[len] > 0; --count[len]) {
      code = new HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);
      ReplicateValue(root_table, table + key, step, table_size, code);
      key = GetNextKey(key, len);
    }
  }

  /* fill in 2nd level tables and add pointers to root table */
  mask = total_size - 1;
  low = -1;
  for (len = root_bits + 1, step = 2; len <= MAX_LENGTH; ++len, step <<= 1) {
    for (; count[len] > 0; --count[len]) {
      if ((key & mask) !== low) {
        table += table_size;
        table_bits = NextTableBitSize(count, len, root_bits);
        table_size = 1 << table_bits;
        total_size += table_size;
        low = key & mask;
        root_table[start_table + low] = new HuffmanCode((table_bits + root_bits) & 0xff, ((table - start_table) - low) & 0xffff);
      }
      code = new HuffmanCode((len - root_bits) & 0xff, sorted[symbol++] & 0xffff);
      ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);
      key = GetNextKey(key, len);
    }
  }
  
  return total_size;
}


/***/ }),

/***/ "./node_modules/brotli/dec/prefix.js":
/*!*******************************************!*\
  !*** ./node_modules/brotli/dec/prefix.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Lookup tables to map prefix codes to value ranges. This is used during
   decoding of the block lengths, literal insertion lengths and copy lengths.
*/

/* Represents the range of values belonging to a prefix code: */
/* [offset, offset + 2^nbits) */
function PrefixCodeRange(offset, nbits) {
  this.offset = offset;
  this.nbits = nbits;
}

exports.kBlockLengthPrefixCode = [
  new PrefixCodeRange(1, 2), new PrefixCodeRange(5, 2), new PrefixCodeRange(9, 2), new PrefixCodeRange(13, 2),
  new PrefixCodeRange(17, 3), new PrefixCodeRange(25, 3), new PrefixCodeRange(33, 3), new PrefixCodeRange(41, 3),
  new PrefixCodeRange(49, 4), new PrefixCodeRange(65, 4), new PrefixCodeRange(81, 4), new PrefixCodeRange(97, 4),
  new PrefixCodeRange(113, 5), new PrefixCodeRange(145, 5), new PrefixCodeRange(177, 5), new PrefixCodeRange(209, 5),
  new PrefixCodeRange(241, 6), new PrefixCodeRange(305, 6), new PrefixCodeRange(369, 7), new PrefixCodeRange(497, 8),
  new PrefixCodeRange(753, 9), new PrefixCodeRange(1265, 10), new PrefixCodeRange(2289, 11), new PrefixCodeRange(4337, 12),
  new PrefixCodeRange(8433, 13), new PrefixCodeRange(16625, 24)
];

exports.kInsertLengthPrefixCode = [
  new PrefixCodeRange(0, 0), new PrefixCodeRange(1, 0), new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0),
  new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0), new PrefixCodeRange(6, 1), new PrefixCodeRange(8, 1),
  new PrefixCodeRange(10, 2), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 3), new PrefixCodeRange(26, 3),
  new PrefixCodeRange(34, 4), new PrefixCodeRange(50, 4), new PrefixCodeRange(66, 5), new PrefixCodeRange(98, 5),
  new PrefixCodeRange(130, 6), new PrefixCodeRange(194, 7), new PrefixCodeRange(322, 8), new PrefixCodeRange(578, 9),
  new PrefixCodeRange(1090, 10), new PrefixCodeRange(2114, 12), new PrefixCodeRange(6210, 14), new PrefixCodeRange(22594, 24),
];

exports.kCopyLengthPrefixCode = [
  new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0), new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0),
  new PrefixCodeRange(6, 0), new PrefixCodeRange(7, 0), new PrefixCodeRange(8, 0), new PrefixCodeRange(9, 0),
  new PrefixCodeRange(10, 1), new PrefixCodeRange(12, 1), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 2),
  new PrefixCodeRange(22, 3), new PrefixCodeRange(30, 3), new PrefixCodeRange(38, 4), new PrefixCodeRange(54, 4),
  new PrefixCodeRange(70, 5), new PrefixCodeRange(102, 5), new PrefixCodeRange(134, 6), new PrefixCodeRange(198, 7),
  new PrefixCodeRange(326, 8), new PrefixCodeRange(582, 9), new PrefixCodeRange(1094, 10), new PrefixCodeRange(2118, 24),
];

exports.kInsertRangeLut = [
  0, 0, 8, 8, 0, 16, 8, 16, 16,
];

exports.kCopyRangeLut = [
  0, 8, 0, 8, 16, 0, 16, 8, 16,
];


/***/ }),

/***/ "./node_modules/brotli/dec/streams.js":
/*!********************************************!*\
  !*** ./node_modules/brotli/dec/streams.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

function BrotliInput(buffer) {
  this.buffer = buffer;
  this.pos = 0;
}

BrotliInput.prototype.read = function(buf, i, count) {
  if (this.pos + count > this.buffer.length) {
    count = this.buffer.length - this.pos;
  }
  
  for (var p = 0; p < count; p++)
    buf[i + p] = this.buffer[this.pos + p];
  
  this.pos += count;
  return count;
}

exports.BrotliInput = BrotliInput;

function BrotliOutput(buf) {
  this.buffer = buf;
  this.pos = 0;
}

BrotliOutput.prototype.write = function(buf, count) {
  if (this.pos + count > this.buffer.length)
    throw new Error('Output buffer is not large enough');
  
  this.buffer.set(buf.subarray(0, count), this.pos);
  this.pos += count;
  return count;
};

exports.BrotliOutput = BrotliOutput;


/***/ }),

/***/ "./node_modules/brotli/dec/transform.js":
/*!**********************************************!*\
  !*** ./node_modules/brotli/dec/transform.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Transformations on dictionary words.
*/

var BrotliDictionary = __webpack_require__(/*! ./dictionary */ "./node_modules/brotli/dec/dictionary.js");

var kIdentity       = 0;
var kOmitLast1      = 1;
var kOmitLast2      = 2;
var kOmitLast3      = 3;
var kOmitLast4      = 4;
var kOmitLast5      = 5;
var kOmitLast6      = 6;
var kOmitLast7      = 7;
var kOmitLast8      = 8;
var kOmitLast9      = 9;
var kUppercaseFirst = 10;
var kUppercaseAll   = 11;
var kOmitFirst1     = 12;
var kOmitFirst2     = 13;
var kOmitFirst3     = 14;
var kOmitFirst4     = 15;
var kOmitFirst5     = 16;
var kOmitFirst6     = 17;
var kOmitFirst7     = 18;
var kOmitFirst8     = 19;
var kOmitFirst9     = 20;

function Transform(prefix, transform, suffix) {
  this.prefix = new Uint8Array(prefix.length);
  this.transform = transform;
  this.suffix = new Uint8Array(suffix.length);
  
  for (var i = 0; i < prefix.length; i++)
    this.prefix[i] = prefix.charCodeAt(i);
  
  for (var i = 0; i < suffix.length; i++)
    this.suffix[i] = suffix.charCodeAt(i);
}

var kTransforms = [
     new Transform(         "", kIdentity,       ""           ),
     new Transform(         "", kIdentity,       " "          ),
     new Transform(        " ", kIdentity,       " "          ),
     new Transform(         "", kOmitFirst1,     ""           ),
     new Transform(         "", kUppercaseFirst, " "          ),
     new Transform(         "", kIdentity,       " the "      ),
     new Transform(        " ", kIdentity,       ""           ),
     new Transform(       "s ", kIdentity,       " "          ),
     new Transform(         "", kIdentity,       " of "       ),
     new Transform(         "", kUppercaseFirst, ""           ),
     new Transform(         "", kIdentity,       " and "      ),
     new Transform(         "", kOmitFirst2,     ""           ),
     new Transform(         "", kOmitLast1,      ""           ),
     new Transform(       ", ", kIdentity,       " "          ),
     new Transform(         "", kIdentity,       ", "         ),
     new Transform(        " ", kUppercaseFirst, " "          ),
     new Transform(         "", kIdentity,       " in "       ),
     new Transform(         "", kIdentity,       " to "       ),
     new Transform(       "e ", kIdentity,       " "          ),
     new Transform(         "", kIdentity,       "\""         ),
     new Transform(         "", kIdentity,       "."          ),
     new Transform(         "", kIdentity,       "\">"        ),
     new Transform(         "", kIdentity,       "\n"         ),
     new Transform(         "", kOmitLast3,      ""           ),
     new Transform(         "", kIdentity,       "]"          ),
     new Transform(         "", kIdentity,       " for "      ),
     new Transform(         "", kOmitFirst3,     ""           ),
     new Transform(         "", kOmitLast2,      ""           ),
     new Transform(         "", kIdentity,       " a "        ),
     new Transform(         "", kIdentity,       " that "     ),
     new Transform(        " ", kUppercaseFirst, ""           ),
     new Transform(         "", kIdentity,       ". "         ),
     new Transform(        ".", kIdentity,       ""           ),
     new Transform(        " ", kIdentity,       ", "         ),
     new Transform(         "", kOmitFirst4,     ""           ),
     new Transform(         "", kIdentity,       " with "     ),
     new Transform(         "", kIdentity,       "'"          ),
     new Transform(         "", kIdentity,       " from "     ),
     new Transform(         "", kIdentity,       " by "       ),
     new Transform(         "", kOmitFirst5,     ""           ),
     new Transform(         "", kOmitFirst6,     ""           ),
     new Transform(    " the ", kIdentity,       ""           ),
     new Transform(         "", kOmitLast4,      ""           ),
     new Transform(         "", kIdentity,       ". The "     ),
     new Transform(         "", kUppercaseAll,   ""           ),
     new Transform(         "", kIdentity,       " on "       ),
     new Transform(         "", kIdentity,       " as "       ),
     new Transform(         "", kIdentity,       " is "       ),
     new Transform(         "", kOmitLast7,      ""           ),
     new Transform(         "", kOmitLast1,      "ing "       ),
     new Transform(         "", kIdentity,       "\n\t"       ),
     new Transform(         "", kIdentity,       ":"          ),
     new Transform(        " ", kIdentity,       ". "         ),
     new Transform(         "", kIdentity,       "ed "        ),
     new Transform(         "", kOmitFirst9,     ""           ),
     new Transform(         "", kOmitFirst7,     ""           ),
     new Transform(         "", kOmitLast6,      ""           ),
     new Transform(         "", kIdentity,       "("          ),
     new Transform(         "", kUppercaseFirst, ", "         ),
     new Transform(         "", kOmitLast8,      ""           ),
     new Transform(         "", kIdentity,       " at "       ),
     new Transform(         "", kIdentity,       "ly "        ),
     new Transform(    " the ", kIdentity,       " of "       ),
     new Transform(         "", kOmitLast5,      ""           ),
     new Transform(         "", kOmitLast9,      ""           ),
     new Transform(        " ", kUppercaseFirst, ", "         ),
     new Transform(         "", kUppercaseFirst, "\""         ),
     new Transform(        ".", kIdentity,       "("          ),
     new Transform(         "", kUppercaseAll,   " "          ),
     new Transform(         "", kUppercaseFirst, "\">"        ),
     new Transform(         "", kIdentity,       "=\""        ),
     new Transform(        " ", kIdentity,       "."          ),
     new Transform(    ".com/", kIdentity,       ""           ),
     new Transform(    " the ", kIdentity,       " of the "   ),
     new Transform(         "", kUppercaseFirst, "'"          ),
     new Transform(         "", kIdentity,       ". This "    ),
     new Transform(         "", kIdentity,       ","          ),
     new Transform(        ".", kIdentity,       " "          ),
     new Transform(         "", kUppercaseFirst, "("          ),
     new Transform(         "", kUppercaseFirst, "."          ),
     new Transform(         "", kIdentity,       " not "      ),
     new Transform(        " ", kIdentity,       "=\""        ),
     new Transform(         "", kIdentity,       "er "        ),
     new Transform(        " ", kUppercaseAll,   " "          ),
     new Transform(         "", kIdentity,       "al "        ),
     new Transform(        " ", kUppercaseAll,   ""           ),
     new Transform(         "", kIdentity,       "='"         ),
     new Transform(         "", kUppercaseAll,   "\""         ),
     new Transform(         "", kUppercaseFirst, ". "         ),
     new Transform(        " ", kIdentity,       "("          ),
     new Transform(         "", kIdentity,       "ful "       ),
     new Transform(        " ", kUppercaseFirst, ". "         ),
     new Transform(         "", kIdentity,       "ive "       ),
     new Transform(         "", kIdentity,       "less "      ),
     new Transform(         "", kUppercaseAll,   "'"          ),
     new Transform(         "", kIdentity,       "est "       ),
     new Transform(        " ", kUppercaseFirst, "."          ),
     new Transform(         "", kUppercaseAll,   "\">"        ),
     new Transform(        " ", kIdentity,       "='"         ),
     new Transform(         "", kUppercaseFirst, ","          ),
     new Transform(         "", kIdentity,       "ize "       ),
     new Transform(         "", kUppercaseAll,   "."          ),
     new Transform( "\xc2\xa0", kIdentity,       ""           ),
     new Transform(        " ", kIdentity,       ","          ),
     new Transform(         "", kUppercaseFirst, "=\""        ),
     new Transform(         "", kUppercaseAll,   "=\""        ),
     new Transform(         "", kIdentity,       "ous "       ),
     new Transform(         "", kUppercaseAll,   ", "         ),
     new Transform(         "", kUppercaseFirst, "='"         ),
     new Transform(        " ", kUppercaseFirst, ","          ),
     new Transform(        " ", kUppercaseAll,   "=\""        ),
     new Transform(        " ", kUppercaseAll,   ", "         ),
     new Transform(         "", kUppercaseAll,   ","          ),
     new Transform(         "", kUppercaseAll,   "("          ),
     new Transform(         "", kUppercaseAll,   ". "         ),
     new Transform(        " ", kUppercaseAll,   "."          ),
     new Transform(         "", kUppercaseAll,   "='"         ),
     new Transform(        " ", kUppercaseAll,   ". "         ),
     new Transform(        " ", kUppercaseFirst, "=\""        ),
     new Transform(        " ", kUppercaseAll,   "='"         ),
     new Transform(        " ", kUppercaseFirst, "='"         )
];

exports.kTransforms = kTransforms;
exports.kNumTransforms = kTransforms.length;

function ToUpperCase(p, i) {
  if (p[i] < 0xc0) {
    if (p[i] >= 97 && p[i] <= 122) {
      p[i] ^= 32;
    }
    return 1;
  }
  
  /* An overly simplified uppercasing model for utf-8. */
  if (p[i] < 0xe0) {
    p[i + 1] ^= 32;
    return 2;
  }
  
  /* An arbitrary transform for three byte characters. */
  p[i + 2] ^= 5;
  return 3;
}

exports.transformDictionaryWord = function(dst, idx, word, len, transform) {
  var prefix = kTransforms[transform].prefix;
  var suffix = kTransforms[transform].suffix;
  var t = kTransforms[transform].transform;
  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);
  var i = 0;
  var start_idx = idx;
  var uppercase;
  
  if (skip > len) {
    skip = len;
  }
  
  var prefix_pos = 0;
  while (prefix_pos < prefix.length) {
    dst[idx++] = prefix[prefix_pos++];
  }
  
  word += skip;
  len -= skip;
  
  if (t <= kOmitLast9) {
    len -= t;
  }
  
  for (i = 0; i < len; i++) {
    dst[idx++] = BrotliDictionary.dictionary[word + i];
  }
  
  uppercase = idx - len;
  
  if (t === kUppercaseFirst) {
    ToUpperCase(dst, uppercase);
  } else if (t === kUppercaseAll) {
    while (len > 0) {
      var step = ToUpperCase(dst, uppercase);
      uppercase += step;
      len -= step;
    }
  }
  
  var suffix_pos = 0;
  while (suffix_pos < suffix.length) {
    dst[idx++] = suffix[suffix_pos++];
  }
  
  return idx - start_idx;
}


/***/ }),

/***/ "./node_modules/brotli/decompress.js":
/*!*******************************************!*\
  !*** ./node_modules/brotli/decompress.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./dec/decode */ "./node_modules/brotli/dec/decode.js").BrotliDecompressBuffer;


/***/ }),

/***/ "./node_modules/samsa-core/index.js":
/*!******************************************!*\
  !*** ./node_modules/samsa-core/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SAMSAGLOBAL: () => (/* reexport safe */ _src_samsa_core__WEBPACK_IMPORTED_MODULE_0__.SAMSAGLOBAL),
/* harmony export */   SamsaBuffer: () => (/* reexport safe */ _src_samsa_core__WEBPACK_IMPORTED_MODULE_0__.SamsaBuffer),
/* harmony export */   SamsaFont: () => (/* reexport safe */ _src_samsa_core__WEBPACK_IMPORTED_MODULE_0__.SamsaFont),
/* harmony export */   SamsaGlyph: () => (/* reexport safe */ _src_samsa_core__WEBPACK_IMPORTED_MODULE_0__.SamsaGlyph),
/* harmony export */   SamsaInstance: () => (/* reexport safe */ _src_samsa_core__WEBPACK_IMPORTED_MODULE_0__.SamsaInstance)
/* harmony export */ });
/* harmony import */ var _src_samsa_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/samsa-core */ "./node_modules/samsa-core/src/samsa-core.js");



/***/ }),

/***/ "./node_modules/samsa-core/src/samsa-core.js":
/*!***************************************************!*\
  !*** ./node_modules/samsa-core/src/samsa-core.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SAMSAGLOBAL: () => (/* binding */ SAMSAGLOBAL),
/* harmony export */   SamsaBuffer: () => (/* binding */ SamsaBuffer),
/* harmony export */   SamsaContext: () => (/* binding */ SamsaContext),
/* harmony export */   SamsaFont: () => (/* binding */ SamsaFont),
/* harmony export */   SamsaGlyph: () => (/* binding */ SamsaGlyph),
/* harmony export */   SamsaInstance: () => (/* binding */ SamsaInstance)
/* harmony export */ });

// samsa-core.js
// Version 2.0 alpha


// minify using uglifyjs: ~/node_modules/uglify-js/bin/uglifyjs samsa-core.js > samsa-core.min.js

/*

A note on variable naming. You may see a few of these:

const _runCount = buf.u16; // get the data from the buffer
const runCount = _runCount & 0x7FFF; // refine the data into a useable variable

The underscore prefix is intended to mean the initial version of the variable (_runCount) that needs to be refined into a useable variable (runCount). This way we can 
accurately reflect fields described in the spec, derive some data from flags, then use them under similar name for the purpose decribed by the name.

2023-07-27: All occurrences of "??" nullish coalescing operator have been replaced (it’s not supported by something in the Figma plugin build process). The ?? lines remain as comments above their replacements.

*/

// expose these to the client
const SAMSAGLOBAL = {
	version: "2.0.0",
	browser: typeof window !== "undefined",
	endianness: endianness(),
	littleendian: endianness("LE"),
	bigendian: endianness("BE"),
	fingerprints: { WOFF2: 0x774f4632, TTF: 0x00010000, OTF: 0x4f54544f },
	stdGlyphNames: [".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"],
};

// format codes
const U4 = 0;
const U8 = 1;
const I8 = 2;
const U16 = 3;
const I16 = 4;
const U24 = 5;
const I24 = 6;
const U32 = 7;
const I32 = 8;
const U64 = 9;
const I64 = 10;
const F1616 = 11;
const F214 = 12;
const STR = 13;
const TAG = 14;
const CHAR = 15;

const FORMATS = {

	head: {
		version: [U16,2],
		fontRevision: [U16,2],
		checkSumAdjustment: U32,
		magicNumber: U32,
		flags: U16,
		unitsPerEm: U16,
		created: I64,
		modified: I64,
		xMin: I16,
		yMin: I16,
		xMax: I16,
		yMax: I16,
		macStyle: U16,
		lowestRecPPEM: U16,
		fontDirectionHint: I16,
		indexToLocFormat: I16,
		glyphDataFormat: I16,
	},

	hhea: {
		version: [U16,2],
		ascender: I16,
		descender: I16,
		lineGap: I16,
		advanceWidthMax: U16,
		minLeftSideBearing: I16,
		minRightSideBearing: I16,
		xMaxExtent: I16,
		caretSlopeRise: I16,
		caretSlopeRun: I16,
		caretOffset: I16,
		reserved: [I16,4],
		metricDataFormat: I16,
		numberOfHMetrics: U16,
	},

	vhea: {
		version: [U32],
		_IF_10: [["version", "==", 0x00010000], {
			ascent: I16,
			descent: I16,
			lineGap: I16,
		}],
		_IF_11: [["version", "==", 0x00011000], {
			vertTypoAscender: I16,
			vertTypoDescender: I16,
			vertTypoLineGap: I16,
		}],
		advanceHeightMax: I16,
		minTop: I16,
		minBottom: I16,
		yMaxExtent: I16,
		caretSlopeRise: I16,
		caretSlopeRun: I16,
		caretOffset: I16,
		reserved: [I16,4],
		metricDataFormat: I16,
		numOfLongVerMetrics: U16,
	},
	
	maxp: {
		version: F1616,
		numGlyphs: U16,
		_IF_: [["version", ">=", 1.0], {
			maxPoints: U16,
			maxContours: U16,
			maxCompositePoints: U16,
			maxCompositeContours: U16,
			maxZones: U16,
			maxTwilightPoints: U16,
			maxStorage: U16,
			maxFunctionDefs: U16,
			maxInstructionDefs: U16,
			maxStackElements: U16,
			maxSizeOfInstructions: U16,
			maxComponentElements: U16,
			maxComponentDepth: U16,
		}],
	},
	
	post: {
		version: F1616,
		italicAngle: F1616,
		underlinePosition: I16,
		underlineThickness: I16,
		isFixedPitch: U32,
		minMemType42: U32,
		maxMemType42: U32,
		minMemType1: U32,
		maxMemType1: U32,
		_IF_: [["version", "==", 2.0], {
			numGlyphs: U16,
			glyphNameIndex: [U16, "_ARG0_"],
		}],
		_IF_2: [["version", "==", 2.5], {
			numGlyphs: U16,
			offset: [I8, "numGlyphs"],
		}],
	},

	name: {
		version: U16,
		count: U16,
		storageOffset: U16,
	},

	cmap: {
		version: U16,
		numTables: U16,
	},
	
	"OS/2": {
		version: U16,
		xAvgCharWidth: U16,
		usWeightClass: U16,
		usWidthClass: U16,
		fsType: U16,
		ySubscriptXSize: U16,
		ySubscriptYSize: U16,
		ySubscriptXOffset: U16,
		ySubscriptYOffset: U16,
		ySuperscriptXSize: U16,
		ySuperscriptYSize: U16,
		ySuperscriptXOffset: U16,
		ySuperscriptYOffset: U16,
		yStrikeoutSize: U16,
		yStrikeoutPosition: U16,
		sFamilyClass: U16,
		panose: [U8,10],
		ulUnicodeRange1: U32,
		ulUnicodeRange2: U32,
		ulUnicodeRange3: U32,
		ulUnicodeRange4: U32,
		achVendID: TAG,
		fsSelection: U16,
		usFirstCharIndex: U16,
		usLastCharIndex: U16,
		sTypoAscender: U16,
		sTypoDescender: U16,
		sTypoLineGap: U16,
		usWinAscent: U16,
		usWinDescent: U16,
		_IF_: [["version", ">=", 1], {
			ulCodePageRange1: U32,
			ulCodePageRange2: U32,
		}],
		_IF_2: [["version", ">=", 2], {
			sxHeight: U16,
			sCapHeight: U16,
			usDefaultChar: U16,
			usBreakChar: U16,
			usMaxContext: U16,
		}],
		_IF_3: [["version", ">=", 5], {
			usLowerOpticalPointSize: U16,
			usUpperOpticalPointSize: U16,
		}],
	},

	fvar: {
		version: [U16,2],
		axesArrayOffset: U16,
		reserved: U16,
		axisCount: U16,
		axisSize: U16,
		instanceCount: U16,
		instanceSize: U16
	},

	gvar: {
		version: [U16,2],
		axisCount: U16,
		sharedTupleCount: U16,
		sharedTuplesOffset: U32,
		glyphCount: U16,
		flags: U16,
		glyphVariationDataArrayOffset: U32,
	},

	avar: {
		version: [U16,2],
		reserved: U16,
		axisCount: U16,
	},

	COLR: {
		version: U16,
		numBaseGlyphRecords: U16,
		baseGlyphRecordsOffset: U32,
		layerRecordsOffset: U32,
		numLayerRecords: U16,
		_IF_: [["version", "==", 1], {
			baseGlyphListOffset: U32,
			layerListOffset: U32,
			clipListOffset: U32,
			varIndexMapOffset: U32,
			itemVariationStoreOffset: U32,
		}],
	},

	CPAL: {
		version: U16,
		numPaletteEntries: U16,
		numPalettes: U16,
		numColorRecords: U16,
		colorRecordsArrayOffset: U32,
		colorRecordIndices: [U16,"numPalettes"],
		_IF_: [["version", "==", 1], {
			paletteTypesArrayOffset: U32,
			paletteLabelsArrayOffset: U32,
			paletteEntryLabelsArrayOffset: U32,
		}],
		// colorRecords[U32, "numColorRecords", "@colorRecordsArrayOffset"], // maybe this format
	},

	STAT: {
		version: [U16,2],
		designAxisSize: U16,
		designAxisCount: U16,
		designAxesOffset: U32,
		axisValueCount: U16,
		offsetToAxisValueOffsets: U32,
		elidedFallbackNameID: U16
	},

	MVAR: {
		version: [U16,2],
		reserved: U16,
		valueRecordSize: U16,
		valueRecordCount: U16,
		itemVariationStoreOffset: U16,
	},

	HVAR: {
		version: [U16,2],
		itemVariationStoreOffset: U32,
		advanceWidthMappingOffset: U32,
		lsbMappingOffset: U32,
		rsbMappingOffset: U32,
	},

	VVAR: {
		version: [U16,2],
		itemVariationStoreOffset: U32,
		advanceHeightMappingOffset: U32,
		tsbMappingOffset: U32,
		bsbMappingOffset: U32,
		vOrgMappingOffset: U32,
	},

	TableDirectory: {
		sfntVersion: U32,
		numTables: U16,
		searchRange: U16,
		entrySelector: U16,
		rangeShift: U16,
	},

	TableRecord: {
		tag: TAG,
		checkSum: U32,
		offset: U32,
		length: U32,
	},

	NameRecord: {
		platformID: U16,
		encodingID: U16,
		languageID: U16,
		nameID: U16,
		length: U16,
		stringOffset: U16,
	},
	
	EncodingRecord: {
		platformID: U16,
		encodingID: U16,
		subtableOffset: U32,
	},

	CharacterEncoding: {
		format: U16,
		_IF_: [["format", "<=", 6], {
			length: U16,
			language: U16,
		}],
		_IF_1: [["format", "==", 8], {
			reserved: U16,
			length: U32,
			language: U32,
		}],
		_IF_2: [["format", "==", 10], {
			reserved: U16,
			length: U32,
			language: U32,
		}],
		_IF_3: [["format", "==", 12], {
			reserved: U16,
			length: U32,
			language: U32,
		}],
		_IF_4: [["format", "==", 14], {
			length: U32,
		}],
	},
		
	GlyphHeader: {
		numberOfContours: I16,
		xMin: I16,
		yMin: I16,
		xMax: I16,
		yMax: I16,
	},

	VariationAxisRecord: {
		axisTag: TAG,
		minValue: F1616,
		defaultValue: F1616,
		maxValue: F1616,
		flags: U16,
		axisNameID: U16,
	},
	
	InstanceRecord: {
		subfamilyNameID: U16,
		flags: U16,
		coordinates: [F1616, "_ARG0_"],
		_IF_: [["_ARG1_", "==", true], {
			postScriptNameID: U16,
		}],
	},

	AxisRecord: {
		axisTag: TAG,
		axisNameID: U16,
		axisOrdering: U16,
	},

	AxisValueFormat: {
		format: U16,
		_IF_: [["format", "<", 4], {
			axisIndex: U16,
		}],
		_IF_4: [["format", "==", 4], {
			axisCount: U16,
		}],
		flags: U16,
		valueNameID: U16,
		_IF_1: [["format", "==", 1], {
			value: F1616,
		}],
		_IF_2: [["format", "==", 2], {
			value: F1616,
			rangeMinValue: F1616,
			rangeMaxValue: F1616,
		}],
		_IF_3: [["format", "==", 3], {
			value: F1616,
			linkedValue: F1616,
		}],
	},

	ItemVariationStoreHeader: {
		format: U16,
		regionListOffset: U32,
		itemVariationDataCount: U16,
		itemVariationDataOffsets: [U32, "itemVariationDataCount"],
	},

	ItemVariationData: {
		itemCount: U16,
		wordDeltaCount: U16,
		regionIndexCount: U16,
		regionIndexes: [U16, "regionIndexCount"],
	},

	WOFF2_header: {
		signature: TAG,
		flavor: U32,
		length: U32,
		numTables: U16,
		reserved: U16,
		totalSfntSize: U32,
		totalCompressedSize: U32,
		majorVersion: U16,
		minorVersion: U16,
		metaOffset: U32,
		metaLength: U32,
		metaOrigLength: U32,
		privOffset: U32,
		privLength: U32,
	},

	WOFF2_Transformed_glyf: {
		reserved: U16,
		optionFlags: U16,
		numGlyphs: U16,
		indexFormat: U16,
		nContourStreamSize: U32,
		nPointsStreamSize: U32,
		flagStreamSize: U32,
		glyphStreamSize: U32,
		compositeStreamSize: U32,
		bboxStreamSize: U32,
		instructionStreamSize: U32,
	},
};

// gvar
const GVAR_SHARED_POINT_NUMBERS = 0x8000;
const GVAR_EMBEDDED_PEAK_TUPLE = 0x8000;
const GVAR_INTERMEDIATE_REGION = 0x4000;
const GVAR_PRIVATE_POINT_NUMBERS = 0x2000;
const DELTAS_ARE_ZERO = 0x80;
const DELTAS_ARE_WORDS = 0x40;
const DELTA_RUN_COUNT_MASK = 0x3f;

// COLRv1 paint types (multiple formats have the same type)
const PAINT_LAYERS = 1;
const PAINT_SHAPE = 2;
const PAINT_TRANSFORM = 3;
const PAINT_COMPOSE = 4;

// there are 4 types of paint tables: PAINT_LAYERS, PAINT_TRANSFORM, PAINT_SHAPE, PAINT_COMPOSE
// all DAG leaves are PAINT_COMPOSE
const PAINT_TYPES = [
	0,
	PAINT_LAYERS,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_COMPOSE,
	PAINT_SHAPE,
	PAINT_LAYERS,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_TRANSFORM,
	PAINT_COMPOSE,
];

const PAINT_VAR_OPERANDS = [0,0,1,1,6,6,6,6,4,4,0,0,6,6,2,2,2,2,4,4,1,1,3,3,1,1,3,3,2,2,4,4,0]; // the number of variable operands that each paint has, indexed by paint.format (prepended with a record for invalid paint.format 0) thus 33 items from 0 to 32

// constants for SVG conversion of gradient extend modes and PaintComposite modes
const SVG_GRADIENT_EXTEND_MODES = ["pad", "repeat", "reflect"];
const SVG_PAINTCOMPOSITE_MODES = [
	["-", "clear"], // COMPOSITE_CLEAR
	["-", "src"], // COMPOSITE_SRC
	["-", "dest"], // COMPOSITE_DEST
	["F", "over"], // COMPOSITE_SRC_OVER
	["F", "over"], // COMPOSITE_DEST_OVER
	["F", "in"], // COMPOSITE_SRC_IN
	["F", "in"], // COMPOSITE_DEST_IN
	["F", "out"], // COMPOSITE_SRC_OUT
	["F", "out"], // COMPOSITE_DEST_OUT
	["F", "atop"], // COMPOSITE_SRC_ATOP
	["F", "atop"], // COMPOSITE_DEST_ATOP
	["F", "xor"], // COMPOSITE_XOR
	["F", "lighter"], // COMPOSITE_PLUS (sic)
	["M", "screen"], // COMPOSITE_SCREEN
	["M", "overlay"], // COMPOSITE_OVERLAY
	["M", "darken"], // COMPOSITE_DARKEN
	["M", "lighten"], // COMPOSITE_LIGHTEN
	["M", "color-dodge"], // COMPOSITE_COLOR_DODGE
	["M", "color-burn"], // COMPOSITE_COLOR_BURN
	["M", "hard-light"], // COMPOSITE_HARD_LIGHT
	["M", "soft-light"], // COMPOSITE_SOFT_LIGHT
	["M", "difference"], // COMPOSITE_DIFFERENCE
	["M", "exclusion"], // COMPOSITE_EXCLUSION
	["M", "multiply"], // COMPOSITE_MULTIPLY
	["M", "hue"], // COMPOSITE_HSL_HUE
	["M", "saturation"], // COMPOSITE_HSL_SATURATION
	["M", "color"], // COMPOSITE_HSL_COLOR
	["M", "luminosity"], // COMPOSITE_HSL_LUMINOSITY
  ];


// table decoders are called *after* the first part has been decoded using the FORMATS[<tableTag>] definition
// - font is the SamsaFont object
// - buf is a SamsaBuffer object already set up to cover the table data only, initialized with the table's offset being p=0 and length = its length
// - return (none), but font.<tableTag> now contains more (possibly all) of the decoded table data
const TABLE_DECODERS = {

	"avar": (font, buf) => {
		// avar1 and avar2
		// https://learn.microsoft.com/en-us/typography/opentype/spec/avar
		// https://github.com/harfbuzz/boring-expansion-spec/blob/main/avar2.md
		font.avar.axisSegmentMaps = [];
		console.assert(font.avar.axisCount === font.fvar.axisCount || font.avar.axisCount === 0, `fvar.axisCount (${font.fvar.axisCount}) and avar.axisCount (${font.avar.axisCount}) must match, or else avar.axisCount must be 0`);
		for (let a=0; a<font.avar.axisCount; a++) {
			const positionMapCount = buf.u16;
			font.avar.axisSegmentMaps[a] = [];
			for (let p=0; p<positionMapCount; p++) {
				font.avar.axisSegmentMaps[a].push([ buf.f214, buf.f214 ]);
			}
		}

		// avar2 only
		if (font.avar.version[0] == 2) {
			font.avar.axisIndexMapOffset = buf.u32;
			font.avar.itemVariationStoreOffset = buf.u32; // we use this key, rather that in the spec, so that it will get picked up by the ItemVariationStore decoder along with those of MVAR, HVAR, etc.
			if (font.avar.axisIndexMapOffset) {
				buf.seek(font.avar.axisIndexMapOffset);
				font.avar.axisIndexMap = buf.decodeIndexMap();
			}
			// else we must use implicit mappings later
		}
	},

	"cmap": (font, buf) => {
		// https://learn.microsoft.com/en-us/typography/opentype/spec/cmap
		// - this function works in step with SamsaFont.prototype.glyphIdFromUnicode()
		const cmap = font.cmap;
		cmap.lookup = []; // the main cmap lookup table
		cmap.encodings = {};

		buf.seek(4); // get to the start of the encodingRecords array (we already read version and numTables in the template)

		// step thru the encodingRecords
		// - we only process the encodings we care about
		const uniqueEncodings = {}; // encodings indexed by subtableOffset (if an encoding is referred to twice, we only parse it once)
		for (let t=0; t < cmap.numTables; t++) {
			const encodingRecord = buf.decode(FORMATS.EncodingRecord);
			const platEnc = (encodingRecord.platformID << 16) + encodingRecord.encodingID; // store each platform/encoding pairs as one uint32 so we can easily match them
			cmap.encodings[platEnc] = encodingRecord; // object with "uint32" keys (the key being a platform/encoding pair)
			const bufE = new SamsaBuffer(buf.buffer, buf.byteOffset + encodingRecord.subtableOffset);
			const encoding = bufE.decode(FORMATS.CharacterEncoding);
			if (uniqueEncodings[encodingRecord.subtableOffset] === undefined) {
				// uncached
				switch (encoding.format) {

					case 0: { // "Byte encoding table"
						encoding.mapping = [];
						for (let c=0; c<256; c++) {
							encoding.mapping[c] = bufE.u8;
						}
						break;
					}
	
					case 4: { // "Segment mapping to delta values"
						const segCount = bufE.u16 / 2;
						bufE.seekr(6); // skip binary search params
						encoding.segments = [];
						for (let s=0; s<segCount; s++)
							encoding.segments[s] = {end: bufE.u16};
						bufE.seekr(2); // skip reservedPad
						for (let s=0; s<segCount; s++)
							encoding.segments[s].start = bufE.u16;
						for (let s=0; s<segCount; s++)
							encoding.segments[s].idDelta = bufE.u16;
						encoding.idRangeOffsetOffset = bufE.tell() + encodingRecord.subtableOffset; // recording this absolutely makes things easier later
						for (let s=0; s<segCount; s++)
							encoding.segments[s].idRangeOffset = bufE.u16;
						break;
					}
	
					case 12: { // "Segmented coverage"
						const numGroups = bufE.u32;
						encoding.groups = [];
						for (let grp=0; grp<numGroups; grp++) {
							encoding.groups.push({ start: bufE.u32, end: bufE.u32, glyphId: bufE.u32 });
						}
						break;
					}
	
					case 14: { // "Unicode Variation Sequences"
						if (platEnc === 0x00000005) { // only valid under platEnc 0,5

							//console.log("UVS!")
							const numVarSelectorRecords = bufE.u32;
							encoding.varSelectors = {};

							// we index varSelectors by their varSelector
							for (let v=0; v<numVarSelectorRecords; v++) {
								const varSelector = bufE.u24;
								const defaultUVSOffset = bufE.u32;
								const nonDefaultUVSOffset = bufE.u32;
								const defaultUVS = [];
								const nonDefaultUVS = [];

								if (defaultUVSOffset) {
									bufE.seek(defaultUVSOffset);
									const count = bufE.u32;
									for (let r=0; r<count; r++) {
										defaultUVS.push({ startUnicodeValue: bufE.u24, additionalCount: bufE.u8 });
									}
								}
								
								if (nonDefaultUVSOffset) {
									bufE.seek(nonDefaultUVSOffset);
									const count = bufE.u32;
									for (let r=0; r<count; r++) {
										nonDefaultUVS.push({ unicodeValue: bufE.u24, glyphID: bufE.u16 });
									}
								}

								encoding.varSelectors[varSelector] = {
									defaultUVS: defaultUVS,
									nonDefaultUVS: nonDefaultUVS,
								};

								// so now, we have e.g. varSelector == 0xfe0f, encoding.varSelectors[0xfe0f].defaultUVS == an array of { startUnicodeValue, additionalCount }
							}
						}
						break;
					}
				}

				uniqueEncodings[encodingRecord.subtableOffset] = encoding;
			}
			cmap.encodings[platEnc] = uniqueEncodings[encodingRecord.subtableOffset];
		}
	},

	"COLR": (font, buf) => {
		// https://learn.microsoft.com/en-us/typography/opentype/spec/colr
		const colr = font.COLR;
		if (colr.version <= 1) {

			// COLRv0 offsets (it would be ok to look these up live with binary search)
			colr.baseGlyphRecords = [];
			if (colr.numBaseGlyphRecords) {
				buf.seek(colr.baseGlyphRecordsOffset);
				for (let i=0; i<colr.numBaseGlyphRecords; i++)  {
					const glyphID = buf.u16;
					colr.baseGlyphRecords[glyphID] = [buf.u16, buf.u16]; // firstLayerIndex, numLayers
				}
			}

			if (colr.version == 1) {

				// COLRv1 offsets (it would be ok to look these up live with binary search)
				if (colr.baseGlyphListOffset) {
					buf.seek(colr.baseGlyphListOffset);
					colr.numBaseGlyphPaintRecords = buf.u32;
					colr.baseGlyphPaintRecords = [];
					for (let i=0; i<colr.numBaseGlyphPaintRecords; i++)  {
						const glyphID = buf.u16;
						colr.baseGlyphPaintRecords[glyphID] = colr.baseGlyphListOffset + buf.u32;
					}
				}

				// COLRv1 layerList
				// - from the spec: "The LayerList is only used in conjunction with the BaseGlyphList and, specifically, with PaintColrLayers tables; it is not required if no color glyphs use a PaintColrLayers table. If not used, set layerListOffset to NULL"
				colr.layerList = [];
				if (colr.layerListOffset) {
					buf.seek(colr.layerListOffset);
					colr.numLayerListEntries = buf.u32;
					for (let lyr=0; lyr < colr.numLayerListEntries; lyr++)
						colr.layerList[lyr] = colr.layerListOffset + buf.u32;
				}

				// COLRv1 varIndexMap
				if (colr.varIndexMapOffset) {
					buf.seek(colr.varIndexMapOffset);
					colr.varIndexMap = buf.decodeIndexMap();
				}
			}
		}
	},

	"CPAL": (font, buf) => {
		// load CPAL table fully
		// https://learn.microsoft.com/en-us/typography/opentype/spec/cpal
		const cpal = font.CPAL;
		cpal.colors = [];
		cpal.palettes = [];
		cpal.paletteEntryLabels = [];

		// decode colorRecords
		buf.seek(cpal.colorRecordsArrayOffset);
		for (let c=0; c<cpal.numColorRecords; c++) {
			cpal.colors[c] = buf.u32; // [blue, green, red, alpha as u32]
		}

		// decode paletteEntryLabels
		if (cpal.paletteEntryLabelsArrayOffset) {
			buf.seek(cpal.paletteEntryLabelsArrayOffset);
			for (let pel=0; pel<cpal.numPaletteEntries; pel++) {
				const nameId = buf.u16;
				if (nameId !== 0xffff)
					cpal.paletteEntryLabels[pel] = font.names[nameId];
			}
		}

		// decode palettes: name, type, colors
		for (let pal=0; pal<cpal.numPalettes; pal++) {
			const palette = { name: "", type: 0, colors: [] };

			// name
			if (cpal.paletteLabelsArrayOffset) {
				buf.seek(cpal.paletteLabelsArrayOffset + 2 * pal);
				const nameId = buf.u16;
				if (nameId !== 0xffff) {
					palette.name = font.names[nameId];
				}
			}

			// type
			if (cpal.paletteTypesArrayOffset) {
				buf.seek(cpal.paletteTypesArrayOffset + 2 * pal);
				palette.type = buf.u16;
			}

			// colors
			for (let e=0; e<cpal.numPaletteEntries; e++) {
				palette.colors[e] = cpal.colors[cpal.colorRecordIndices[pal] + e];
			}

			cpal.palettes.push(palette);
		}
	},

	"fvar": (font, buf) => {
		// load fvar axes and instances
		// https://learn.microsoft.com/en-us/typography/opentype/spec/fvar
		const fvar = font.fvar;
		fvar.axes = [];
		buf.seek(fvar.axesArrayOffset);
		for (let a=0; a<fvar.axisCount; a++) {
			fvar.axes.push(buf.decode(FORMATS.VariationAxisRecord));
		}
		fvar.instances = [];
		const includePostScriptNameID = fvar.instanceSize == fvar.axisCount * 4 + 6; // instanceSize determins whether postScriptNameID is included
		for (let i=0; i<fvar.instanceCount; i++) {
			const instance = buf.decode(FORMATS.InstanceRecord, fvar.axisCount, includePostScriptNameID);
			instance.name = font.names[instance.subfamilyNameID];
			fvar.instances.push(instance);
		}
	},

	"gvar": (font, buf) => {
		// decode gvar’s sharedTuples array, so we can precalculate scalars (leave the rest for JIT)
		// https://learn.microsoft.com/en-us/typography/opentype/spec/gvar
		const gvar = font.gvar;
		buf.seek(gvar.sharedTuplesOffset);
		gvar.sharedTuples = [];
		for (let t=0; t < gvar.sharedTupleCount; t++) {
			const tuple = [];
			for (let a=0; a<gvar.axisCount; a++) {
				tuple.push(buf.f214); // these are the peaks, we have to create start and end
			}
			gvar.sharedTuples.push(tuple);
		}

		// Experimental code, intended to precalculate the scalars for the sharedTuples
		// - the issue is that, occasionally (as in Bitter), some sharedTuples are intermediate so need their start and end explicitly read from the TVT for each glyph
		// - the intermediate sharedTuples cannot be precalculated
		// - the logic needs to be that IF the peak tuple is shared AND the tuple is non-intermediate, THEN we can precalculate the scalar
		// - that is equivalent to checking that flag & 0xC000 == 0
		// 
		// this.gvar.sharedRegions = [];
		// buf.seek(this.tables["gvar"].offset + this.gvar.sharedTuplesOffset);
		// for (let t=0; t < this.gvar.sharedTupleCount; t++) {
		// 	const region = [];
		// 	for (let a=0; a<this.gvar.axisCount; a++) {
		// 		const peak = buf.f214; // only the peak is stored, we create start and end
		// 		if (peak < 0) {
		// 			start = -1;
		// 			end = 0;
		// 		}
		// 		else if (peak > 0) {
		// 			start = 0;
		// 			end = 1;
		// 		}
		// 		region.push([start, peak, end]);
		// 	}
		// 	this.gvar.sharedRegions.push(region);
		// }

		// get tupleOffsets array (TODO: we could get these offsets JIT)
		buf.seek(20);
		gvar.tupleOffsets = [];
		for (let g=0; g <= font.maxp.numGlyphs; g++) { // <=
			gvar.tupleOffsets[g] = gvar.flags & 0x01 ? buf.u32 : buf.u16 * 2;
		}
	},

	"hmtx": (font, buf) => {
		// decode horizontal metrics
		// https://learn.microsoft.com/en-us/typography/opentype/spec/hmtx
		const numberOfHMetrics = font.hhea.numberOfHMetrics;
		const hmtx = font.hmtx = [];
		let g=0;
		while (g<numberOfHMetrics) {
			hmtx[g++] = buf.u16;
			buf.seekr(2); // skip over lsb, we only record advance width
		}
		while (g<font.maxp.numGlyphs) {
			hmtx[g++] = hmtx[numberOfHMetrics-1];
		}
	},

	"HVAR": (font, buf) => {
		// https://learn.microsoft.com/en-us/typography/opentype/spec/hvar
		buf.seek(font.HVAR.advanceWidthMappingOffset);
		font.HVAR.indexMap = buf.decodeIndexMap();
	},

	"MVAR": (font, buf) => {
		// decode MVAR value records
		// https://learn.microsoft.com/en-us/typography/opentype/spec/mvar
		font.MVAR.valueRecords = {};
		for (let v=0; v<font.MVAR.valueRecordCount; v++) {
			buf.seek(12 + v * font.MVAR.valueRecordSize); // we are dutifully using valueRecordSize to calculate offset, but it should always be 8 bytes
			font.MVAR.valueRecords[buf.tag] = [buf.u16, buf.u16]; // deltaSetOuterIndex, deltaSetInnerIndex
		}
	},

	"name": (font, buf) => {
		// decode name table strings
		// https://learn.microsoft.com/en-us/typography/opentype/spec/name
		const name = font.name; // font.name is the name table info directly
		font.names = []; // font.names is the names ready to use as UTF8 strings, indexed by nameID in the best platformID/encondingID/languageID match
		name.nameRecords = [];
		for (let r=0; r<name.count; r++) {
			name.nameRecords.push(buf.decode(FORMATS.NameRecord));
		}
		name.nameRecords.forEach(record => {
			buf.seek(name.storageOffset + record.stringOffset);
			record.string = buf.decodeNameString(record.length);
			if (record.platformID == 3 && record.encodingID == 1 && record.languageID == 0x0409) {
				font.names[record.nameID] = record.string; // only record 3, 1, 0x0409 for easy use
			}
		});
	},

	"vmtx": (font, buf) => {
		// decode vertical metrics
		// https://learn.microsoft.com/en-us/typography/opentype/spec/vmtx
		const numOfLongVerMetrics = font.vhea.numOfLongVerMetrics;
		const vmtx = font.vmtx = [];
		let g=0;
		while (g<numOfLongVerMetrics) {
			vmtx[g++] = buf.u16;
			buf.seekr(2); // skip over tsb, we only record advance height
		}
		while (g<font.maxp.numGlyphs) {
			vmtx[g++] = vmtx[numOfLongVerMetrics-1];
		}
	},

	"GSUB": (font, buf) => {
		// decode GSUB
		// https://learn.microsoft.com/en-us/typography/opentype/spec/gsub
		buf.decodeGSUBGPOSheader(font.GSUB);
	},

	"GPOS": (font, buf) => {
		// decode GPOS
		// https://learn.microsoft.com/en-us/typography/opentype/spec/gpos
		buf.decodeGSUBGPOSheader(font.GPOS);
	},

	"GDEF": (font, buf) => {
		// decode GDEF
		// https://learn.microsoft.com/en-us/typography/opentype/spec/gdef
		const gdef = font.GDEF;
		gdef.version = [buf.u16, buf.u16]; // [0] is majorVersion, [1] is minorVersion
		if (gdef.version[0] == 1) {
			gdef.glyphClassDefOffset = buf.u16;
			gdef.attachListOffset = buf.u16;
			gdef.ligCaretListOffset = buf.u16;
			gdef.markAttachClassDefOffset = buf.u16;
			if (gdef.version[1] >= 2) {
				gdef.markGlyphSetsDefOffset = buf.u16;
			}
			if (gdef.version[1] >= 3) {
				gdef.itemVarStoreOffset = buf.u32;
			}
		}
	},
}

// non-exported functions
function endianness (str) {
	const buf = new ArrayBuffer(2);
	const testArray = new Uint16Array(buf);
	const testDataView = new DataView(buf);
	testArray[0] = 0x1234; // LE or BE
	const result = testDataView.getUint16(0); // BE
	const endianness = result == 0x1234 ? "BE" : "LE";
	return str === undefined ? endianness : str == endianness;
}

function clamp (num, min, max) {
	if (num < min)
		num = min;
	else if (num > max)
		num = max;
	return num;
}

function inRange (num, min, max) {
	return num >= min && num <= max;
}

function validateTuple (tuple, axisCount) {
	if (!Array.isArray(tuple))
		return false;
	if (tuple.length != axisCount)
		return false;
	for (let a=0; a < axisCount; a++) {
		 if (typeof tuple[a] != "number" || !inRange(tuple[a], -1, 1))
			return false;
	}
	return true;
}

// take an object of attributes, and returning a string suitable for insertion into an XML tag (such as <svg> or <path>)
function expandAttrs (attrs) {
	let str = "";
	for (let attr in attrs) {
		if (attrs[attr] !== undefined)
			str += ` ${attr}="${attrs[attr]}"`;
	}
	return str;
}

/*

const PAINT_HANDLERS = {
	// handlers for text output
	text: (paint) => { console.log(paint); console.log("------------------------"); },


	// handlers for SVG output
	svg: [
		null, // 0 (does not exist)

		// 1: PaintColrLayers
		(paint, rendering) => {
			console.log("PaintColrLayers");
		},
		
		// 2: PaintSolid
		(paint, rendering) => {
			console.log("PaintSolid");
		},
		null, // 3: PaintVarSolid

		// 4: PaintLinearGradient
		(paint, rendering) => {
			console.log("PaintLinearGradient");
		},
		null, // 5: PaintVarLinearGradient

		// 6: PaintRadialGradient
		(paint, rendering) => {
			console.log("PaintRadialGradient");
		},
		null, // 7: PaintVarRadialGradient

		// 8: PaintSweepGradient
		(paint, rendering) => {
			console.log("PaintSweepGradient");
		},
		null, // 9: PaintVarSweepGradient

		// 10: PaintGlyph
		(paint, rendering) => {
			console.log("PaintGlyph");
		},

		// 11: PaintColrGlyph
		(paint, rendering) => {
			console.log("PaintColrGlyph");
		},

		// 12 : PaintTransform
		(paint, rendering) => {
			console.log("PaintSweepGradient");
		},
		null, // 13: PaintVarTransform

		// 14 : PaintTranslate
		(paint, rendering) => {
			console.log("PaintTranslate");
		},
		null, // 15: PaintVarTranslate

		// 16: PaintScale
		(paint, rendering) => {
			console.log("PaintScale");
		},
		null, // 17: PaintVarScale
		null, // 18: PaintScaleAroundCenter
		null, // 19: PaintVarScaleAroundCenter
		null, // 20: PaintScaleUniform
		null, // 21: PaintVarScaleUniform
		null, // 22: PaintScaleUniformAroundCenter
		null, // 23: PaintVarScaleUniformAroundCenter

		// 24: PaintRotate
		(paint, rendering) => {
			console.log("PaintRotate");
		},
		null, // 25: PaintVarRotate
		null, // 26: PaintRotateAroundCenter
		null, // 27: PaintVarRotateAroundCenter

		// 28: PaintSkew
		(paint, rendering) => {
			console.log("PaintSkew");
		},
		null, // 29: PaintVarSkew
		null, // 30: PaintSkewAroundCenter, PaintVarSkewAroundCenter
		null, // 31: PaintSkewAroundCenter, PaintVarSkewAroundCenter

		// 32: PaintComposite
		(paint, rendering) => {
			console.log("PaintComposite");
		},
	],


	// handlers for SVG output
	_svg: [
		null, // 0 (does not exist)

		// 1: PaintColrLayers
		(paint, rendering) => {
			console.log("PaintColrLayers");
		},
		
		// 2: PaintSolid
		(paint, rendering) => {
			console.log("PaintSolid");
		},
		null, // 3: PaintVarSolid

		// 4: PaintLinearGradient
		(paint, rendering) => {
			console.log("PaintLinearGradient");
		},
		null, // 5: PaintVarLinearGradient

		// 6: PaintRadialGradient
		(paint, rendering) => {
			console.log("PaintRadialGradient");
		},
		null, // 7: PaintVarRadialGradient

		// 8: PaintSweepGradient
		(paint, rendering) => {
			console.log("PaintSweepGradient");
		},
		null, // 9: PaintVarSweepGradient

		// 10: PaintGlyph
		(paint, rendering) => {
			console.log("PaintGlyph");
		},

		// 11: PaintColrGlyph
		(paint, rendering) => {
			console.log("PaintColrGlyph");
		},

		// 12 : PaintTransform
		(paint, rendering) => {
			console.log("PaintSweepGradient");
		},
		null, // 13: PaintVarTransform

		// 14 : PaintTranslate
		(paint, rendering) => {
			console.log("PaintTranslate");
		},
		null, // 15: PaintVarTranslate

		// 16: PaintScale
		(paint, rendering) => {
			console.log("PaintScale");
		},
		null, // 17: PaintVarScale
		null, // 18: PaintScaleAroundCenter
		null, // 19: PaintVarScaleAroundCenter
		null, // 20: PaintScaleUniform
		null, // 21: PaintVarScaleUniform
		null, // 22: PaintScaleUniformAroundCenter
		null, // 23: PaintVarScaleUniformAroundCenter

		// 24: PaintRotate
		(paint, rendering) => {
			console.log("PaintRotate");
		},
		null, // 25: PaintVarRotate
		null, // 26: PaintRotateAroundCenter
		null, // 27: PaintVarRotateAroundCenter

		// 28: PaintSkew
		(paint, rendering) => {
			console.log("PaintSkew");
		},
		null, // 29: PaintVarSkew
		null, // 30: PaintSkewAroundCenter, PaintVarSkewAroundCenter
		null, // 31: PaintSkewAroundCenter, PaintVarSkewAroundCenter

		// 32: PaintComposite
		(paint, rendering) => {
			console.log("PaintComposite");
		},
	],
};
Object.keys(PAINT_HANDLERS).forEach(key => {

	let lastNonNullHandler = null;
	for (let h=1; h<PAINT_HANDLERS[key].length; h++) { // skip the first entry, which is always null
		if (PAINT_HANDLERS[key][h]) {
			lastNonNullHandler = PAINT_HANDLERS[key][h];
		}
		else {
			PAINT_HANDLERS[key][h] = lastNonNullHandler;
		}	
	}
});
*/


// SamsaBuffer is a DataView subclass, constructed from an ArrayBuffer in exactly the same way as DataView
// - the extensions are:
//   * it keeps track of a memory pointer, which is incremented on read/write
//   * it keeps track of a phase, used for nibble reads/writes
//   * it has numerous decode/encode methods for converting complex data structures to and from binary
class SamsaBuffer extends DataView {
	
	constructor(buffer, byteOffset, byteLength) {
		super(buffer, byteOffset, byteLength);
		this.p = 0; // the memory pointer
		this.phase = false; // phase for nibbles

		this.getters = [];
		this.getters[U4] = () => this.u4;
		this.getters[U8] = () => this.u8;
		this.getters[I8] = () => this.i8;
		this.getters[U16] = () => this.u16;
		this.getters[I16] = () => this.i16;
		this.getters[U24] = () => this.u24;
		this.getters[I24] = () => this.i24;
		this.getters[U32] = () => this.u32;
		this.getters[I32] = () => this.i32;
		this.getters[U64] = () => this.u64;
		this.getters[I64] = () => this.i64;
		this.getters[F214] = () => this.f214;
		this.getters[F1616] = () => this.f1616;
		this.getters[TAG] = () => this.tag;
		this.getters[STR] = () => this.tag;

		this.setters = [];
		this.setters[U4] = n => this.u4 = n;
		this.setters[U8] = n => this.u8 = n;
		this.setters[I8] = n => this.i8 = n;
		this.setters[U16] = n => this.u16 = n;
		this.setters[I16] = n => this.i16 = n;
		this.setters[U24] = n => this.u24 = n;
		this.setters[I24] = n => this.i24 = n;
		this.setters[U32] = n => this.u32 = n;
		this.setters[I32] = n => this.i32 = n;
		this.setters[U64] = n => this.u64 = n;
		this.setters[I64] = n => this.i64 = n;
		this.setters[F214] = n => this.f214 = n;
		this.setters[F1616] = n => this.f1616 = n;
		this.setters[TAG] = n => this.tag = n;
		this.setters[STR] = n => this.tag = n;

		return this;
	}

	// get current position
	tell() {
		return this.p;
	}

	// seek to absolute position
	seek(p) {
		this.p = p;
	}

	// seek to relative position
	seekr(p) {
		this.p += p;
	}

	// validate offset
	seekValid(p) {
		return p >= 0 && p < this.byteLength;
	}

	padToModulo(n) {
		while (this.p % n) {
			this.u8 = 0;
		}
	}

	// uint64, int64
	set u64(num) {
		this.setUint32(this.p, num >> 32);
		this.setUint32(this.p+4, num & 0xffffffff);
		this.p += 8;
	}

	get u64() {
		const ret = (this.getUint32(this.p) << 32) + this.getUint32(this.p+4);
		this.p += 8;
		return ret;
	}

	set i64(num) {
		this.setUint32(this.p, num >> 32);
		this.setUint32(this.p+4, num & 0xffffffff);
		this.p += 8;
	}

	get i64() {
		const ret = (this.getUint32(this.p) << 32) + this.getUint32(this.p+4);
		this.p += 8;
		return ret;
	}

	// uint32, int32, f16dot16
	set u32(num) {
		this.setUint32(this.p, num);
		this.p += 4;
	}

	get u32() {
		const ret = this.getUint32(this.p);
		this.p += 4;
		return ret;
	}

	set i32(num) {
		this.setInt32(this.p, num);
		this.p += 4;
	}

	get i32() {
		const ret = this.getInt32(this.p);
		this.p += 4;
		return ret;
	}

	set f1616(num) {
		this.setInt32(this.p, num * 0x10000);
		this.p += 4;
	}

	get f1616() {
		const ret = this.getInt32(this.p) / 0x10000;
		this.p += 4;
		return ret;
	}

	// u32 for WOFF2: https://www.w3.org/TR/WOFF2/#UIntBase128
	get u32_128() {
		let accum = 0;
		for (let i = 0; i < 5; i++) {
			let data_byte = this.getUint8(this.p++);
			if (i == 0 && data_byte == 0x80) return false; // No leading 0's
			if (accum & 0xfe000000) return false; // If any of top 7 bits are set then << 7 would overflow
			accum = (accum << 7) | (data_byte & 0x7f);

			// Spin until most significant bit of data byte is false
			if ((data_byte & 0x80) == 0) {
				return accum;
			}
		}
	}

	// uint24, int24
	set u24(num) {
		this.setUint16(this.p, num >> 8);
		this.setUint8(this.p+2, num & 0xff);
		this.p += 3;
	}

	get u24() {
		const ret = (this.getUint16(this.p) << 8) + this.getUint8(this.p+2);
		this.p += 3;
		return ret;
	}

	set i24(num) {
		this.setUint16(this.p, num >> 8);
		this.setUint8(this.p+2, num & 0xff);
		this.p += 3;
	}

	get i24() {
		const ret = (this.getInt16(this.p) * 256) + this.getUint8(this.p+2);
		this.p += 3;
		return ret;
	}

	// uint16, int16, f2dot14
	set u16(num) {
		this.setUint16(this.p, num);
		this.p += 2;
	}

	get u16() {
		const ret = this.getUint16(this.p);
		this.p += 2;
		return ret;
	}

	// u16 for WOFF2: https://www.w3.org/TR/WOFF2/#255UInt16
	set u16_255(num) {
		const oneMoreByteCode1    = 255;
		const oneMoreByteCode2    = 254;
		const wordCode            = 253;
		const lowestUCode         = 253;
		if (num < 253) {
			this.u8 = num;
		}
		else if (num < 506) {
			this.u8 = oneMoreByteCode1;
			this.u8 = num - lowestUCode;
		}
		else if (num < 759) {
			this.u8 = oneMoreByteCode2;
			this.u8 = num - lowestUCode * 2;
		}
		else {
			this.u8 = wordCode;
			this.u16 = num;
		}
	}

	get u16_255() {
		const oneMoreByteCode1    = 255;
		const oneMoreByteCode2    = 254;
		const wordCode            = 253;
		const lowestUCode         = 253;
		let value;

		const code = this.u8;
		if (code == wordCode) {
			value = this.u8;
			value <<= 8;
			value |= this.u8;
		}
		else if (code == oneMoreByteCode1)  {
			value = this.u8 + lowestUCode;
		}
		else if (code == oneMoreByteCode2) {
			value = this.u8 + lowestUCode*2;
		}
		else {
			value = code;
		}
		return value;
		}

	set i16(num) {
		this.setInt16(this.p, num);
		this.p += 2;
	}

	get i16() {
		const ret = this.getInt16(this.p);
		this.p += 2;
		return ret;
	}

	set f214(num) {
		this.setInt16(this.p, num * 0x4000);
		this.p += 2;
	}

	get f214() {
		const ret = this.getInt16(this.p) / 0x4000;
		this.p += 2;
		return ret;
	}

	// uint8, int8
	set u8(num) {
		this.setUint8(this.p++, num);
	}

	get u8() {
		return this.getUint8(this.p++);
	}

	set i8(num) {
		this.setInt8(this.p++, num);
	}

	get i8() {
		return this.getInt8(this.p++);
	}

	// u4 (nibble)
	set u4(num) {
		// note that writing the high nibble does not zero the low nibble
		const byte = this.getUint8(this.p);
		if (this.phase) {
			this.setUint8(this.p++, (byte & 0xf0) | (num & 0x0f));
		}
		else {
			this.setUint8(this.p, (byte & 0x0f) | (num << 4));
		}
		this.phase = !this.phase;
	}

	get u4() {
		const byte = this.getUint8(this.p);
		this.phase = !this.phase;
		if (this.phase) {
			return (byte & 0xf0) >> 4;
		}
		else {
			this.p++;
			return byte & 0x0f;
		}
	}

	// tag
	set tag(str) {
		let length = 4;
		for (let i = 0; i < length; i++) {
			this.setUint8(this.p++, str.charCodeAt(i));
		}
	}

	get tag() {
		let ret = "";
		let length = 4;
		for (let i = 0; i < length; i++) {
			ret += String.fromCharCode(this.getUint8(this.p++));
		}
		return ret;
	}

	// methods for reading an array: "Pascal" arrays start with a u16 count
	u32array(count) {
		const arr = [];
		while (count--) {
			arr.push(this.getUint32(this.p));
			this.p+=4;
		}
		return arr;
	}

	u16array(count) {
		const arr = [];
		while (count--) {
			arr.push(this.getUint16(this.p));
			this.p+=2;
		}
		return arr;
	}

	i16array(count) {
		const arr = [];
		while (count--) {
			arr.push(this.getInt16(this.p));
			this.p+=2;
		}
		return arr;
	}

	u32pascalArray() {
		const arr = [];
		let count = this.getUint16(this.p);
		this.p+=2;
		while (count--) {
			arr.push(this.getUint32(this.p));
			this.p+=4;
		}
		return arr;
	}

	u16pascalArray() {
		const arr = [];
		let count = this.getUint16(this.p);
		this.p+=2;
		while (count--) {
			arr.push(this.getUint16(this.p));
			this.p+=2;
		}
		return arr;
	}

	i16pascalArray() {
		const arr = [];
		let count = this.getUint16(this.p);
		this.p+=2;
		while (count--) {
			arr.push(this.getInt16(this.p));
			this.p+=2;
		}
		return arr;
	}

	compare(condition) {
		const [a, comparison, b] = condition;
		switch (comparison) {
			case ">=": return a >= b;
			case "<=": return a <= b;
			case "==": return a == b;
			case "<": return a < b;
			case ">": return a > b;
			case "!=": return a != b;
		}
	}

	checkSum(offset=0, length, headTable) {
		if (length === undefined) {
			length = this.byteLength - offset;
		}
		const pSaved = this.tell();
		const mainLength = 4 * Math.floor(length/4);
		let sum = 0;
		this.seek(offset);

		// sum the entire table except any trailing bytes that are not a multiple of 4
		if (!headTable) {
			// this is not the head table :)
			while (this.p < offset + mainLength) {
				sum += this.u32;
				sum &= 0xffffffff;
				sum >>>= 0;
			}
		}
		else {
			// special handling for head table:  skip over the checksumAdjustment field
			while (this.p < offset + mainLength) {
				if (this.p - offset === 8) {
					this.p += 4;
				}
				else {
					sum += this.u32;
					sum &= 0xffffffff;
					sum >>>= 0;
				}
			}
		}

		// sum any trailing bytes
		while (this.p < offset + length) {
			const shift = (3 - (this.p - offset) % 4) * 8;
			sum += this.u8 << shift;
			sum >>>= 0;
		}

		sum &= 0xffffffff; // unnecessary?
		sum >>>= 0; // unnecessary?
		this.seek(pSaved);
		return sum;
	}

	decode(objType, arg0, arg1, arg2) { // TODO: test first for typeof objType[key] == "number" as it’s the most common
		const obj = {};
		Object.keys(objType).forEach(key => {
			if (key.startsWith("_IF_")) {
				// decode conditional block
				const condition = [...objType[key][0]];
				if (condition[0] == "_ARG0_")
					condition[0] = arg0;
				else if (condition[0] == "_ARG1_")
					condition[0] = arg1;
				else if (condition[0] == "_ARG2_")
					condition[0] = arg2;
				else
					condition[0] = obj[condition[0]];

				if (this.compare(condition)) {
					const obj_ = this.decode(objType[key][1]);
					Object.keys(obj_).forEach(key_ => {
						obj[key_] = obj_[key_];
					})
				}
			}
			else if (Array.isArray(objType[key])) {
				// decode array of similar values
				let count;
				if (Number.isInteger(objType[key][1]))
					count = objType[key][1];
				else if (objType[key][1] == "_ARG0_")
					count = arg0;
				else if (objType[key][1] == "_ARG1_")
					count = arg1;
				else if (objType[key][1] == "_ARG2_")
					count = arg2;
				else
					count = obj[objType[key][1]];

				obj[key] = [];
				for (let c=0; c<count; c++) {
					obj[key].push(this.getters[objType[key][0]]());
				}
			}
			else {
				// simple decode
				obj[key] = this.getters[objType[key]]();
			}
		});
		return obj;
	}

	encode(objType, obj, arg0, arg1, arg2) {
		Object.keys(objType).forEach(key => {
			if (key.startsWith("_IF_")) {
				// encode conditional block
				const condition = [...objType[key][0]];
				if (condition[0] == "_ARG0_")
					condition[0] = arg0;
				else if (condition[0] == "_ARG1_")
					condition[0] = arg1;
				else if (condition[0] == "_ARG2_")
					condition[0] = arg2;
				else
					condition[0] = obj[condition[0]];

				if (this.compare(condition)) {
					this.encode(objType[key][1], obj);
				}
			}
			else if (Array.isArray(objType[key])) {
				// encode array of similar values
				let count;
				if (Number.isInteger(objType[key][1]))
					count = objType[key][1];
				else if (objType[key][1] == "_ARG0_")
					count = arg0;
				else if (objType[key][1] == "_ARG1_")
					count = arg1;
				else if (objType[key][1] == "_ARG2_")
					count = arg2;
				else
					count = obj[objType[key][1]];

				for (let c=0; c<count; c++) {
					this.setters[objType[key][0]](obj[key][c]);
				}
			}
			else {
				// simple encode
				this.setters[objType[key]](obj[key]);
			}
		});
	}

	decodeArray (type, length) {
		const getter = this.getters[type];
		const array = [];
		for (let i=0; i<length; i++) {
			array.push(getter());
		}
		return array;
	}

	encodeArray (array, type, length) {
		if (length === undefined) {
			length = array.length;
		}
		const setter = this.setters[type];
		for (let i=0; i<length; i++) {
			setter(array[i]);
		}
	}

	decodeNameString(length) {
		// TODO: handle UTF-8 beyond 16 bits
		let str = "";
		for (let i=0; i<length; i+=2) {
			str += String.fromCharCode(this.u16);
		}
		return str;
	}

	encodeNameString(str) {
		// TODO: handle UTF-8 beyond 16 bits
		for (let c=0; c<str.length; c++) {
			this.u16 = str.charCodeAt(c);
		}
		// TODO: return bytelength? it may be different from str.length*2
	}

	decodeGlyph(numBytes, options={}) {
		
		//const metrics = options.metrics ?? [0, 0, 0, 0];
		const metrics = options.metrics === undefined ? [0, 0, 0, 0] : options.metrics;
		const glyph = numBytes ? new SamsaGlyph(this.decode(FORMATS.GlyphHeader)) : new SamsaGlyph();
		if (options.id)
			glyph.id = options.id;

		// set metrics from the font’s hmtx
		glyph.font = options.font;
		if (glyph.font.hmtx)	{
			metrics[1] = glyph.font.hmtx[glyph.id];
		}

		// empty glyph
		if (numBytes === 0) {
		}

		// simple glyph
		else if (glyph.numberOfContours >= 0) { // note that the spec allows for numberOfContours to be 0, in which case we have a zero-contour glyph but with the possibility of instructions to move phantom points

			glyph.endPts = this.u16array(glyph.numberOfContours); // end points of each contour
			glyph.numPoints = glyph.endPts[glyph.numberOfContours -1] + 1;
			this.seekr(glyph.instructionLength = this.u16); // skip over instructions

			// flags
			const flags = [];
			for (let pt=0; pt<glyph.numPoints; ) {
				let flag = this.u8;
				flags[pt++] = flag;
				if (flag & 0x08) {
					const repeat = this.u8;
					for (let r=0; r<repeat; r++) 
						flags[pt++] = flag;
				}
			}

			// points
			console.assert(flags.length === glyph.numPoints, "Error in glyph decoding: flags.length (%i) != glyph.numPoints (%i) for glyph #%i", flags.length, glyph.numPoints, glyph.id);
			let x_=0, y_=0, x, y;
			flags.forEach((flag,f) => {
				// const mask = flag & 0x12;
				// x += (mask == 0x12 ? this.u8 : (mask == 0x02 ? -this.u8 : (mask == 0x00 ? this.i16 : 0)));
				// glyph.points[f] = [x, 0, flag & 0x01];

				switch (flag & 0x12) { // x
					case 0x00: x = x_ + this.i16; break;
					case 0x02: x = x_ - this.u8; break;
					case 0x10: x = x_; break;
					case 0x12: x = x_ + this.u8; break;
				}
				x_ = x;
				glyph.points[f] = [x, 0, flag & 0x01];
			});
			flags.forEach((flag,f) => {
				switch (flag & 0x24) { // y
					case 0x00: y = y_ + this.i16; break;
					case 0x04: y = y_ - this.u8; break;
					case 0x20: y = y_; break;
					case 0x24: y = y_ + this.u8; break;
				}
				y_ = y;
				glyph.points[f][1] = y;
			});
		}
		
		// composite glyph
		// - we DO add points for composite glyphs: one per component (they are the x and y offsets), and the 4 extra metrics points
		// - when we process these glyphs, we look at glyph.numberOfContours and glyph.points, but NOT glyph.numPoints
		else if (glyph.numberOfContours < 0) {

			glyph.components = [];
			let flag;

			do  {
				const component = {};
				flag = component.flags = this.u16;
				component.glyphId = this.u16;

				// offsets and matched points (ARGS_ARE_XY_VALUES, ARG_1_AND_2_ARE_WORDS)
				switch (flag & 0x0003) {
					case 0x0003: component.offset = [this.i16, this.i16]; break;
					case 0x0002: component.offset = [this.i8, this.i8]; break;
					case 0x0001: component.matchedPoints = [this.u16, this.u16]; break;
					case 0x0000: component.matchedPoints = [this.u8, this.u8]; break;
				}

				// this is cool, we store the offset as it was a point, then we can treat it as a point when acted on by the tvts
				// - I think we should push zeroes if matchedPoints
				if (component.offset) {
					glyph.points.push( [component.offset[0], component.offset[1], 0] );
				}
				else {
					glyph.points.push( [0,0,0] );
				}

				// transformation matrix (if component.transform is undefined, the matrix is [1, 0, 0, 1]): check bits 0x0008, 0x0040, 0x0080
				switch (flag & 0x00c8) {
					case 0x0008: const scale = this.f214; component.transform = [scale, 0, 0, scale]; break;
					case 0x0040: component.transform = [this.f214, 0, 0, this.f214]; break;
					case 0x0080: component.transform = [this.f214, this.f214, this.f214, this.f214]; break;
				}

				// store component
				glyph.components.push(component);

			} while (flag & 0x0020); // MORE_COMPONENTS

			// skip over composite instructions
			if (flag & 0x0100) { // WE_HAVE_INSTR
				this.seekr(glyph.instructionLength = this.u16);
			}

			// pretend these are points so they can be processed by variations
			glyph.numPoints = glyph.points.length; // no metrics points yet
		}

		// TODO: fix the metrics points
		// glyph.points[glyph.numPoints]   = [metrics[0] ?? 0,               0, 0]; // H: Left side bearing point
		// glyph.points[glyph.numPoints+1] = [metrics[1] ?? 0,               0, 0]; // H: Right side bearing point
		// glyph.points[glyph.numPoints+2] = [              0, metrics[2] ?? 0, 0]; // V: Top side bearing point
		// glyph.points[glyph.numPoints+3] = [              0, metrics[3] ?? 0, 0]; // V: Bottom side bearing point
		glyph.points[glyph.numPoints]   = [metrics[0] ? metrics[0] : 0,               0, 0]; // H: Left side bearing point
		glyph.points[glyph.numPoints+1] = [metrics[1] ? metrics[1] : 0,               0, 0]; // H: Right side bearing point
		glyph.points[glyph.numPoints+2] = [              0, metrics[2] ? metrics[2] : 0, 0]; // V: Top side bearing point
		glyph.points[glyph.numPoints+3] = [              0, metrics[3] ? metrics[3] : 0, 0]; // V: Bottom side bearing point
	
		return glyph;
	}

	encodeGlyph(glyph, options = {}) {
		// Encode a glyph into a SamsaBuffer
		//
		// glyph:
		// - a SamsaGlyph object
		//
		// options:
		// - bbox: true = recalculate the bounding box of the glyph (default), false = don’t recalculate
		// - compression: 0 = don’t compress (faster), 1 = compress the glyph (slower, default), 2 = WOFF2 compression (not implemented)
		// - metrics: integer array that receives the 4 metrics points after the main points (if absent, these are not written)
		// - overlapSimple: true = flag the first point of a simple glyph as overlapping (for Apple fonts), false = don’t flag (default)
		// - bigendian: true = the method is allowed to use Int16Array, UInt16Array, Int32Array, UInt32Array, etc. for speed
		// - getMaxCompiledSize: true = return the maximum size of the compiled glyph (no compilation)
		//
		// return value:
		// - size of the compiled glyph in bytes (without padding)
		// - maximum size of the compiled glyph in bytes (without padding) if options.getMaxCompiledSize

		// set default options
		if (options.compression === undefined)
			options.compression = 1; // standard TrueType compression
		if (options.bbox === undefined)
			options.bbox = true; // recalculate bounding box

		if (options.getMaxCompiledSize) {
			if (options.compression == 2) {
				if (glyph.numberOfContours > 0)
					return 
				else if (glyph.numberOfContours < 0)
					return 0;
				else
					return 0;				
			} else {
				if (glyph.numberOfContours > 0)
					return (5*2) + glyph.numberOfContours*2 + 2 + glyph.instructionLength + glyph.numPoints * (2+2+1);
				else if (glyph.numberOfContours < 0)
					return (5*2) + (4+4)*2 * glyph.components.length + 2 + glyph.instructionLength;
				else
					return 0;
			}
		}

		const points = glyph.points;
		const numPoints = glyph.numPoints;
		const tell = this.tell();
	
		// 1. SIMPLE glyph
		if (glyph.numberOfContours > 0) {
	
			let instructionLength = 0;
	
			// recalculate bbox
			if (options.bbox) {
				if (points && points[0]) {
					let xMin, xMax, yMin, yMax;
					[xMin,yMin] = [xMax,yMax] = points[0];
					for (pt=1; pt<numPoints; pt++) {
						const P = points[pt][0], Q = points[pt][1];
						if (P<xMin)
							xMin=P;
						else if (P>xMax)
							xMax=P;
						if (Q<yMin)
							yMin=Q;
						else if (Q>yMax)
							yMax=Q;
					}
					glyph.xMin = Math.floor(xMin); // rounding is in case the points are not integers, thanks to variations or transforms
					glyph.yMin = Math.floor(yMin);
					glyph.xMax = Math.ceil(xMax);
					glyph.yMax = Math.ceil(yMax);
					// TODO: consider that, if this glyph is from a non-default instance, these values will in general not be integers
				}
			}

			// compression: WOFF2 method
			if (options.compression == 2) {

				// docs
				// - https://www.w3.org/TR/WOFF2/#glyf_table_format

				// - here, we use the WOFF2 method to encode flags and coordinates:
				// - numberOfContours [U16]
				// - nPoints [U16][numberOfContours] (number of points in each contour)
				// - flags [U8][numPoints] (1 byte per point, numPoints is total number of points)
				// - points (coordinate data)


				// write numberOfContours
				this.u16 = glyph.numberOfContours;

				// write nPoints array
				let prevEndPt = 0;
				this.phase = false; // set up for nibbles
				for (let c=0; c<glyph.numberOfContours; c++) {
					const contourLength = glyph.endPts[c] - prevEndPt + 1;
					const clNibble = contourLength - 4;
					
					// this is a custom encoding to save space in the contourLengths array
					// write nibbles of contourLength - 4 (contourLength == 3 is rare; contourLength == 2, 1, 0 should not exist but we still handle them inefficiently)
					// - so we handle contours of length 4 to 18 (inclusive) in one nibble
					if (clNibble >= 0 && clNibble < 15) {
						this.u4 = clNibble;
					}
					else {
						this.u4 = 15; // declaration that we will write contourLength literally in 3 nibbles (must be < 4096)
						this.u4 = contourLength & 0x0f00 >> 8;
						this.u4 = contourLength & 0x00f0 >> 4;
						this.u4 = contourLength & 0x000f;
					}

					//this.u16_255 = contourLength; // write U16_255 compressed stream [U16_255 COMPRESSION OF endPts]
					//this.u16 = glyph.endPts[c] - prevEndPt + 1; // write U16 [NO COMPRESSION OF endPts]

					/*
					// get contourLengths stats
					if (contourLengths[contourLength] === undefined)
						contourLengths[contourLength] = 0;
					else 
						contourLengths[contourLength]++;
					*/

					prevEndPt = glyph.endPts[c];
				}

				// conclude nibbling
				if (this.phase) {
					this.u4 = 0;
					this.phase = false;
				}

				// allocate flags array
				const fArray = new Uint8Array(this.buffer, this.p, numPoints)
				this.seekr(numPoints)

				// write point coordinates
				let prevPt = [0,0,1]
				for (let pt=0; pt<glyph.numPoints; pt++) {
	
					const point = glyph.points[pt]
					let dx = point[0] - prevPt[0], dxa = Math.abs(dx)
					let dy = point[1] - prevPt[1], dya = Math.abs(dy)
					let flag
	
					// there are 5 types of dx/dy combo
					// 2 * 8 : 2-byte encodings where dx = 0 or dy = 0
					// 4 * 4 : 2-byte encodings 
					// 3 * 3 : 3-byte encodings
					// 4     : 4-byte encodings
					// 4     : 5-byte encodings
	
					// buckets 0..9: dx==0
					if (dxa == 0 && dya < 1280) {
						flag = 0
						flag += 2 * Math.floor(dya / 256)
						if (dy > 0)
							flag++
						this.u8 = dya % 256 // write coord data (1 byte)
					}
					// buckets 10..19: dy==0
					else if (dya == 0 && dxa < 1280) {
						flag = 10
						flag += 2 * Math.floor(dxa / 256)
						if (dx > 0)
							flag++	
						this.u8 = dxa % 256 // write coord data (1 byte)
					}
					// buckets 20..83: dx and dy are fairly short
					else if (dxa <= 64 && dya <= 64) { // we can use nibbles for dx and dy, so 1 byte
						flag = 20
						flag += 16 * Math.floor((dxa-1) / 16)
						flag += 4 * Math.floor((dya-1) / 16)
						if (dx > 0)
							flag++
						if (dy > 0)
							flag += 2
						let nibx = ((dxa-1) % 16)
						let niby = ((dya-1) % 16)
						this.u8 = (nibx << 4) | niby // write coord data (1 byte)
					}
					// buckets 84..119: dx and dy are not quite so short
					else if (dxa <= 768 && dya <= 768) { // we can use 1 byte for dx, 1 byte for dy
						flag = 84
						flag += 12 * Math.floor((dxa-1) / 256)
						flag += 4 * Math.floor((dya-1) / 256)
						if (dx > 0)
							flag++
						if (dy > 0)
							flag += 2
						this.u8 = (dxa-1) % 256 // write x coord data (1 byte)
						this.u8 = (dya-1) % 256 // write y coord data (1 byte)
					}
					// buckets 120..123
					else if (dxa < 4096 && dya < 4096) {
						flag = 120
						if (dx > 0)
							flag++
						if (dy > 0)
							flag += 2
						this.u16 = dxa << 4 | dya >> 8
						this.u8 = dya % 256
					}
					// buckets 124..127
					else {
						flag = 124
						if (dx > 0)
							flag++
						if (dy > 0)
							flag += 2
						this.u16 = dxa
						this.u16 = dya
					}
	
					// is the point off-curve? if so, set the flag’s most significant bit
					if (point[2] == 0)
						flag |= 0x80
					
					// write the flag into the flag array
					fArray[pt] = flag
	
					// update prevPt
					prevPt = point
				}
			}

			else {

				// options.compression != 2
				let pt;

				// new header with bbox
				this.encode(FORMATS.GlyphHeader, glyph);
		
				// endpoints
				glyph.endPts.forEach(endPt => {
					this.u16 = endPt;
				});
		
				// instructions (none for now)
				this.u16 = instructionLength;
				this.seekr(instructionLength);
		
				// write glyph points

				// compression: none
				if (options.compression == 0) {

					// write uncompressed glyph points (faster in memory and for SSD disks)
					let cx=0;
					let cy=0;

					if (options.bigendian) {
						// Int16Array method
						// - a bit faster, but does not work on LE platforms such as Mac M1
						const fArray = new Uint8Array(this, this.p);
						fArray[0] = points[0][2] & (options.overlapSimple ? 0x40 : 0x00); // first byte may have an overlap flag
						for (pt=1; pt<numPoints; pt++) {
							fArray[pt] = points[pt][2];
						}

						const pArray = new Int16Array(this, this.p + numPoints); // dangerous, since Int16Array uses platform byte order (M1 Mac does)
						for (pt=0; pt<numPoints; pt++) {
							const x = points[pt][0];
							pArray[pt] = x - cx;
							cx = x;
						}
						for (pt=0; pt<numPoints; pt++) {	
							const y = points[pt][1];
							pArray[numPoints+pt] = y - cy;
							cy = y;
						}
						this.seekr(numPoints*5);
					}
					else {
						// DataView method
						this.u8 = points[0][2] & (options.overlapSimple ? 0x40 : 0x00); // first byte may have an overlap flag
						for (pt=1; pt<numPoints; pt++) {
							this.u8 = points[pt][2]; // write 1 byte for flag
						}

						for (pt=0; pt<numPoints; pt++) {
							const x = points[pt][0]
							this.i16 = x - cx; // write 2 bytes for dx
							cx = x;
						}

						for (pt=0; pt<numPoints; pt++) {	
							const y = points[pt][1];
							this.i16 = y - cy; // write 2 bytes for dy
							cy = y;
						}
					}

				}

				// compression: standard TrueType compression
				else if (options.compression == 1) {

					// write compressed glyph points (slower)
					let cx=0, cy=0;
					const dx=[], dy=[], flags=[];
			
					for (pt=0; pt<numPoints; pt++) {
						const X = dx[pt] = Math.round(points[pt][0]) - cx;
						const Y = dy[pt] = Math.round(points[pt][1]) - cy;
						let f = points[pt][2] & 0xc1; // preserve bits 0 (on-curve), 6 (overlaps), 7 (reserved)
						if (X==0)
							f |= 0x10;
						else if (X >= -255 && X <= 255)
							f |= (X > 0 ? 0x12 : 0x02);
		
						if (Y==0)
							f |= 0x20;
						else if (Y >= -255 && Y <= 255)
							f |= (Y > 0 ? 0x24 : 0x04);
		
						flags[pt] = f;
						cx = points[pt][0];
						cy = points[pt][1];
					}
		
					// overlap signal for Apple
					if (options.overlapSimple)
						flags[0] |= 0x40;
		
					// write flags with RLE
					let rpt = 0;
					for (pt=0; pt<numPoints; pt++) {
						if (pt > 0 && rpt < 255 && flags[pt] == flags[pt-1]) {
							rpt++;
						}
						else {
							rpt = 0;
						}
		
						if (rpt<2) {
							this.u8 = flags[pt]; // write without compression (don’t compress 2 consecutive identical bytes)
						}
						else {
							const currentPos = this.tell();
							if (rpt==2) {
								this.seek(currentPos-2);
								this.u8 = flags[pt] | 0x08; // set repeat bit on the pre-previous flag byte
							}
							this.seek(currentPos-1);
							this.u8 = rpt; // write the number of repeats
						}
					}
		
					// write point coordinates
					for (pt=0; pt<numPoints; pt++) {
						if (dx[pt] == 0)
							continue;
						if (dx[pt] >= -255 && dx[pt] <= 255)
							this.u8 = (dx[pt]>0) ? dx[pt] : -dx[pt];
						else
							this.i16 = dx[pt];
					}
					for (pt=0; pt<numPoints; pt++) {
						if (dy[pt] == 0)
							continue;
						if (dy[pt] >= -255 && dy[pt] <= 255)
							this.u8 = (dy[pt]>0) ? dy[pt] : -dy[pt];
						else
							this.i16 = dy[pt];
					}
				}
			}

		} // simple glyph end
	
		// 2. COMPOSITE glyph
		else if (glyph.numberOfContours < 0) {

			// glyph header
			this.encode(FORMATS.GlyphHeader, glyph); // TODO: recalculate composite bbox (tricky in general, not bad for simple translations)
	
			// components
			for (let c=0; c<glyph.components.length; c++) {
				let component = glyph.components[c];
	
				// set up the flags
				let flags = 0;
				if (options.compression == 0) {
					flags |= 0x0001; // ARG_1_AND_2_ARE_WORDS
				}
				else {
					if (   (component.offset && (component.offset[0] < -128 || component.offset[0] > 127 || component.offset[1] < -128 || component.offset[1] > 127))
						|| (component.matchedPoints && (component.matchedPoints[0] > 255 || component.matchedPoints[1] > 255)) ) {
						flags |= 0x0001; // ARG_1_AND_2_ARE_WORDS
					}
				}

				if (component.offset) {
					flags |= 0x0002; // ARGS_ARE_XY_VALUES
				}
				if (c < glyph.components.length-1) {
					flags |= 0x0020; // MORE_COMPONENTS
				}
				if (component.flags & 0x0200) {
					flags |= 0x0200; // USE_MY_METRICS (copy from the original glyph)
				}
				// flag 0x0100 WE_HAVE_INSTRUCTIONS is set to zero

				// TODO: handle transforms
	
				// write this component
				this.u16 = flags;
				this.u16 = component.glyphId;
				if (flags & 0x0002) { // ARGS_ARE_XY_VALUES
					if (flags & 0x0001) { // ARG_1_AND_2_ARE_WORDS
						this.i16 = component.offset[0];
						this.i16 = component.offset[1];
					}
					else {
						this.i8 = component.offset[0];
						this.i8 = component.offset[1];
					}
				}
				else {
					if (flags & 0x0001) { // ARG_1_AND_2_ARE_WORDS
						this.u16 = component.matchedPoints[0];
						this.u16 = component.matchedPoints[1];
					}
					else {
						this.u8 = component.matchedPoints[0];
						this.u8 = component.matchedPoints[1];
					}
				}
			}
		} // composite glyph end
	
		// store metrics (for simple, composite and empty glyphs)
		if (options.metrics) {
			options.metrics[0] = points[numPoints+0][0]; // lsb point, usually 0
			options.metrics[1] = points[numPoints+1][0]; // advance point
			options.metrics[2] = points[numPoints+2][1]; // top metric, usually 0 in horizontal glyphs
			options.metrics[3] = points[numPoints+3][1]; // bottom metric, usually 0 in horizontal glyphs
		}
	
		return this.tell() - tell; // size of binary glyph in bytes

	}

	decodeItemVariationStore() {
		const ivsStart = this.tell();
		const ivs = this.decode(FORMATS.ItemVariationStoreHeader);
		this.seek(ivsStart + ivs.regionListOffset);

		ivs.axisCount = this.u16;
		ivs.regionCount = this.u16;
		ivs.regions = []; // get the regions

		for (let r=0; r<ivs.regionCount; r++) {
			const region = [];
			for (let a=0; a<ivs.axisCount; a++) {
				region[a] = [ this.f214, this.f214, this.f214 ];
			}
			ivs.regions.push(region);
		}

		// decode the ItemVariationDatas
		ivs.ivds = [];
		for (let d=0; d<ivs.itemVariationDataCount; d++) {
			this.seek(ivsStart + ivs.itemVariationDataOffsets[d]);
			const ivd = {
				itemCount: this.u16, // the number of items in each deltaSet
				regionIds: [],
				deltaSets: [],
			};
			let wordDeltaCount = this.u16;
			const regionCount = this.u16;
			const longWords = wordDeltaCount & 0x8000;
			wordDeltaCount &= 0x7fff; // fix the value for use
			console.assert(ivd.itemCount >0, "ivd.itemCount should be >0 but is 0");
			console.assert(wordDeltaCount <= regionCount, "wordDeltaCount should nicely be <= regionCount");
			console.assert(regionCount > 0, "regionCount should be >0 but is 0 (non fatal)", wordDeltaCount,  ivd);
			if (ivd.itemCount > 0 && regionCount > 0 && wordDeltaCount <= regionCount) { // skip bad IVDs (some old font builds have regionCount==0, but they seem harmless if skipped)
	
				// populate regionIndexes
				for (let r=0; r<regionCount; r++) {
					ivd.regionIds.push(this.u16);
				}

				// decode the deltaSets
				for (let d=0; d < ivd.itemCount; d++) {
					const deltaSet = [];
					let r=0;
					while (r < wordDeltaCount) { // don’t replace r with r++ here!
						deltaSet.push(longWords ? this.i32 : this.i16);
						r++;
					}
					while (r < regionCount) { // don’t replace r with r++ here!
						deltaSet.push(longWords ? this.i16 : this.i8);
						r++;
					}
					ivd.deltaSets.push(deltaSet);
				}
				ivs.ivds.push(ivd);
			}
		}
		return ivs;
	}

	// parser for variationIndexMap
	// - converts a compressed binary into an array of outer and inner values
	// - each element in the returned array is an array of 2 elements made of [outer, inner]
	// - deltaSetIndexMaps are always 0-based
	decodeIndexMap() {
		const indexMap = [];
		const format = this.u8;
		const entryFormat = this.u8;
		const mapCount = format === 0 ? this.u16 : this.u32;
		const itemSize = ((entryFormat & 0x30) >> 4) + 1;
		const innerBitCount = (entryFormat & 0x0f) + 1;
		const getters = [0, U8, U16, U24, U32];
		for (let m=0; m<mapCount; m++) {
			const entry = this.getters[getters[itemSize]](); // this.u8, this.u16, this.u24, this.u32
			const outer = entry >>> innerBitCount; // >>> avoids creating negative values (we want 0xffff, not -1)
			const inner = entry & ((1 << innerBitCount) - 1);
			indexMap.push([outer, inner]);
		}
		return indexMap;
	}

	// parse packed pointIds
	// - used in gvar and cvar tables
	// - https://learn.microsoft.com/en-us/typography/opentype/spec/otvarcommonformats#packed-point-numbers
	decodePointIds() {
		const POINTS_ARE_WORDS = 0x80;
		const POINT_RUN_COUNT_MASK = 0x7f;
		const pointIds = [];
		const _count = this.u8;
		const count = _count & POINTS_ARE_WORDS ? (_count & POINT_RUN_COUNT_MASK) * 0x0100 + this.u8 : _count;
		let pointId = 0;
		let c = 0;
		while (c < count) {
			const _runCount = this.u8;
			const runCount = (_runCount & POINT_RUN_COUNT_MASK) + 1;
			const getter = _runCount & POINTS_ARE_WORDS ? this.getters[U16] : this.getters[U8];
			for (let r=0; r < runCount; r++) {
				pointId += getter(); // convert delta ids into absolute ids
				pointIds.push(pointId);
			}
			c += runCount;
		}
		return pointIds;
	}

	// parse packed deltas
	// - used in gvar and cvar tables
	// - https://learn.microsoft.com/en-us/typography/opentype/spec/otvarcommonformats#packed-deltas
	decodeDeltas(count) {
		const deltas = [];
		let d = 0;
		while (d < count) {
			const _runCount = this.u8;
			const runCount = (_runCount & DELTA_RUN_COUNT_MASK) + 1;
			if (_runCount & DELTAS_ARE_ZERO) {
				for (let r=0; r < runCount; r++) {
					deltas[d++] = 0;
				}
			} else {
				const getter = _runCount & DELTAS_ARE_WORDS ? this.getters[I16] : this.getters[I8];
				for (let r=0; r < runCount; r++) {
					deltas[d++] = getter();
				}
			}
		}
		return deltas;
	}

	encodeDeltas(deltas) {
		// deltas are encoded in groups of size [1,64] (0xff & DELTA_RUN_COUNT_MASK + 1 = 64)
		// cost of switching to a new group and back is 2 bytes
		// cost of not switching to zeroes is 2 bytes per delta if we’re in words, 1 byte per delta if we’re in bytes
		// cost of not switching to bytes is 1 byte per delta
		// - ideally we’d like to skip runs of length 1, but let’s ignore that for now
		let d, r;
		const numBytes = [];
		deltas.forEach(delta => {
			numBytes.push((delta === 0) ? 0 : (inRange(delta, -128, 127)) ? 1 : 2);
		});

		// this algo creates a new run for each distinct numBytes section, even those of length 1
		const runs = [];
		d=0;
		r=0;
		while (d<deltas.length) {
			runs[r] = [numBytes[d], 0]; // we store directly 0 to mean 1 delta, 1 to mean 2 deltas, n to mean n+1 deltas, etc.
			let d_ = d+1;
			while (d_<deltas.length && numBytes[d_] == numBytes[d] && runs[r][1] < 63) {
				runs[r][1]++; // 63 = 0x3f is the max value we will store here, meaning 64 deltas in the run
				d_++;
			}
			d = d_;
			r++;
		}

		// write the runs
		d=0;
		runs.forEach(run => {
			const [numBytes, runCount] = run;
			const _runCount = runCount | (numBytes == 2 ? DELTAS_ARE_WORDS : 0) | (numBytes == 0 ? DELTAS_ARE_ZERO : 0);
			this.u8(_runCount); // this incorporates runCount (bits 0-5 and the flag bits 6 and 7)
			if (numBytes > 0) { // write nothing for zero deltas
				for (let i=0; i<=runCount; i++) { // <= 0 means 1 item, 1 means 2 items, etc.
					if (numBytes == 1)
						this.i8(deltas[d++]);
					else if (numBytes == 2)
						this.i16(deltas[d++]);
				}	
			}
		});
	}

	// decodeTvts()
	// - parse the tuple variation tables (tvts), also known as "delta sets with their tuples" for this glyph
	// - we only get here from a gvar or cvar table
	decodeTvts(glyph) {
	
		const tvts = [];
		const font = glyph.font;
		const gvar = font.gvar;
		const axisCount = font.fvar.axisCount;

		const offset = gvar.tupleOffsets[glyph.id];
		const nextOffset = gvar.tupleOffsets[glyph.id+1];

		// do we have tvt data?
		if (nextOffset - offset > 0) {
	
			// jump to the tvt data, record the offset
			this.seek(gvar.glyphVariationDataArrayOffset + offset);
			const tvtStart = this.tell();

			// get tvts header
			const _tupleCount = this.u16;
			const tupleCount = _tupleCount & 0x0FFF;
			const offsetToSerializedData = this.u16;

			// create all the tuples
			for (let t=0; t < tupleCount; t++) {
				const tvt = {
					serializedDataSize: this.u16,
					flags: this.u16, // tupleIndex in the spec
					numPoints: 0,
					sharedTupleId: -1,
					peak: [],
					start: [],
					end: [],
				};

				// move to a region representation, rather than peak, start, end arrays
				// either 
				// region = [[p0,p1,p2,p3],[s0,s1,s2,s3],[e0,e1,e2,e3]]; // fewer objects in general
				// or
				// region = [[p0,s0,e0],[p1,s1,e1],[p2,s2,e2],[p3,s3,e3]]; // more intuitive, and usually axisCount is max 3 or 4
				// also consider a single Int16Array

				const tupleIndex = tvt.flags & 0x0FFF;
				if (tvt.flags & GVAR_EMBEDDED_PEAK_TUPLE) {
					for (let a=0; a<axisCount; a++) {
						tvt.peak[a] = this.f214;
					}
				}
				else {
					tvt.sharedTupleId = tupleIndex;
					tvt.peak = gvar.sharedTuples[tupleIndex]; // set the whole peak array at once, TODO: it would be better if we thought in terms of regions, and assigned complete shared regions
				}

				if (tvt.flags & GVAR_INTERMEDIATE_REGION) {
					for (let a=0; a<axisCount; a++) {
						tvt.start[a] = this.f214;
					}
					for (let a=0; a<axisCount; a++) {
						tvt.end[a] = this.f214;
					}
				}

				// TODO: all these [a] indexes are ugly, think in terms of a region instead, each region having axisCount * [start,peak,end] arrays and optionally having a pre-made scalar
				// fixups
				// I think these are ok because "An intermediate-region tuple variation table additionally has start and end n-tuples".
				// In practice, we could remove this whole block for well-formed fonts, but the spec asks us to force any invalid tuples to null
				// The first "tvt.start[a] === undefined" block seems unnecessary
				for (let a=0; a<axisCount; a++) {
					if (tvt.start[a] === undefined) { // infer starts and ends from peaks: a shared peak *can* have "embedded" start and end tuples (see Bitter variable font)
						if (tvt.peak[a] > 0) {
							tvt.start[a] = 0;
							tvt.end[a] = 1;
						}
						else {
							tvt.start[a] = -1;
							tvt.end[a] = 0;
						}
					}
					else {
						if ((tvt.start[a] > tvt.end[a]) || (tvt.start[a] < 0 && tvt.end[a] > 0)) // force null if invalid
							tvt.start[a] = tvt.end[a] = tvt.peak[a] = 0;
					}
				}
				
				tvts.push(tvt); // store the tvt
			}

			// is our position ok?
			console.assert(this.tell() == tvtStart + offsetToSerializedData, "decodeTvts(): current offset is not ok (this.tell() != tvtStart + offsetToSerializedData)", this.tell(), tvtStart + offsetToSerializedData);

			// get pointIds and deltas from the serialized data
			this.seek(tvtStart + offsetToSerializedData); // jump to the serialized data explicitly		
			const sharedPointIds = _tupleCount & GVAR_SHARED_POINT_NUMBERS ? this.decodePointIds() : undefined; // get the shared pointIds
			for (let t=0; t < tupleCount; t++) { // go thru each tuple
				const tvt = tvts[t];
				const pointIds = tvt.flags & GVAR_PRIVATE_POINT_NUMBERS ? this.decodePointIds() : sharedPointIds; // use private point ids or use the shared point ids
				tvt.allPoints = pointIds.length == 0; // flag special case if all points are used, this triggers IUP!
				const tupleNumPoints = tvt.allPoints ? glyph.points.length : pointIds.length; // how many deltas do we need?
				const xDeltas = this.decodeDeltas(tupleNumPoints);
				const yDeltas = this.decodeDeltas(tupleNumPoints);
				tvt.deltas = [];
				if (tvt.allPoints) {
					for (let pt=0; pt < glyph.points.length; pt++) {
						tvt.deltas[pt] = [xDeltas[pt], yDeltas[pt]];
					}
				}
				else {
					for (let pt=0, pc=0; pt < glyph.points.length; pt++) {
						if (pt < pointIds[pc] || pc >= tupleNumPoints) {
							tvt.deltas[pt] = null; // these points will be moved by IUP
						}
						else {
							tvt.deltas[pt] = [xDeltas[pc], yDeltas[pc]]; // these points will be moved explicitly
							pc++;
						}
					}
					// after this, we no longer need pointIds, right? so it needn’t stick around as a property of the tvt (except for visualization)
				}
			}
		}
		return tvts;
	}

	decodePaint(context = {}) {

		// readOperands()
		// - this reads all the variable operands for a paint (we also use this for non-variable versions of the same paint)
		// - we look up the number of operands needed in PAINT_VAR_OPERANDS, so we can use the same function for all paint formats
		const readOperands = (type) => {
			const count = PAINT_VAR_OPERANDS[paint.format];
			for (let i=0; i<count; i++)
				operands.push(this.getters[type]());
		};
		
		// addVariations()
		// - adds the variation deltas to the operands
		// - the arrow function keeps "this" (the buffer) in scope
		const addVariations = (operands) => {
			const variationsEnabled = true;
			if (!variationsEnabled || paint.format % 2 == 0 || operands.length == 0) // variations enabled; only odd-numbered paint formats have variations; we need operands
				return;
			const varIndexBase = this.u32; // we must read this even if we don’t have an instance, otherwise reading gets out of sync
			if (varIndexBase == 0xffffffff || !context.instance) // no variations for this paint; we need an instance
				return;
			const deltas = context.instance.deltaSets["COLR"];
			for (let i=0; i<operands.length; i++) {
				const index = varIndexBase + i;
				const [outer, inner] = colr.varIndexMapOffset ? colr.varIndexMap[index] : [index >>> 16, index & 0xffff]; // explicit or implicit mapping
				if (outer != 0xffff && inner != 0xffff) {
					operands[i] += deltas[outer][inner];
				}
			}
		};

		// we decode colorLine here, rather than as a method of SamsaBuffer, in order to keep paint in scope and to be able to use addVariations()
		// - unlike other decodeX methods, it sets the data pointer according to the supplied argument, then restores it
		const decodeColorLine = (colorLineOffset) => {
			const tell = this.tell();
			this.seek(paint.offset + colorLineOffset);
			const colorLine = {
				extend: this.u8, // one of EXTEND_PAD (0), EXTEND_REPEAT (1), EXTEND_REFLECT (2)
				numStops: this.u16,
				colorStops: [],
			};
			const operands = [];
			for (let cst=0; cst<colorLine.numStops; cst++) {
				const colorStop = {};
				operands[0] = this.i16; // stopOffset
				colorStop.paletteIndex = this.u16;
				operands[1] = this.i16; // alpha
				addVariations(operands);
				colorStop.stopOffset = operands[0] / 16384;
				colorStop.alpha = operands[1] / 16384;
				colorLine.colorStops.push(colorStop);
			}
			this.seek(tell); // restore the data pointer
			return colorLine;
		};

		const colr = context.font.COLR;
		const paint = {
			offset: this.tell(),
			format: this.u8,
			children: [],
		};
		const operands = [];
		let tell;

		// keep track of paintIds we have used, to avoid infinite recursion
		// - we use an Array (not a Set or anything non-LIFO), since we need to push and pop at the beginning of each decodePaint()
		// - it’s only relevant to test whether the paintId has been used in the path from root to current node
		// - multiple children of the same parent may use the same paintId, for example to fill two shapes the same way
		// - paint.offset is suitable to identify each paint
		if (context.paintIds.includes(paint.offset)) {
			console.error(`decodePaint(): infinite recursion detected: paintId ${paint.offset} is already used in this DAG`);
			return paint; // return what we have found so far
		}
		else {
			context.paintIds.push(paint.offset); // push the paintId: we’ll pop it at the end of this run throught decodePaint(), so it works well for nested paints
		}

		switch (paint.format) {
			case 1: { // PaintColrLayers
				const numLayers = this.u8;
				const firstLayerIndex = this.u32;
				for (let lyr = 0; lyr < numLayers; lyr++) {
					this.seek(colr.layerList[firstLayerIndex + lyr]);
					paint.children.push(this.decodePaint(context)); // recursive
				}
				break;
			}

			case 2: case 3: { // PaintSolid
				paint.paletteIndex = this.u16;
				readOperands(I16);
				addVariations(operands);
				paint.alpha = operands[0] / 0x4000;
				break;
			}

			case 4: case 5: case 6: case 7: case 8: case 9: { // all gradient paints
				const colorLineOffset = this.u24;
				paint.colorLine = decodeColorLine(colorLineOffset);
				readOperands(I16);
				addVariations(operands);
				if (paint.format < 6) { // PaintLinearGradient, PaintVarLinearGradient
					paint.points = [ [operands[0], operands[1]], [operands[2], operands[3]], [operands[4], operands[5]] ];
				}
				else if (paint.format < 8) { // PaintRadialGradient, PaintVarRadialGradient
					paint.points = [ [operands[0], operands[1]], [operands[3], operands[4] ] ];
					paint.radii = [ operands[2], operands[5] ];
				}
				else { // PaintSweepGradient, PaintVarSweepGradient
					paint.center = [operands[0], operands[1]];
					paint.startAngle = operands[2] / 0x4000 * 180;
					paint.endAngle = operands[3] / 0x4000 * 180;	
				}
				break;
			}

			case 10: { // PaintGlyph
				const nextOffset = this.u24;
				paint.glyphID = this.u16; // by assigning glyphid we get an actual shape to use
				this.seek(paint.offset + nextOffset);
				paint.children.push(this.decodePaint(context)); // recursive (but we should only get transforms, more Format 10 tables, and a fill from now on)
				break;
			}

			case 11: { // PaintColrGlyph
				const glyphID = this.u16;
				this.seek(colr.baseGlyphPaintRecords[glyphID]);
				paint.children.push(this.decodePaint(context)); // recursive
				break;
			}

			case 12: case 13: { // PaintTransform, PaintVarTransform
				const nextOffset = this.u24;
				const transformOffset = this.u24;
				tell = this.tell();
				this.seek(paint.offset + transformOffset);
				readOperands(I32);
				this.seek(tell);
				addVariations(operands);
				paint.matrix = [ operands[0]/0x10000, operands[1]/0x10000, operands[2]/0x10000, operands[3]/0x10000, operands[4]/0x10000, operands[5]/0x10000 ];
				this.seek(paint.offset + nextOffset);
				paint.children.push(this.decodePaint(context)); // recursive
				break;
			}

			case 14: case 15: { // PaintTranslate, PaintVarTranslate
				const nextOffset = this.u24;
				readOperands(I16);
				addVariations(operands);
				paint.translate = [ operands[0], operands[1] ];
				this.seek(paint.offset + nextOffset);
				paint.children.push(this.decodePaint(context)); // recursive
				break;
			}

			case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23: { // PaintScale and variant scaling formats
				const nextOffset = this.u24;
				readOperands(I16);
				addVariations(operands);
				let o = 0;
				paint.scale = [ operands[o++]/0x4000 ]; // scaleX
				if (paint.format >= 20)
					paint.scale.push(operands[o++]/0x4000);  // scaleY
				if (paint.format == 18 || paint.format == 19 || paint.format == 22 || paint.format == 23)
					paint.center = [ operands[o++], operands[o++] ]; // centerX, centerY
				this.seek(paint.offset + nextOffset);
				paint.children.push(this.decodePaint(context)); // recursive	
				break;
			}

			case 24: case 25: case 26: case 27: { // PaintRotate, PaintVarRotate, PaintRotateAroundCenter, PaintVarRotateAroundCenter
				const nextOffset = this.u24;
				readOperands(I16);
				addVariations(operands);
				paint.rotate = operands[0]/0x4000 * 180; // we store 1/180 of the rotation angle as F214
				if (paint.format >= 26) {
					paint.center = [ operands[1], operands[2] ];
				}
				this.seek(paint.offset + nextOffset);
				paint.children.push(this.decodePaint(context)); // recursive	
				break;
			}

			case 28: case 29: case 30: case 31: { // PaintSkew, PaintVarSkew, PaintSkewAroundCenter, PaintVarSkewAroundCenter
				const nextOffset = this.u24;
				readOperands(I16);
				addVariations(operands);
				paint.skew = [ operands[0]/0x4000 * 180, operands[1]/0x4000 * 180 ]; // we store 1/180 of the rotation angle as F214
				if (paint.format >= 30) {
					paint.center = [ operands[1], operands[2] ];
				}
				this.seek(paint.offset + nextOffset);
				paint.children.push(this.decodePaint(context)); // recursive	
				break;
			}

			case 32: { // PaintComposite
				const sourcePaintOffset = this.u24;
				paint.compositeMode = this.u8;
				const backdropPaintOffset = this.u24;
				this.seek(paint.offset + sourcePaintOffset);
				paint.children.push(this.decodePaint(context));
				this.seek(paint.offset + backdropPaintOffset);
				paint.children.push(this.decodePaint(context));
				break;	
			}
			
			default: {
				console.error(`Unknown paint.format ${paint.format} (must be 1 <= paint.format <= 32)`)
				break;
			}
		}

		context.paintIds.pop(); // we pop the paintId we pushed at the beginning of this decodePaint(), but might reuse the same paintId in later paints in the same glyph
		return paint; // having recursed the whole paint tree, this is now a DAG
	}

	// decode WOFF2
	// - given WOFF2 data, return a SamsaBuffer (a subclass of DataView) that contains an OFF font
	// - requires a brotli argument, an object with a decompress() method that turns a compressed Buffer into a decompressed Buffer
	// Options:
	// - ignoreChecksums: boolean, default false
	// - ignoreInstructions: boolean, default false
	// - packPoints: boolean, default true (false means larger files but faster OFF creation)
	// - Uint8Array: boolean, default false (true means return a Uint8Array instead of a SamsaBuffer)
	// - tables: if not undefined, it must be an empty array that will receive the table array created in the method
	// - tableDirectory: if not undefined, it must be an empty object that will receive the tableDiretory object created in the method
	decodeWOFF2(options = {}) {

		// we need a bufferObject
		if (!options.bufferObject) {
			return null;
		}

		// we need either a brotli key or a brotliDecompress key
		let decompressFunction;
		if (options.brotli)
			decompressFunction = options.brotli.decompress;
		else if (options.brotliDecompress)
			decompressFunction = options.brotliDecompress;
		else {
			return null;
		}

		// normalize options
		if (options.ignoreChecksums === undefined)
			options.ignoreChecksums = false;
		if (options.ignoreInstructions === undefined)
			options.ignoreInstructions = false;
		if (options.packPoints === undefined)
			options.packPoints = true;

		// read WOFF2 header
		const WOFF2_TABLE_TAGS = ["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"];
		const signature = this.tag;

		// check signature
		if (signature !== "wOF2") {
			console.error("!!!!!!!!!! !!!!!!!!!! Not a WOFF2 file !!!!!!!!!! !!!!!!!!!!");
			return -1;
		}

		// read header (48 bytes)
		this.seekr(-4);
		const header = this.decode(FORMATS.WOFF2_header);

		// read table directory
		const tables = [];
		const tableDirectory = {};
		for (let t=0; t<header.numTables; t++) {
			const table = {};
			let nullTransform = false;
			let flags = this.u8;
			const transformationVersion = (flags & 0xc0) >> 6; // 0..3
			table.tag = (flags & 0x3f) == 0x3f ? this.tag : WOFF2_TABLE_TAGS[flags & 0x3f];
			table.origLength = this.u32_128;
			if (["glyf","loca"].includes(table.tag)) {
				if (transformationVersion == 3)
					nullTransform = true;
			}
			else if (transformationVersion == 0)
				nullTransform = true;
		
			table.transformLength = nullTransform ? 0 : this.u32_128;
		
			// store table in tables array and in tableDirectory object, so we can access by index or by tag
			tables.push(table);
			tableDirectory[table.tag] = table;
		}

		// decompress all the brotli data in compressedBuffer into a single decompressedBuffer
		const compressedBufferStart = this.tell();
		const compressedBuffer = options.bufferObject.from(this.buffer, compressedBufferStart, header.totalCompressedSize); // Buffer, not SamsaBuffer
		const decompressedBuffer = decompressFunction(compressedBuffer); // Buffer, not SamsaBuffer
		
		let locaBuffer;
		let indexToLocFormat = 0; // this, after possibly being set to 1, will be written to head.indexToLocFormat (0=16-bit, 1=32-bit)

		// slice the decompressedBuffer into a SamsaBuffer for each table
		let offset = 0;
		tables.forEach(table => {
			if (table.tag !== "loca") { // loca never has data
				let lengthToUse = table.transformLength ? table.transformLength : table.origLength;
				table.buffer = new SamsaBuffer(decompressedBuffer.buffer, offset, lengthToUse);
				offset += lengthToUse;
			}
		});

		// create SamsaBuffer for output font and a Uint8Array view on it
		const outputBuf = new SamsaBuffer(new ArrayBuffer(25000000)); // hmm, we should allocate more intelligently
		const outputBufU8 = new Uint8Array(outputBuf.buffer); // we can use outputBufU8[outputBuf.p] to write bytes to the current buffer position
		
		// skip header for now, we’ll write it later
		outputBuf.seek(12 + tables.length * 16);
		
		// write each table to outputBuf
		tables.forEach(table => {
			
			table.offset = outputBuf.tell();
			table.checkSum = 0;
			
			switch (table.tag) {
		
				case "glyf": {
					const glyfHeader = table.buffer.decode(FORMATS.WOFF2_Transformed_glyf);
		
					// set up loca buffer: initially we populate as u16, only switching to u32 if we overflow
					tableDirectory.loca.length = (glyfHeader.numGlyphs+1) * 2; // sic 2
					locaBuffer = new SamsaBuffer(new ArrayBuffer(4 * (glyfHeader.numGlyphs+1))); // sic 4
					locaBuffer.u16 = 0;
					
					// set up the parallel streams
					const bufs = {};
					const bufTypes = ["nContour","nPoints","flag","glyph","composite","bbox","instruction"];
					let bufOffset = table.buffer.byteOffset + 36;
					bufTypes.forEach((bufType, b) => {
						const streamSize = glyfHeader[bufType + "StreamSize"]; // WARNING: constructs object property names
						if (streamSize > 0) {
							bufs[bufType] = new SamsaBuffer(table.buffer.buffer, bufOffset, streamSize);
							bufOffset += streamSize;
						}
					});

					// short variable names for common bufs
					const gBuf = bufs.glyph;
			
					const bboxBitmapSize = 4 * Math.ceil(glyfHeader.numGlyphs / 32); // WOFF2 spec: "The total number of bytes in bboxBitmap is equal to 4 * floor((numGlyphs + 31) / 32)"
					bufs.bboxValues = new SamsaBuffer(bufs.bbox.buffer, bufs.bbox.byteOffset + bboxBitmapSize);
					
					const maxNumPoints = 100; // we allow this to grow in those rare occasions
					const unpackedMax = new DataView(new ArrayBuffer(5 * maxNumPoints)); // allocating here means we don’t need to allocate for each glyph
		
					// loop through all glyphs
					let bboxByte;
					for (	let g=0,
							bit=0x80;
				
							g<glyfHeader.numGlyphs;
		
							g++,
							bit = bit == 0x01 ? 0x80 : bit >> 1) { // advance the bit index mask (0x80->0x40->0x20->0x10->0x08->0x04->0x02->0x01->0x80...)
			
						// numberOfContours
						const numberOfContours = bufs.nContour.i16;
						let instructionLength = 0;
						let xMin, yMin, xMax, yMax;
		
						// start writing the glyf data
						const glyphStart = outputBuf.tell();
			
						// is the bbox embedded?
						// - if so, get it now
						// - if not, calculate it after decoding all the points of a simple glyph
						// - it’s an error to have this bit set for empty or composite glyphs
						if (bit == 0x80)
							bboxByte = bufs.bbox.u8; // only read a byte full of bits if we are at the start of that byte
						const bboxIsEmbedded = bboxByte & bit;
						if (bboxIsEmbedded) {
							xMin = bufs.bboxValues.i16;
							yMin = bufs.bboxValues.i16;
							xMax = bufs.bboxValues.i16;
							yMax = bufs.bboxValues.i16;
						}
		
						// skip empty glyphs
						// console.assert(!(numberOfContours < 0 && glyfHeader.compositeStreamSize == 0), "We have a composite glyph but the composite stream is empty.");
						if (numberOfContours !== 0) {
			
							// write numberOfContours and leave space for bbox
							outputBuf.i16 = numberOfContours;
							outputBuf.seekr(8); // skip over the bbox, we write it later
				
							// SIMPLE GLYPH
							if (numberOfContours > 0) {
		
								// transform the nPoints data into an endPts array
								let numPoints = 0;
								for (let c=0; c<numberOfContours; c++) {
									numPoints += bufs.nPoints.u16_255;
									outputBuf.u16 = numPoints - 1; // endPts entry
								}
			
								// create the arrays that we’ll complete
								const glyfFlags = [];
								const dxArray = [];
								const dyArray = [];
		
								// usually we can use the previously allocated unpackedMax, but if the number of points is greater than maxNumPoints, we allocate a new buffer
								const unpacked = numPoints <= maxNumPoints ? unpackedMax : new DataView(new ArrayBuffer(5 * numPoints));
								const unpackedU8 = new Uint8Array(unpacked.buffer, 0, 5 * numPoints); // this is trimmed to exact length so that we can use it with .set() later; note that 5 = 1+2+2 (flag + dx + dy)
		
								// decode the mtx-transformed glyf data into regular glyf data
								// - it would likely be quicker to have all 128 possibilities as individual functions?
								let cx = 0, cy = 0;
								for (let pt=0; pt<numPoints; pt++) {
		
									let flag = bufs.flag.u8;
									let f = 1 - (flag >> 7); // f is the flags byte we build for glyf (on-curve polarity is inverse between glyf and mtx)
									flag = flag & 0x7f; // clear the curve flag

									// this decision tree is faster than the lookup array of 128 functions
									let dx = 0, dy = 0;
									let xSign = 0, ySign = 0;
									let xDelta = 0, yDelta = 0;
									let base, xy;
			
									if (flag < 10) {
										// x = 0, y is 8-bit
										ySign = (flag & 0x01) ? 1 : -1;
										yDelta = (flag >> 1) * 256;
										dy = ySign * (yDelta + gBuf.u8);
									}
									else if (flag < 20) {
										// x is 8-bit, y = 0
										xSign = (flag & 0x01) ? 1 : -1;
										xDelta = ((flag - 10) >> 1) * 256;
										dx = xSign * (xDelta + gBuf.u8);
									}
									else {
										xSign = (flag & 0x01) ? 1 : -1;
										ySign = (flag & 0x02) ? 1 : -1;
										let x, y;
			
										if (flag < 84) {
											// x and y are 4-bit
											base = flag - 20;
											xDelta = ((base >> 4)) * 16 + 1;
											yDelta = ((base % 16) >> 2) * 16 + 1;
											xy = gBuf.u8;
											x = xy >> 4;
											y = xy & 0x0f;
										}
										else if (flag < 120) {
											// x and y are 8-bit
											base = flag - 84;
											xDelta = Math.floor(base / 12) * 256 + 1;
											yDelta = ((base % 12) >> 2) * 256 + 1;
											x = gBuf.u8;
											y = gBuf.u8;
										}
										else if (flag < 124) {
											// x and y are 12-bit
											x = gBuf.u8 << 4;
											xy = gBuf.u8;
											x += xy >> 4;
											y = gBuf.u8 + ((xy & 0x0f) << 8);
										}
										else {
											// x and y are 16-bit
											x = gBuf.u16;
											y = gBuf.u16;
										}
										dx = xSign * (xDelta + x);
										dy = ySign * (yDelta + y);
									}
			
									// update the absolute point values
									cx += dx;
									cy += dy;
			
									// update bbox
									if (!bboxIsEmbedded) {
										if (pt == 0) {
											xMin = xMax = cx;
											yMin = yMax = cy;
										}
										else {
											if (cx < xMin) xMin = cx; // this is much faster than Math.min()
											if (cy < yMin) yMin = cy;
											if (cx > xMax) xMax = cx;
											if (cy > yMax) yMax = cy;
										}
									}
			
									// prepare dxArray and dyArray for decompressed buffer: note that we do not push 0 values!
									if (options.packPoints) {
										if (dx==0)
											f |= 0x10;
										else {
											if (dx >= -255 && dx <= 255)
												f |= (dx > 0 ? 0x12 : 0x02);
											dxArray.push(dx);
										}
		
										if (dy==0)
											f |= 0x20;
										else {
											if (dy >= -255 && dy <= 255)
												f |= (dy > 0 ? 0x24 : 0x04);
											dyArray.push(dy);
										}
		
										glyfFlags[pt] = f; // the curve bit is already set
									}
									else {
										// write to a buffer here, copy it to outputBuf later
										// - we already know the relative positions of f, dx and dy so we can write them all now without intermediate storage
										unpackedU8[pt] = f;
										unpacked.setInt16(pt * 2 + numPoints,     dx);
										unpacked.setInt16(pt * 2 + numPoints * 3, dy);
									}
								}
		
								// handle instructions
								instructionLength = gBuf.u16_255; // always read instructionLength from the glyph stream
								if (instructionLength == 0 || options.ignoreInstructions) {
									// no instructions
									outputBuf.u16 = 0;
								}
								else {
									// yes instructions
									outputBuf.u16 = instructionLength;
									const instrBuf = new Uint8Array(bufs.instruction.buffer, bufs.instruction.byteOffset + bufs.instruction.tell(), instructionLength);
									outputBufU8.set(instrBuf, outputBuf.tell()); // copy instrBuf to the output stream at location outputBuf.tell()
									bufs.instruction.seekr(instructionLength); // update source pointer
									outputBuf.seekr(instructionLength); // update target pointer
								}
		
								// we have all the flags and all the dx and dy values
								if (options.packPoints) {

									// 1. write flags with RLE
									let rpt = 0;
									outputBuf.u8 = glyfFlags[0]; // means we don’t check pt>0 in the loop
									for (let pt=1; pt<numPoints; pt++) {
										if (glyfFlags[pt] == glyfFlags[pt-1] && rpt < 255) {
											rpt++;
										}
										else {
											rpt = 0;
										}
						
										if (rpt<2) {
											outputBuf.u8 = glyfFlags[pt]; // write without compression (don’t compress 2 consecutive identical bytes)
										}
										else {
											const currentPos = outputBuf.tell();
											if (rpt==2) {
												outputBuf.seek(currentPos-2);
												outputBuf.u8 = glyfFlags[pt] | 0x08; // set repeat bit on the pre-previous flag byte
											}
											outputBuf.seek(currentPos-1);
											outputBuf.u8 = rpt; // write the number of repeats
										}
									}
		
									// 2. write x or y coordinates (dxArray and dyArray only contain non-zero values, so we avoid a check here!)
									const writePoints = v => {
										const va = Math.abs(v);
										if (va < 256)
											outputBuf.u8 = va;
										else
											outputBuf.i16 = v;
									};
									dxArray.forEach(writePoints);
									dyArray.forEach(writePoints);
								}
								else {
									outputBufU8.set(unpackedU8, outputBuf.tell());
									outputBuf.seekr(unpackedU8.length);
								}
							}
						
							// COMPOSITE GLYPH
							else if (numberOfContours == -1) {
								// composite is a simple copy operation, but we need to find out how many bytes to copy
								// - format here is identical to regular glyf format, so there is no decoding (except for instructionLength format and location of instructions)
								const compGlyphStart = bufs.composite.tell();
								let compGlyphSize = 0;
								let flags;
								let weHaveInstructions = false;
								do {
									flags = bufs.composite.u16;
									let compSize = 6; // the minimum size of a component: flags (2 bytes), glyphId (2 bytes), arg0 (1 byte), arg1 (1 byte)
									if (flags & 0x0001) // ARG_1_AND_2_ARE_WORDS
										compSize += 2;
									if (flags & 0x0008) // WE_HAVE_A_SCALE
										compSize += 2;
									else if (flags & 0x0040) // WE_HAVE_AN_X_AND_Y_SCALE
										compSize += 4;
									else if (flags & 0x0080) // WE_HAVE_A_TWO_BY_TWO
										compSize += 8;	
									if (flags & 0x0100) { // WE_HAVE_INSTRUCTIONS
										weHaveInstructions = true;
										if (options.ignoreInstructions) {
											bufs.composite.seekr(-2);
											bufs.composite.u16 = flags & ~0x0100; // clear the WE_HAVE_INSTRUCTIONS bit
										}
									}
			
									bufs.composite.seekr(compSize-2); // get to the start of the next component
									compGlyphSize += compSize;
								} while (flags & 0x0020); // MORE_COMPONENTS
								// now the pointer is at compGlyphStart + compGlyphSize
		
								// composite: copy glyph
								const compBuf = new Uint8Array(bufs.composite.buffer, bufs.composite.byteOffset + compGlyphStart, compGlyphSize); // set up compBuf ready for copying to the output stream
								outputBufU8.set(compBuf, outputBuf.tell()); // copy compBuf to the output stream at location outputBuf.tell()
								outputBuf.seekr(compGlyphSize); // fix the pointer after copying
			
								// composite: copy instructions
								if (weHaveInstructions) {
									instructionLength = bufs.glyph.u16_255; // "Read one 255UInt16 value from the glyph stream" (N.B. glyph stream not composite stream!)
									if (!options.ignoreInstructions) {
										outputBuf.u16 = instructionLength;
										if (instructionLength > 0) {
											const instrBuf = new Uint8Array(bufs.instruction.buffer, bufs.instruction.byteOffset + bufs.instruction.tell(), instructionLength);
											outputBufU8.set(instrBuf, outputBuf.tell()); // copy compBuf to the output stream at location outputBuf.tell()
											outputBuf.seekr(instructionLength);
											bufs.instruction.seekr(instructionLength);
										}
									}
								}
							}
			
							// write bbox for simple and composite glyphs (works for embedded or calculated bbox)
							const glyphEnd = outputBuf.tell();
							outputBuf.seek(glyphStart+2);
							outputBuf.i16 = xMin;
							outputBuf.i16 = yMin;
							outputBuf.i16 = xMax;
							outputBuf.i16 = yMax;
							outputBuf.seek(glyphEnd);
			
							// pad glyph to 2 bytes (all glyphs need this)
							outputBuf.padToModulo(2);
			
						} // end of non-empty glyph branch
			
						// write loca in either 16-bit or 32-bit format
						// - hmm, an algo that just stores loca in an array, then writes afterwards is probabaly just as quick for 16 bit, faster for 32 bit loca, much easier to read...
						const glyphLoca = outputBuf.tell() - table.offset;
						if (glyphLoca / 2 < 0x10000) {
							locaBuffer.u16 = glyphLoca / 2; // write 16-bit loca
						}
						else {
							// write 32-bit loca
							if (indexToLocFormat==0) {
								// transform the existing 16-bit locas into 32-bit locas: we rewrite g values, then write the (g+1)th value
								indexToLocFormat = 1;
								for (let g_ = g; g_ >= 0; g_--) { // copy IN REVERSE so we don’t overwrite
									locaBuffer.seek(2*g_);
									const longPos = locaBuffer.u16 * 2;
									locaBuffer.seek(4*g_);
									locaBuffer.u32 = longPos;
								}
								locaBuffer.seek(4*(g+1)); // now it’s in the right position for subsequent writes
							}
							locaBuffer.u32 = glyphLoca; // write 32-bit loca
						}
			
			
					} // end of glyph loop
			
					table.length = outputBuf.tell() - table.offset; // determine glyf table length (it’s the current position of outputBuf minus the offset of this table)
					tableDirectory.loca.length = locaBuffer.tell(); // determine loca table length (it’s the current position of locaBuffer)
					tableDirectory.loca.buffer = locaBuffer; // assign locaBuffer to loca table buffer so it works when being written to outputBuf in the "default" case below
					break;
				}
		
				// write any table (apart from glyf)
				// - loca is also cool here, since we’ve set up tableDirectory.loca.length and tableDirectory.loca.buffer in the "glyf" case above (and loca always succeeds glyf)
				default: {
		
					if (!table.length)
						table.length = table.origLength;
					table.offset = outputBuf.tell();
					table.checkSum = 0;
		
					// copy the table buffer to outputBuf
					const tableBufferU8 = new Uint8Array(table.buffer.buffer, table.buffer.byteOffset, table.length);
					outputBufU8.set(tableBufferU8, outputBuf.tell());
					outputBuf.seekr(table.length);
					break;
				}
			}
		
			// add padding
			outputBuf.padToModulo(4);
		});

		// store the length... we’re next going to fix the beginning
		const finalLength = outputBuf.tell();

		// FIXUPS

		// fix head.indexToLocFormat to the value actually used, rather the one read from the input
		outputBuf.seek(tableDirectory.head.offset + 50);
		outputBuf.u16 = indexToLocFormat; // either 0 or 1

		// write final header and table directory
		outputBuf.seek(0);
		outputBuf.u32 = header.flavor;
		outputBuf.u16 = tables.length;
		outputBuf.seek(12);
		tables
			.sort((a,b) => { if (a.tag < b.tag) return -1; if (a.tag > b.tag) return 1; return 0; }) // sort by tag
			.forEach(table => {
				outputBuf.tag = table.tag;
				outputBuf.u32 = table.checkSum; // not yet calculating checksum
				outputBuf.u32 = table.offset;
				outputBuf.u32 = table.length;
			});

		// write final file
		const finalBufferU8 = new Uint8Array(outputBufU8.buffer, 0, finalLength);
		const finalBuffer = new SamsaBuffer(outputBufU8.buffer, 0, finalLength);

		// return the tables, if requested
		if (options.tables !== undefined)
			options.tables = tables;
		if (options.tableDirectory !== undefined)
			options.tableDirectory = tableDirectory;

		// return the SamsaBuffer as either a Uint8Array or a SamsaBuffer, depending on options
		return options.Uint8Array ? finalBufferU8 : finalBuffer;
	}

	// decode header of GSUB and GPOS table
	decodeGSUBGPOSheader(table) {
		table.version = [this.u16, this.u16]; // [0] is majorVersion, [1] is minorVersion
		if (table.version[0] == 1) {
			table.scriptListOffset = this.u16;
			table.featureListOffset = this.u16;
			table.lookupListOffset = this.u16;
			if (table.version[1] >= 1) {
				table.featureVariationsOffset = this.u32;
			}

			// get GPOS script list
			this.seek(table.scriptListOffset);
			table.scripts = this.decodeScriptList();

			// get GPOS features (initial data)
			this.seek(table.featureListOffset);
			table.features = this.decodeFeatures();

			// get GPOS lookup count
			this.seek(table.lookupListOffset);
			table.lookupCount = this.u16;
		}
	}

	// decode a scriptList
	// - every GPOS and GSUB table references a scriptList
	decodeScriptList() {

		const decodeLangSys = langSysOffset => {
			const tell = this.tell();
			this.seek(scriptListOffset + langSysOffset);
			this.seekr(2); // lookupOrderOffset (reserved, so always null)
			const langSys = {
				requiredFeatureIndex: this.u16,
				featureIndices: [],
			};
			const featureIndexCount = this.u16;
			for (let f=0; f<featureIndexCount; f++) {
				langSys.featureIndices.push(this.u16);
			}
			this.seek(tell); // restore the data pointer
			return langSys;
		};

		const scriptListOffset = this.tell();
		const scripts = {}; // we index by script tag, e.g. "latn", "DFLT"
		const scriptCount = this.u16;
		for (let s=0; s<scriptCount; s++) {
			const scriptTag = this.tag, scriptOffset = this.u16;
			const tell = this.tell();
			this.seek(scriptListOffset + scriptOffset);
			const defaultLangSysOffset = this.u16;
			scripts[scriptTag] = {
				dflt: defaultLangSysOffset ? decodeLangSys(scriptOffset + defaultLangSysOffset) : null, // we index by language tag, e.g. "dflt", "TRK ", "MOL "
			};
			const langSysCount = this.u16;
			for (let l=0; l<langSysCount; l++) {
				const langTag = this.tag, langSysOffset = this.u16;
				scripts[scriptTag][langTag] = decodeLangSys(scriptOffset + langSysOffset);
			}
			this.seek(tell);
		}

		return scripts;
	}

	// decode a set of features
	// - every GPOS and GSUB table references a set of features
	decodeFeatures() {
		const featureListOffset = this.tell();
		const features = [];
		const featureCount = this.u16;
		for (let f=0; f<featureCount; f++) {
			const feature = { tag: this.tag };
			const offset = this.u16;
			const tell = this.tell();
			this.seek(featureListOffset + offset);
			this.seekr(2); // ignore featureParamsOffset
			feature.lookupIndices = this.u16pascalArray();
			features.push(feature);
			this.seek(tell);
		}
		return features;
	}

}


//-------------------------------------------------------------------------------
// SamsaFont
// - let’s keep this pure, and leave fancy loading from URL or path to special purpose functions
// - buf: a SamsaBuffer containing the font (required)
// - options: various
// - TODO: at some point we need it to work without loading all the glyphs into memory, so they stay in a file, e.g. options.glyphsOnDemand = true
function SamsaFont(buf, options = {}) {

	console.log("SamsaFont!")

	this.buf = buf; // SamsaBuffer
	this.tables = {};
	this.tableList = [];
	this.glyphs = [];
	this.ItemVariationStores = {}; // keys will be "avar", "MVAR", "COLR", "CFF2", "HVAR", "VVAR"... they all get recalculated when a new instance is requested
	this.tableDecoders = TABLE_DECODERS; // we assign it here so we have access to it in code that imports the library

	// font header
	this.header = buf.decode(FORMATS.TableDirectory);

	// create table directory
	for (let t=0; t<this.header.numTables; t++) {
		const table = buf.decode(FORMATS.TableRecord);
		this.tableList.push(this.tables[table.tag] = table);
	}

	// load tables in the following order
	const requestTables = ["name","cmap","OS/2","maxp","head","hhea","hmtx","vhea","vmtx","post","fvar","gvar","avar","COLR","CPAL","MVAR","HVAR","VVAR","STAT","GDEF","GPOS","GSUB","BASE"];
	const requireTables = ["name","cmap","OS/2","maxp","head","hhea","hmtx","post"];

	requestTables.forEach(tag => {
		if (!this.tables[tag] && requireTables.includes(tag)) {
			console.assert(this.tables[tag], "ERROR: Missing required table: ", tag);
		}

		if (this.tables[tag]) {
			console.log("Loading table: ", tag);
			const tbuf = this.bufferFromTable(tag); // wouldn’t it be a good idea to store all these buffers as font.avar.buffer, font.COLR.buffer, etc. ?

			// decode first part of table (or create an empty object)
			this[tag] = FORMATS[tag] ? tbuf.decode(FORMATS[tag]) : {};
			this[tag].buffer = tbuf;

			// decode more of the table
			if (this.tableDecoders[tag]) {
				this.tableDecoders[tag](this, tbuf);
			}
		}
	});

	// load ItemVariationStores
	const ivsTags = ["avar", "MVAR", "HVAR", "VVAR", "COLR"];
	ivsTags.forEach(tag => {
		if (this[tag] && this[tag].itemVariationStoreOffset) { // if itemVariationStoreOffset == 0 (legitimate at least in avar), do nothing
			buf.seek(this.tables[tag].offset + this[tag].itemVariationStoreOffset);
			this[tag].itemVariationStore = this.ItemVariationStores[tag] = buf.decodeItemVariationStore();
			console.assert(this[tag].itemVariationStore.axisCount == this.fvar.axisCount, "axisCount mismatch in ItemVariationStore");
		}
	});

	// options.allGlyphs: load all glyphs
	if (options.allGlyphs) {
		let offset = 0;
		// we should do this differently if the font is only lightly loaded, e.g. from a big file that we don’t want to load in full
		for (let g=0; g<this.maxp.numGlyphs; g++) {
			this.buf.seek(this.tables.loca.offset + (g+1) * (this.head.indexToLocFormat ? 4 : 2));
			const nextOffset = this.head.indexToLocFormat ? buf.u32 : buf.u16 * 2;
			buf.seek(this.tables.glyf.offset + offset);
			this.glyphs[g] = buf.decodeGlyph(nextOffset - offset, { id: g, font: this }); // if nextOffset == offset, nothing is read from buf
			offset = nextOffset;
		}

		// options.allTVTs: load all TVTs?
		if (options.allTVTs && this.gvar) {
			const gvar = this.gvar;
			for (let g=0; g<this.maxp.numGlyphs; g++) {

				if (!this.glyphs[g].font)
					console.log(this.glyphs[g]);

				this.glyphs[g].tvts = gvar.buffer.decodeTvts(this.glyphs[g]); // returns tvts array if we have it, otherwise []
			}
		}
	}
}

SamsaFont.prototype.validateChecksums = function () {
	const errors = [];
	font.tableList.forEach(table => {
		let actualSum = font.buf.checkSum(table.offset, table.length, table.tag == "head");
		if (table.checkSum !== actualSum) {
			errors.push([table.tag, table.table.checkSum, actualSum]);
		}
	});
	return errors;
}

SamsaFont.prototype.bufferFromTable = function (tag) {
	return new SamsaBuffer(this.buf.buffer, this.tables[tag].offset, this.tables[tag].length);
}


// given an ivs and a tuple, returns a 2d array of values that need to be added to the items they apply to
// - although delta values are always integers, interpolated deltas are in general floating point
SamsaFont.prototype.itemVariationStoreInstantiate = function (ivs, tuple) {
	const scalars = this.getVariationScalars(ivs, tuple); // get the region scalars: we get this only ONCE per instance
	const interpolatedDeltas = []; // a 2d array made of (ivd.deltaSets.length) arrays of interpolated delta values
	ivs.ivds.forEach((ivd, i) => {
		interpolatedDeltas[i] = [];
		ivd.deltaSets.forEach(deltaSet => {
			let d = 0;
			deltaSet.forEach((delta, r) => d += scalars[ivd.regionIds[r]] * delta); // this is where the good stuff happens!
			interpolatedDeltas[i].push(d);
		});
	});
	return interpolatedDeltas;
}

// process ItemVariationStore to get scalars for an instance (including avar2)
// - the returned scalars[n] array contains a scalar for each region (therefore regions.length == scalars.length)
//SamsaFont.prototype.getVariationScalars = function (regions, tuple) {
SamsaFont.prototype.getVariationScalars = function (ivs, tuple) {
	const scalars = [];
	const regions = ivs.regions;
	regions.forEach(region => { // for each region...
		// ... go thru each of the axisCount linearRegions in the region
		let S = 1;
		for (let a=0; a < ivs.axisCount; a++) {
			const [start, peak, end] = region[a];
			if (peak !== 0) { // does the linearRegion participate in the calculation?
				const v = tuple[a]; // v is the a’th normalized axis value from the tuple
				if (v == 0) {
					S = 0;
					break; // zero scalar, which makes S=0, so quit loop (maybe this is more common than the v==peak case, so should be tested first)
				}
				else if (v !== peak) { // we could let the v==peak case fall through, but it’s common so worth testing first
					const vMstart = v - start, vMend = v - end; // precalculating these speeds things up a bit
					if (vMstart < 0 || vMend > 0) {
						S = 0;
						break; // zero scalar, which makes S=0, so quit loop (maybe this is more common than the v==peak case, so should be tested first)
					}
					else if (v < peak)
						S *= vMstart / (peak - start);
					else if (v > peak) // because we already tested all other possibilities (including v==peak) we could remove this test and just have "else"
						S *= vMend / (peak - end);
				}
			}
		}
		scalars.push(S);
	});
	return scalars;
}

SamsaFont.prototype.loadGlyphById = function (glyphId, cache = true) {
	const buf = this.buf;
	buf.seek(this.tables.loca.offset + glyphId * (this.head.indexToLocFormat ? 4 : 2));
	const offsets = this.head.indexToLocFormat ? [buf.u32, buf.u32] : [buf.u16 * 2, buf.u16 * 2];
	buf.seek(this.tables.glyf.offset + offsets[0]);
	const glyph = buf.decodeGlyph(offsets[1] - offsets[0], { id: glyphId, font: this });
	if (cache) {
		this.glyphs[glyphId] = glyph; // preserve in the glyphs array
	}
	return glyph;
}

// SamsaFont.glyphIdFromUnicode() – returns glyphId for a given unicode code point
// uni: the code point
// return: the glyphId (0 if not found)
// Notes: Handles formats 0, 4, 12.
SamsaFont.prototype.glyphIdFromUnicode = function (uni) {

	const cmap = this.cmap;
	const tbuf = this.cmap.buffer;
	let g=0;

	// which encoding shall we use?
	const encodingsOrder = [0x0003000a, 0x00030001, 0x00000006, 0x00000003, 0x00010000]; // try encodings in this order: [3,10], [3,1], [0,6], [0,3], [1,0]

	let encoding;
	for (let e=0; e<encodingsOrder.length; e++) {
		if (cmap.encodings[encodingsOrder[e]]) {
			encoding = cmap.encodings[encodingsOrder[e]];
			break;
		}
	}
	
	if (encoding) {
		switch (encoding.format) {

			case 0: { // "Byte encoding table"
				//g = encoding.mapping[uni] ?? 0;
				g = encoding.mapping[uni] ? encoding.mapping[uni] : 0;
				break;
			}

			case 4: { // "Segment mapping to delta values"
				// algo: https://learn.microsoft.com/en-us/typography/opentype/spec/cmap#format-4-segment-mapping-to-delta-values
				let s, segment;
				for (s=0; s<encoding.segments.length; s++) { // ideally this would be a binary search on segment.end (and could quite easily be done directly on the undecoded blob)
					segment = encoding.segments[s];
					if (uni >= segment.start && uni <= segment.end) {
						break;
					}
				}

				if (s < encoding.segments.length - 1) {
					if (segment.idRangeOffset) {
						tbuf.seek(encoding.idRangeOffsetOffset + s * 2 + segment.idRangeOffset + (uni - segment.start) * 2);
						g = tbuf.u16;
						if (g > 0)
							g += segment.idDelta;
					}
					else {
						g = uni + segment.idDelta;
					}								
					g %= 0x10000;
				}
				break;
			}

			case 12: { // "Segmented coverage"
				for (let grp=0; grp<encoding.groups.length; grp++) {
					const group = encoding.groups[grp];
					if (uni >= group.start && uni <= group.end) {
						g = group.glyphId + uni - group.start;
						break;
					}
				}
				break;
			}

			default:
				break;
		}
	}

	return g;
}


// utility functions
// - these don’t use the font at all, but it’s a way to get them exported
SamsaFont.prototype.linearGradientFromThreePoints = function (points) {
	const
		[p0, p1, p2] = points,
		d1 = [p1[0] - p0[0], p1[1] - p0[1]],
		d2 = [p2[0] - p0[0], p2[1] - p0[1]],
		dotProd = d1[0] * d2[0] + d1[1] * d2[1],
		rotLengthSquared = d2[0] * d2[0] + d2[1] * d2[1],
		magnitude = dotProd / rotLengthSquared;

	return [p1[0] - magnitude * d2[0], p1[1] - magnitude * d2[1]];
}

SamsaFont.prototype.hexColorFromU32 = function (num) {
	let hex = ((((num & 0xff000000) >>> 16) | (num & 0x00ff0000) | ((num & 0x0000ff00) << 16) | num & 0x000000ff) >>> 0).toString(16).padStart(8, "0");
	if (hex.endsWith("ff"))
		hex = hex.substring(0, 6);
	if (hex[0] == hex[1] && hex[2] == hex[3] && hex[4] == hex[5] && (hex.length == 8 ? hex[6] == hex[7] : true))
		hex = hex[0] + hex[2] + hex[4] + (hex.length == 8 ? hex[6] : "");
	return "#" + hex;
}

SamsaFont.prototype.u32FromHexColor = function (hex, opacity=1) {
	if (hex[0] == "#") {
		hex = hex.substring(1);
	}
	if (hex.match(/^[0-9a-f]{3,8}$/i) && hex.length == 3 || hex.length == 4 || hex.length == 6 || hex.length == 8) {
		if (hex.length <= 4) {
			hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + (hex.length == 4 ? hex[3] + hex[3] : "");
		}
		if (hex.length == 6) {
			hex += (opacity * 255).toString(16).padStart(2,"0");
		}
		return parseInt(hex.substring(4,6), 16) * 0x1000000 + parseInt(hex.substring(2,4), 16) * 0x10000 + parseInt(hex.substring(0,2), 16) * 0x100 + parseInt(hex.substring(6,8), 16);
	}
	else {
		return 0x000000ff; // back to black
	}
}


//////////////////////////////////
//  tupleFromFvs()
// - fvs is an object where axis tags are keys and axis values are values
// - returns: a tuple of length this.axisCount, with values normalized but *without* avar mapping; this tuple is suitable to supply new SamsaInstance()
//////////////////////////////////
SamsaFont.prototype.tupleFromFvs = function (fvs) {

	let tuple = [];
	let valid = true;
	if (!this.fvar)
		return tuple;

	this.fvar.axes.forEach((axis,a) => {
		const val = (!fvs || fvs[axis.axisTag] === undefined) ? axis.defaultValue : 1 * fvs[axis.axisTag];
		let n; // normalized value
		if (val == axis.defaultValue)
			n = 0;
		else if (val > axis.defaultValue) {
			if (val > axis.maxValue) // by using > rather than >= here we ensure clamping works properly
				n = 1;
			else
				n = axis.maxValue==axis.defaultValue? 0 : (val - axis.defaultValue) / (axis.maxValue - axis.defaultValue);
		}
		else { // val < axis.defaultValue
			if (val < axis.minValue)
				n = -1;
			else
				n = axis.minValue==axis.defaultValue? 0 : (axis.defaultValue - val) / (axis.minValue - axis.defaultValue);
		}
		tuple[a] = n;
	});

	return valid ? tuple : Array(this.fvar.axisCount).fill(0);
}


//////////////////////////////////
//  instance()
// - return an instance of the font, based on the supplied axisSettings (if any)
//////////////////////////////////
SamsaFont.prototype.instance = function (axisSettings={}) {
	return new SamsaInstance(this, axisSettings);
}


//-------------------------------------------------------------------------------
// SamsaInstance
// - font is a SamsaFont
// - userTuple is an initial tuple, *before* processing by avar
function SamsaInstance(font, axisSettings={}, options={}) {

	this.font = font;
	const {avar, gvar} = font; // destructure table data objects
	this.userTuple = font.tupleFromFvs(axisSettings); // the original tuple untransformed by avar
	this.tuple = [...this.userTuple]; // this tuple gets transformed by avar
	const tuple = this.tuple;
	this.glyphs = [];
	this.deltaSets = {}; // deltaSets from ItemVariationStore: keys are "MVAR", "COLR" etc. Note that each set of deltas corresponds to different types of default item.
	this.sharedScalars = []; // scalars for the sharedTuples are calculated just once per instance
	const axisCount = font.fvar ? font.fvar.axisCount : 0;

	// validate tuple
	if (!validateTuple (tuple, axisCount)) {
		return undefined;
	}

	// round tuple to the nearest 1/16384 (ensures we get exactly 0, 1, -1 when we are off by a tiny amount)
	// - the spec: "Convert the final, normalized 16.16 coordinate value to 2.14 by this method: add 0x00000002, and sign-extend shift to the right by 2." https://learn.microsoft.com/en-us/typography/opentype/spec/otvaroverview#coordinate-scales-and-normalization
	for (let a=0; a<axisCount; a++) {
		tuple[a] = Math.round(tuple[a] * 16384) / 16384;
	}

	// avar mappings must come first! since all subsequent variation operation use the tuple remapped by avar
	// - the tuple supplied to the SamsaInstance() constructor is modified here (maybe it should be a copy)
	// - maybe encapsulate avar transform in a function
	if (avar) {

		// avar1
		// - transform tuple into avar-v1-mapped tuple, one axis at a time
		avar.axisSegmentMaps.forEach((map,a) => {
			let n = tuple[a];
			for (let m=0; m<map.length; m++) {
				if (map[m][0] >= n) {
					if (map[m][0] == n)
						n = map[m][1];
					else
						n = map[m-1][1] + (map[m][1] - map[m-1][1]) * ( ( n - map[m-1][0] ) / ( map[m][0] - map[m-1][0] ) );
					break;
				}
			}
			tuple[a] = n;
		});

		// avar2
		// - instantiate the avar2 ItemVariationStore
		if (avar.itemVariationStore) {

			// avar2 mappings
			const deltas = font.itemVariationStoreInstantiate(avar.itemVariationStore, tuple);
			
			// each entry in axisIndexMap defines how a particular axis gets influenced by the region scalars
			// - axisId is given by index in axisIndexMap
			// - note that some axes may not have avar2 transformations: they either have entry==[0xffff,0xffff] or their axisId is >= axisIndexMap.length
			// - index identifies the value in the 2d array interpolatedDeltas (the same indexing that identifies the ivd and the deltaSet within the ivd)
			// - we iterate through all axes, since it could be that this.avar.axisIndexMap.length < this.axisCount yet the last entry in this.axisCount is not 0xffff/0xffff, this must be repeated
			for (let a=0; a<axisCount; a++) {
				let outer, inner;
				if (avar.axisIndexMap) {
					[outer, inner] = avar.axisIndexMap[ Math.min(a, avar.axisIndexMap.length - 1) ]; // use the a’th entry or the last entry of axisIndexMap
				}
				else { // implicit axisIndexMap
					outer = a >> 16; // yes, I know this will always be 0
					inner = a & 0xffff; // yes, I know this will always be a
				}
				if (outer != 0xffff && inner != 0xffff) { // if this entry is non-null... (hmm, might be nicer to have created a sparse array in the first place, skipping nulls and thus avoiding this check)
					tuple[a] += Math.round(deltas[outer][inner]) / 0x4000; // add the interpolated delta to tuple[a]; note that the spec provides an integer method for rounding
					tuple[a] = clamp(tuple[a], -1, 1); // clamp the result to [-1,1]
				}
			}
		}
	}

	
	// instantiate the item variation stores
	// TODO: fix the logic of where this comes... it should probably happen only if(font.avar) rather than within if there are any ItemVariationStores
	// then instantiate the other item variation stores
	Object.keys(font.ItemVariationStores).forEach(key => {

		if (key != "avar") { // we already handled the avar2 ItemVariationStore, if it exists
			const deltaSets = font.itemVariationStoreInstantiate(font.ItemVariationStores[key], tuple); // does this need to stick around? no for MVAR, as we can get the new values
			
			// each ivs has its own way of mapping indices; the mapping can maybe be done JIT...
			switch (key) {
				case "MVAR" : {
					this.MVAR = {};
					Object.keys(font.MVAR.valueRecords).forEach(tag => { // would be slightly more efficient if we store font.MVAR.valueRecords as an array of arrays: [tag, outer, inner], then we can just .forEach() easily
						const [outer, inner] = font.MVAR.valueRecords[tag];
						this.MVAR[tag] = deltaSets[outer][inner]; // e.g. instance.MVAR["xhgt"] = deltaSets[1,15]; // yields delta to add to OS/2.sxHeight for this instance
					});
					break;
				}

				default: {
					this.deltaSets[key] = deltaSets;
					break;
				}
			}
			// note that some itemVariationStore tables (COLR, HVAR) might be large, and it would be better for just a portion to be instantiated on demand
		}
	});

	// calculate instance.sharedScalars (they’re derived from gvar’s shared tuples using the current user tuple)
	// - this caching should marginally speed things up
	// - we index by the same ids used within the per-glyph tvt data deeper in gvar
	// - note this calculation must come after avar calculation
	if (gvar) {
		gvar.sharedTuples.forEach(sharedTuple => {

			let S=1;
			for (let a=0; a<axisCount; a++) { // each element of sharedTuple is -1, 0 or 1 (it records peaks only, with implicit start and end
				if (sharedTuple[a] == 0) // no effect, peak = 0 means do nothing, in other words *= 1
					continue;
				else if (tuple[a] == 0 || sharedTuple[a] * tuple[a] < 0) { // 1) if any of the contributing axes are zero, the scalar is zero; 2) if their signs are different, the scalar is zero
					S = 0;
					break;
				}
				S *= tuple[a]; // the only option left: the simple tent means that the scalar for each axis is equal to the absolute axis value (we fix the sign of S later, after potentially multiple sign flips)
			}
			this.sharedScalars.push(S >= 0 ? S : -S); // fix the sign, then append to this instance’s sharedScalars array
			// TODO: we *can* use sharedScalars like this (they work as is in many fonts) but only in general if they are all non-intermediate, this have peak values -1, 0 or 1 (Bitter variable font violates this, for example)
			// - because the start and end are not local but embedded deep in gvar, we cannot assume they are always the same values (they may very well be, and in theory we could check for this)
			// - currently we are not using sharedScalars
		});
	}

	// instantiate glyphs?
	if (options.allGlyphs) {
		for (let g=0; g<font.numGlyphs; g++) {
			this.glyphs[g] = font.glyphs[g].instantiate(tuple);
		}
	}
	else if (options.glyphIds) {
		options.glyphIds.forEach(g => {
			this.glyphs[g] = font.glyphs[g].instantiate(tuple);
		});
	}
}


// SamsaInstance.glyphAdvance() - return the advance of a glyph
// - we need this method in SamsaInstance, not SamsaGlyph, because SamsaGlyph might not be loaded (and we don’t need to load it, because we have hmtx and HVAR)
// - if we have a variable font and HVAR is not present, we must load the glyph in order to know its variable advance
// - replace it with glyphMetrics() ?
// - maybe we can have a SamsaGlyph.glyphAdvance() method too, which calls this method with its own instance (if it has one).
SamsaInstance.prototype.glyphAdvance = function (glyphId) {
	const font = this.font;
	const advance = [0,0];
	const glyph = font.glyphs[glyphId] || font.loadGlyphById(glyphId);
	const iglyph = glyph.instantiate(this); // we do not need to decompose 

	if (iglyph) {
		// get the advance from SamsaGlyph
		const numPoints = iglyph.numPoints;
		advance[0] = iglyph.points[numPoints+1][0]; // horizontal advance
		advance[1] = iglyph.points[numPoints+2][1]; // vertical advance
	}
	else {
		// TODO: modify the advance using HVAR, VVAR
		// HVAR and VVAR should already be instantiated
		advance[0] = font.hmtx ? font.hmtx[glyphId] : 0;
		advance[1] = font.vmtx ? font.vmtx[glyphId] : 0;

		if (font.HVAR) {
			const [outer, inner] = font.HVAR.indexMap[glyphId];
			const deltas = font.ItemVariationStores["HVAR"];
			advance[0] += deltas[outer][inner];
		}
	}

	return advance;
}

// SamsaInstance.glyphLayoutFromString()
// input: a string or an array of glyphIds
// - return: a GlyphLayout object which is an array of GlyphPlacement objects, each GlyphPlacement pointing to a glyph and an absolute xy offset
// Examples:
// instance.glyphLayoutFromString("hello") // gets the layout for the string "hello"
// instance.glyphLayoutFromString("hello", { liga: false, dlig: true }) // gets the layout for the string "hello", with features liga off and dlig on
// instance.glyphLayoutFromString([234,55]) // gets the layout for the glyph run [234,55]
// - a complete implementation would process OpenType Layout features
SamsaInstance.prototype.glyphLayoutFromString = function (input, userFeatures) {
	const font = this.font;
	const cmap = font.cmap;
	const glyphLayout = []; // we return this
	let glyphRun = [];
	const uvsEncoding = cmap.encodings[0x00000005]; // find Unicode Variation Sequence encoding, if any

	// main loop to get initial glyph run
	if (typeof input === "string") {
		const characters = [...input]; // this is a Unicode codepoint array, so items are 21-bit not 16-bit (note that string.length would treat surrogate pairs as 2 characters)
		for (let c=0; c < characters.length; c++) {
			const char = characters[c]; // current character
			const uni = char.codePointAt(0); // current codepoint, an integer <= 0x10FFFF
			
			// variation selectors: let’s ignore them (we don’t want .notdef to be displayed)
			if (uni >= 0xfe00 && uni <= 0xfe0f) {
				continue;
			}
	
			// variation sequences can force emoji or text presentation
			if (uvsEncoding && uvsEncoding.format === 14 && c < characters.length - 1) { // possible Unicode Variation Selector follows
				//console.log("possible Unicode Variation Sequence");
			}
	
			glyphRun.push(font.glyphIdFromUnicode(uni));
		}	
	}

	// input is already an array of glyphIds
	else if (Array.isArray(input)) {
		glyphRun = input;
	}

	// process the glyph run in GSUB
	glyphRun = this.glyphRunGSUB(glyphRun, { userFeatures: userFeatures }); // to specify script and language, use properties on options, e.g. script: "latn", language: "TRK "

	// get advance info for each glyph
	let x = 0, y = 0;
	glyphRun.forEach(glyphId => {
		const [dx, dy] = this.glyphAdvance(glyphId); // glyphAdvance() is responsible for decoding and instantiating the glyph if necessary
		glyphLayout.push({ id: glyphId, ax: x, ay: y, dx: dx, dy: dy }); // an array of glyphPlacement objects, similar format to harfbuzz
		x += dx; // horizontal advance
		y += dy; // vertical advance
	});

	// TODO: process the glyph run in GPOS
	// const glyphShifts = font.glyphRunGPOS(glyphRun, options);
	// glyphLayout.forEach((glyphPlacement, i) => {
	// 	glyphPlacement.x += glyphShifts[i][0];
	// 	glyphPlacement.y += glyphShifts[i][1];
	// });

	// it’s ready!
	return glyphLayout;
}


// SamsaInstance.glyphRunGSUB()
// - process a glyph run with GSUB
// - inputRun is an array of glyph ids
// - options.userFeatures is an object of user features with feature tags as keys and boolean as value, e.g. { "ss01": true, "liga": false }
// - options.script is a 4-character string, e.g. "latn", "cyrl", "DFLT" (can be undefined)
// - options.language is a 4-character string, e.g. "AZE ", "MOL ", "TRK " (can be undefined, will be ignored if script is undefined)
// - return value is the output run (an array of glyph ids)
// Docs:
// - GSUB spec: https://learn.microsoft.com/en-us/typography/opentype/spec/gsub
// - OpenType Layout Common Table Formats: https://learn.microsoft.com/en-us/typography/opentype/spec/chapter2
// - Excellent discussion on feature/lookup processing order: https://typedrawers.com/discussion/3436/order-of-execution-of-opentype-features
SamsaInstance.prototype.glyphRunGSUB = function (inputRun, options={}) {

	const
		RIGHT_TO_LEFT             = 0x0001,
		IGNORE_BASE_GLYPHS        = 0x0002,
		IGNORE_LIGATURES          = 0x0004,
		IGNORE_MARKS              = 0x0008,
		USE_MARK_FILTERING_SET    = 0x0010,
		MARK_ATTACHMENT_TYPE_MASK = 0xFF00;

	// general setup
	const font = this.font;
	const gsub = font.GSUB;
	if (!gsub) return inputRun; // no GSUB table, so no transformation
	const buf = gsub.buffer;
	let run = [...inputRun]; // initialize the run array, which will mutate to become the output run that we return from the function

	// which script and language are active?
	const script = options.script && gsub.scripts[options.script] ? gsub.scripts[options.script] : gsub.scripts["DFLT"];
	const langSys = options.language && script[options.language] ? script[options.language] : script["dflt"];
	const requestedFeatures = options.userFeatures || {}; // object with keys as feature tags for keys, true/false for values
	const lookupGroups = [[], [], []]; // we have initial group, normal group, and custom group

	// features are defined by the spec to be on by default: the integer denotes which group they are in (0=initial, 1=normal, 2=custom)
	const featureGroups = {

		// initial lookup group
		ccmp: 0,
		rvrn: 0,
		
		// normal lookup group
		abvm: 1,
		blwm: 1,
		calt: 1,
		clig: 1,
		curs: 1,
		dist: 1,
		kern: 1,
		liga: 1,
		locl: 1,
		mark: 1,
		mkmk: 1,
		rlig: 1,
		rclt: 1,
	};

	// add any requested features that are not in the default feature groups to final group, and remove any that are explicitly turned off
	Object.keys(requestedFeatures).forEach(tag => {
		// activate a user-requested feature
		if (requestedFeatures[tag] && featureGroups[tag] === undefined) {
			featureGroups[tag] = 2; // if it’s not already in the list, add it to group 2 (which happen last)
		}
		// disable a system-requested feature
		else if (requestedFeatures[tag] === false && featureGroups[tag] !== undefined) {
			featureGroups[tag] = undefined;
		}
	});

	// lookups setup (this becomes a sparse array)
	const lookups = [];

	// get Feature Variations
	const featureVariations = [];
	if (gsub.featureVariationsOffset) {
		buf.seek(gsub.featureVariationsOffset);
		const version = [buf.u16, buf.u16];
		if (version[0] === 1 && version[1] === 0) {
			const featureVariationRecordCount = buf.u32;
			for (let fvr=0; fvr<featureVariationRecordCount; fvr++) {
				const featureVariation = { conditions: [], substitutions: [] };
				const conditionSetOffset = buf.u32;
				const featureTableSubstitutionOffset = buf.u32;
				const tell = buf.tell();

				// get conditions
				if (conditionSetOffset) {
					buf.seek(gsub.featureVariationsOffset + conditionSetOffset);
					const conditionOffsets = buf.u32pascalArray();
					conditionOffsets.forEach(offset => {
						buf.seek(gsub.featureVariationsOffset + conditionSetOffset + offset);
						const format = buf.u16;
						if (format === 1) {
							featureVariation.conditions.push({ axisIndex: buf.u16, min: buf.f214, max: buf.f214 }); // axisIndex, filterRangeMinValue, filterRangeMaxValue
						}
					});
				}

				// get substitutions
				if (featureTableSubstitutionOffset) {
					buf.seek(gsub.featureVariationsOffset + featureTableSubstitutionOffset);
					const version = [buf.u16, buf.u16];
					if (version[0] === 1 && version[1] === 0) {
						const count = buf.u16;
						for (let fts=0; fts<count; fts++) {
							const substitution = { featureIndex: buf.u16, lookups: [] };
							const alternateFeatureOffset = buf.u32;
							const tell2 = buf.tell(); // init tell2
							buf.seek(gsub.featureVariationsOffset + featureTableSubstitutionOffset + alternateFeatureOffset);
							buf.seekr(2); // featureParams, always 0
							substitution.lookups = buf.u16pascalArray();
							featureVariation.substitutions.push(substitution);
							buf.seek(tell2); // return to tell2
						}
					}	
				}

				featureVariations.push(featureVariation); // store this featureVariation
				buf.seek(tell); // return to tell
			}
		}
	}

	function decodeLookup(lookupListIndex) {

		if (lookupListIndex >= gsub.lookupCount)
			return false;

		buf.seek(gsub.lookupListOffset + 2 + 2 * lookupListIndex);
		const lookupOffset = buf.u16;
		buf.seek(gsub.lookupListOffset + lookupOffset);
		const lookup = { type: buf.u16, flag: buf.u16, subtables: [] };
		const subtableOffsets = buf.u16pascalArray();
		subtableOffsets.forEach(sto => {
			const subtableOffset = gsub.lookupListOffset + lookupOffset + sto;
			buf.seek(subtableOffset);
			const subtable = { format: buf.u16 };
			if (lookup.type <= 4) {

				const coverageOffset = buf.u16;
				switch (lookup.type) {

					// LookupType 1: Single Substitution Subtable
					case 1: {
						if (subtable.format == 1) {
							subtable.deltaGlyphID = buf.i16; // note i16
						}
						else if (subtable.format == 2) {
							subtable.substituteGlyphIDs = buf.u16pascalArray();
						}
						break;
					}

					// LookupType 2: Multiple Substitution Subtable
					case 2: {
						if (subtable.format == 1) {
							subtable.sequences = [];
							const sequenceOffsets = buf.u16pascalArray();
							sequenceOffsets.forEach(offset => {
								buf.seek(subtableOffset + offset);
								subtable.sequences.push(buf.u16pascalArray());
							});
							break;
						}
						break;
					}

					// LookupType 3: Alternate Substitution Subtable
					case 3: {
						if (subtable.format == 1) {
							subtable.alternateSets = [];
							const alternateSetOffsets = buf.u16pascalArray();
							alternateSetOffsets.forEach(offset => {
								buf.seek(subtableOffset + offset);
								subtable.alternateSets.push(buf.u16pascalArray());
							});
						}
						break;
					}

					// LookupType 4: Ligature Substitution Subtable
					case 4: {
						if (subtable.format == 1) {
							subtable.ligatureSets = []; // a ligature set is a set of ligatures that share the same first glyph (e.g. ffl, ff, fi, fl)
							const ligSetOffsets = buf.u16pascalArray();
							ligSetOffsets.forEach(offset => {
								buf.seek(subtableOffset + offset);
								const ligSet = [];
								const ligOffsets = buf.u16pascalArray();
								ligOffsets.forEach(offset2 => {
									buf.seek(subtableOffset + offset + offset2);
									ligSet.push({
										ligatureGlyph: buf.u16,
										componentGlyphIDs: buf.u16array(buf.u16 - 1), // -1 because componentCount includes the initial glyph
									 });
								});
								subtable.ligatureSets.push(ligSet);
							});
						}
						break;
					}
				}

				// get coverage for this lookup
				buf.seek(subtableOffset + coverageOffset);
				const coverageFormat = buf.u16;
				subtable.coverage = { format: coverageFormat };
				switch (coverageFormat) {
					case 1: {
						subtable.coverage.glyphArray = buf.u16pascalArray();
						break;
					}
					case 2: {
						const rangeCount = buf.u16;
						subtable.coverage.glyphRanges = [];
						for (let r=0; r<rangeCount; r++) {
							subtable.coverage.glyphRanges.push({ startGlyphID: buf.u16, endGlyphID: buf.u16, startCoverageIndex: buf.u16 });
						}
						break;
					}
				}
			}
			lookup.subtables.push(subtable);
		})
		if (lookup.flag & USE_MARK_FILTERING_SET)
			lookup.markFilteringSet = buf.u16;
		
		return lookup;
	}

	// now we are live

	// get lookups required for featureVariations: altLookupsForFeatureIndex
	const altLookupsForFeatureIndex = []; // sparse array
	featureVariations.forEach(featureVariation => {
		if (featureVariation.conditions.every(condition => inRange(this.tuple[condition.axisIndex], condition.min, condition.max))) { // if all conditions are satisfied...
			featureVariation.substitutions.forEach(substitution => altLookupsForFeatureIndex[substitution.featureIndex] = substitution.lookups ); // ...set up the alternate lookups
		}
	});

	// go thru each feature that this this langSys implements, checking if it is in a valid group
	langSys.featureIndices.forEach(index => {
		const feature = gsub.features[index];
		const groupId = featureGroups[feature.tag]; //  if groupId is 0, 1 or 2 it’s valid; if groupId is undefined, it’s invalid
		if (groupId !== undefined) {
			lookupGroups[groupId].push(...(altLookupsForFeatureIndex[index] || feature.lookupIndices)); // for this feature, use featureVariations lookups if they’re active, otherwise use its default lookupIndices
		}
	});

	// sort each lookup group: each lookupGroup becomes a sorted array of integers
	lookupGroups.forEach(lookupGroup => lookupGroup.sort((a,b) => a-b));

	
	// https://learn.microsoft.com/en-us/typography/opentype/spec/chapter2
	// During text processing, a client applies a feature to some sequence of glyphs for a string. It then processes 
	// the lookups referenced by that feature in their lookup list order. For each lookup, the client processes that 
	// lookup over each glyph in the sequence to which the feature has been applied. After that lookup has been processed 
	// for each glyph in the sequence, it then processes the next lookup referenced by the feature in the same manner. 
	// This continues until all lookups referenced by the feature have been processed.

	// for each lookupList... (we flatten the three lookup groups into a single array of integers)
	lookupGroups.flat().forEach(lookupIndex => {

		// now apply the lookups in this lookup list (decode and cache the lookup if we don’t have it)
		const lookup = lookups[lookupIndex] || (lookups[lookupIndex] = decodeLookup(lookupIndex));

		// go thru the glyphs in the glyph run for this lookupList
		const glyphsNotCovered = {}; // TODO: keep track of glyphs that are not handled by any lookups, so we can avoid testing for them more than once; maybe have it as glyphLookups arrays (e.g. { glyph123: [ lookup1, lookup7, lookup33 ], glyph8: null } ) so each glyph can lookup which lookups it’s handled by (if any), so no need to search thru all lookups
		for (let r=0; r < run.length; r++) { // note that we modify in the loop: r, run, run.length
			
			const g = run[r];
			
			// check for coverage
			let coverageIndex = -1;
			for (let lo=0; lo<lookup.subtables.length; lo++) {

				const subtable = lookup.subtables[lo];

				// only handle lookup types 1 to 4 for the time being
				if (lookup.type <= 4) {

					// is glyph g covered by this subtable?
					if (subtable.coverage.format == 1) {
						coverageIndex = subtable.coverage.glyphArray.indexOf(g);
					}
					else if (subtable.coverage.format == 2) {
						for (let ra=0; ra<subtable.coverage.glyphRanges.length; ra++) {
							const range = subtable.coverage.glyphRanges[ra];
							if (g >= range.startGlyphID && g <= range.endGlyphID) {
								coverageIndex = range.startCoverageIndex + g - range.startGlyphID;
								break;
							}
						}
					}
					else {
						continue;
					}

					// if g was found, we’ll now have a coverageIndex
					if (coverageIndex !== -1) {

						// Type 1: single substitution
						if (lookup.type == 1) {
							if (subtable.format == 1) {
								run[r] = (run[r] + subtable.deltaGlyphID + 0x10000) % 0x10000; // mutate the run
							}
							else if (subtable.format == 2) {
								run[r] = subtable.substituteGlyphIDs[coverageIndex];  // mutate the run
							}
						}

						// Type 2: multiple substitution
						else if (lookup.type == 2 && subtable.format == 1) {
							// YES: mutate the run! Note that r must be corrected
							const seq = subtable.sequences[coverageIndex];
							run.splice(r, 1, ...seq); // splice in an array (note that we are replacing one glyph)
							r += seq.length - 1; // -1 because we are replacing one glyph (e.g. if the substitition sequence is length=1, then r is already pointing at the correct place)
						}

						// Type 3: alternate substitution
						// - we need to know which alternate to use
						// - needs the collaboration of an application and an api to request particular alternates by id
						else if (lookup.type == 3 && subtable.format == 1) {

						}
		
						// Type 4: ligature substitution
						// - check if this and the following glyphs form a ligature: we know the ligature set by the coverageIndex
						// - find the first match (if any) in the ligatures of this ligature set
						else if (lookup.type == 4 && subtable.format == 1) {
							const ligSet = subtable.ligatureSets[coverageIndex]; // "A LigatureSet table, one for each covered glyph, specifies all the ligature strings that begin with the covered glyph."
							if (ligSet) { // always true in valid fonts
								for (let li=0; li<ligSet.length; li++) {
									const lig = ligSet[li];
									const seq = lig.componentGlyphIDs;
									if (r + seq.length < run.length) { // allows early exit, and avoids a check in the loop
										let d = 0;
										while (d < seq.length && seq[d] === run[r+d+1]) {
											d++;
										}
										if (d === seq.length) { // did we find a ligature?
											// YES: mutate the run! Note that r does not need to be corrected: in "office", r=1 before the "ffi" ligature substitution, and r=1 (correctly) after the ligature substitution, so next glyph will be "c"
											run.splice(r, seq.length+1, lig.ligatureGlyph); // splice the ligature glyphID into the array, replacing seq.length+1 items at position r (note that r is soon incremented by 1 as usual)
											break; // success: we can break out of the for loop // TODO: do we need to break out of the lookup subtables loop too?
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
	return run;
}


// render text in a particular format for a given SamsaInstance
SamsaInstance.prototype.renderText = function (options={}) {

	// defaults
	// - these would be nicer with the nullish operator ??= (but somewhere in the build procedure to Figma, mullish operators are not supported)
	if (options.text === undefined) 
		options.text = "hello, world!";
	if (options.fontSize === undefined) 
		options.fontSize = 12;
	if (options.format === undefined) 
		options.format = "svg";
	
	const font = this.font;
	const upem = font.head.unitsPerEm;
	const scale = options.fontSize/upem;
	const context = {
		font: font,
		instance: this,
		color: options.color === undefined ? 0x000000ff : options.color,
		paletteId: options.paletteId === undefined ? 0 : options.paletteId,
	};
	const layout = this.glyphLayoutFromString(options.text); // process the string to get default glyph run, then process that glyph run in GSUB and GPOS, yielding the actual glyphs to position
	const glyphRunWidth = layout.length ? layout[layout.length-1].ax + layout[layout.length-1].dx : 0;

	if (options.format === "svg") {

		let innerSVGComposition = "";
		context.defs = {};

		// process layout items
		layout.forEach(layoutItem => {
			const glyph = font.glyphs[layoutItem.id];
			const iglyph = glyph.instantiate(this);
			const thisSVG = iglyph.svg(context); // gets the best possible COLR glyph, with monochrome fallback
			innerSVGComposition += `<g transform="translate(${layoutItem.ax} 0)" fill="${font.hexColorFromU32(context.color)}">` + thisSVG + "</g>";
		});
		const svgWidth = Math.ceil(glyphRunWidth * scale); // does not account for glyph parts that protrude beyond the lsb or advance width, e.g. italic f in many fonts (need to check for bbox.xMin and bbox.xMax)
		const svgHeight = 2 * Math.ceil(options.fontSize); // heuristic, seems to work ok, perhaps should be based on bbox.yMin of all glyphs or a descender metric
		const svgPreamble = options.attributes
							? `<svg${expandAttrs(options.attributes)}>` // custom attributes
							: `<svg xmlns="http://www.w3.org/2000/svg" width="${svgWidth}" height="${svgHeight}" viewBox="0 0 ${svgWidth} ${svgHeight}">`; // auto attributes
		const svgPostamble = `</svg>`;
		const gPreamble = `<g transform="scale(${scale} ${-scale}) translate(0 ${-upem})">`;
		const gPostamble = `</g>`;
		const defs = Object.values(context.defs).join("");
		
		return svgPreamble + (defs ? `<defs>${defs}</defs>` : "") + gPreamble + innerSVGComposition + gPostamble + svgPostamble;
	}
}


//-------------------------------------------------------------------------------
// SamsaGlyph
function SamsaGlyph (init={}) {

	this.id = init.id;
	this.name = init.name;
	this.font = init.font;
	this.numPoints = init.numPoints || 0;
	this.numberOfContours = init.numberOfContours || 0;
	this.instructionLength = 0;
	this.points = init.points || [];
	this.components = init.components || [];
	this.endPts = init.endPts || [];
	this.tvts = init.tvts ? font.gvar.buffer.decodeTvts(this) : undefined; // init.tvts is boolean
	this.curveOrder = 2; 
	//this.curveOrder = init.curveOrder || (this.font ? this.font.curveOrder : undefined);
}


// SamsaGlyph.instantiate()
// - instantiates a glyph
// The first argument is either a SamsaInstance or a tuple
// - if it’s a SamsaInstance, then it takes that instance’s tuple and gets inserted into the glyphs array of the instance
// - if it’s a tuple, then it is a standalone glyph
SamsaGlyph.prototype.instantiate = function(arg, options={}) {

	const iglyph = new SamsaGlyph();
	const font = this.font;
	const axisCount = font.fvar ? font.fvar.axisCount : 0;
	const ignoreIUP = false;

	if (arg instanceof SamsaInstance) {
		arg.glyphs[this.id] = iglyph;
		iglyph.instance = arg;
		iglyph.tuple = arg.tuple;
	}
	else if (validateTuple (arg, axisCount)) {
		iglyph.tuple = tuple;
		// it’s a glyph without an instance... this feels dangerous, since we may need ItemVariationStore data that we are not yet calculating JIT
	}
	else {
		iglyph.tuple = Array(axisCount).fill(0);
	}

	iglyph.id = this.id;
	iglyph.name = this.name;
	iglyph.font = this.font;
	iglyph.numPoints = this.numPoints;
	iglyph.numberOfContours = this.numberOfContours;
	iglyph.instructionLength = this.instructionLength;
	iglyph.components = this.components;
	iglyph.endPts = this.endPts;
	iglyph.tvts = this.tvts ? this.tvts : this.tvts = font.gvar ? font.gvar.buffer.decodeTvts(this) : []; // an empty array means we have found no TVTS; undefined means we have not yet looked
	iglyph.curveOrder = this.curveOrder;
	iglyph.touched = []; // helpful for visualising variations
	iglyph.viz = {tvts: []}; // visualization data

	// instantiate points: copy the points of glyph into iglyph
	let p=this.points.length;
	while (--p >= 0) {
		const point = this.points[p];
		iglyph.points[p] = [point[0], point[1], point[2]]; // note that [...point] is slower :)
	}

	// go through each tvt (=tuple variation table) for this glyph
	this.tvts.forEach(tvt => {

		const scaledDeltas = [];
		const touched = [];
		let pt = this.points.length;
		let S;

		// initialize the scaledDeltas array to zero vectors
		while (--pt >= 0) {
			scaledDeltas[pt] = [0,0];
		}

		// sharedScalars are disabled for now
		if (true) {
			// go thru each axis, multiply a scalar S from individual scalars AS
			// - if the current designspace location is outside of this tvt’s tuple, we get S = 0 and nothing is done
			// - based on pseudocode from https://www.microsoft.com/typography/otspec/otvaroverview.htm
			S = 1
			for (let a=0; a<axisCount; a++) {
				const ua = iglyph.tuple[a];
				const [start, peak, end] = [tvt.start[a], tvt.peak[a], tvt.end[a]]; // TODO: store these as 3-element arrays
				if (peak != 0) {
					if (ua < start || ua > end) {
						S = 0;
						break;
					}
					else if (ua < peak)
						S *= (ua - start) / (peak - start);
					else if (ua > peak)
						S *= (end - ua) / (end - peak);
				}
			}
		}
		else {}


		// now we can move the points by S * delta
		// OPTIMIZE: it must be possible to optimize for the S==1 case, but attempts reduce speed...
		if (S != 0) {

			pt = this.points.length;
			while (--pt >= 0) {
				const delta = tvt.deltas[pt];				
				if (delta !== null && delta !== undefined) { // if not IUP
					touched[pt] = true; // touched[] is just for this tvt; newGlyph.touched[] is for all tvts (in case we want to show IUP in UI) 
					scaledDeltas[pt] = [S * delta[0], S * delta[1]];
				}
			}

			// IUP
			// - TODO: ignore this step for composites (even though it is safe because numberOfContours<0)
			// - OPTIMIZE: calculate IUP deltas when parsing, then a "deltas" variable can point either to the original deltas array or to a new scaled deltas array (hmm, rounding will be a bit different if IUP scaled deltas are always based on the 100% deltas)
			if (!tvt.allPoints && this.numberOfContours > 0 && touched.length > 0 && !ignoreIUP) { // it would be nice to check "touched.length < glyph.points.length" but that won’t work with sparse arrays, and must also think about phantom points

				// for each contour
				for (let c=0, startPt=0; c<this.numberOfContours; c++) {
				
					// OPTIMIZE: check here that the contour is actually touched
					const numPointsInContour = this.endPts[c]-startPt+1;
					let firstPrecPt = -1; // null value
					let precPt, follPt;
					for (let p=startPt; p!=firstPrecPt; ) {
						let pNext = (p-startPt+1)%numPointsInContour+startPt;
						if (touched[p] && !touched[pNext]) { // found a precPt
							// get precPt and follPt
							precPt = p;
							follPt = pNext;
							if (firstPrecPt == -1)
								firstPrecPt = precPt;
							do {
								follPt = (follPt-startPt+1) % numPointsInContour + startPt;
							} while (!touched[follPt]) // found the follPt

							// perform IUP for x(0), then for y(1)
							for (let xy=0; xy<=1; xy++) {

								// IUP spec: https://www.microsoft.com/typography/otspec/gvar.htm#IDUP
								const pA = this.points[precPt][xy];
								const pB = this.points[follPt][xy];
								const dA = scaledDeltas[precPt][xy];
								const dB = scaledDeltas[follPt][xy];

								for (let q=pNext, D, T, Q; q!=follPt; q= (q-startPt+1) % numPointsInContour + startPt) {
									Q = this.points[q][xy];
									if (pA == pB)
										D = dA == dB ? dA : 0;
									else {
										if (Q <= pA && Q <= pB)
											D = pA < pB ? dA : dB;
										else if (Q >= pA && Q >= pB)
											D = pA > pB ? dA : dB;
										else {
											T = (Q - pA) / (pB - pA); // safe for divide-by-zero
											D = (1-T) * dA + T * dB;
										}
									}
									scaledDeltas[q][xy] += D;
								}
							}
							p = follPt;
						}
						else if (pNext == startPt && firstPrecPt == -1) // failed to find a precPt, so abandon this contour
							break;
						else
							p = pNext;
					}
					startPt = this.endPts[c]+1;
				}
			} // if IUP

			// add the net deltas to the glyph
			// TODO: Try to avoid this step for points that were not moved
			// TODO: Understand whether rounding is definitely wrong here.
			// - https://docs.microsoft.com/en-us/typography/opentype/spec/otvaroverview
			iglyph.points.forEach((point, pt) => {
				point[0] += scaledDeltas[pt][0];
				point[1] += scaledDeltas[pt][1];
			});
		}

		// store S and scaledDeltas so we can use them in visualization
		// - maybe we should recalculate multiple AS values and 1 S value in the GUI so we don’t add load to samsa-core
		if (options.visualization) {
			iglyph.viz.tvts.push({
				S: S,
				scaledDeltas: scaledDeltas,
			});
		}
	}); // end of processing the tvts

	// recalculate bbox
	// - TODO: fix for composites and non-printing glyphs (even though the latter don’t record a bbox)
	// iglyph.recalculateBounds();

	// attach the instantiated glyph to the instance
	if (iglyph.instance)
		iglyph.instance.glyphs[this.id] = iglyph;

	return iglyph;
}


// decompose()
// - decompose a composite glyph into a new simple glyph
// - TODO: fix this for the new paradigms :)
//SamsaGlyph.prototype.decompose = function (tuple, params) {
//SamsaGlyph.prototype.decompose = function (instance, params) {
SamsaGlyph.prototype.decompose = function (params) {

	// "this" is either a glyph (without an instance) or an instantiated glyph (with an instance)

	const font = this.font;
	let simpleGlyph = new SamsaGlyph( {
		id: this.id,
		name: this.name,
		font: font,
		curveOrder: this.curveOrder,
		endPts: [],
	} );

	if (this.instance) {
		simpleGlyph.instance = this.instance;
	}

	let offset, transform, flags;
	if (params) {
		offset = params.offset;
		transform = params.transform;
		flags = params.flags;
	}

	// simple case
	if (this.numberOfContours >= 0) {

		if (!params) // optimization for case when there’s no offset and no transform (we can make this return "this" itself: the decomposition of a simple glyph is itself)
			return this;

		// append all the points (ignore phantom points)
		for (let pt=0; pt<this.numPoints; pt++) {

			// spec: https://docs.microsoft.com/en-us/typography/opentype/spec/glyf
			let point = [ this.points[pt][0], this.points[pt][1], this.points[pt][2] ]; // needs to be a deep copy, I think

			// offset before transform
			if (offset && (flags & 0x0800)) { // SCALED_COMPONENT_OFFSET
				point[0] += offset[0];
				point[1] += offset[1];
			}

			// transform matrix?
			if (transform) {
				let x = point[0], y = point[1];
				point[0] = x * transform[0] + y * transform[1];
				point[1] = x * transform[2] + y * transform[3];
			}

			// offset after transform
			if (offset && !(flags & 0x0800)) { // SCALED_COMPONENT_OFFSET
				point[0] += offset[0];
				point[1] += offset[1];
			}

			simpleGlyph.points.push(point);
		}

		// fix up simpleGlyph
		// TODO: can these point to the original objects?
		this.endPts.forEach(endPt => {
			simpleGlyph.endPts.push(endPt + simpleGlyph.numPoints);
		});
		simpleGlyph.numPoints += this.numPoints;
		simpleGlyph.numberOfContours += this.numberOfContours;
	}

	else {
		// step thru components, adding points to simpleGlyph
		this.components.forEach((component, c) => {

			// get gc, the component glyph, instantiate if necessary
			let gc;
			if (this.instance) {
				gc = this.instance.glyphs[component.glyphId]; // attempt to get the instanted glyph
				if (!gc) { // if it’s not already instantiated, instantiate it
					const gcDefault = font.glyphs[component.glyphId] || font.loadGlyphById(component.glyphId); // fetch from binary if not already loaded
					gc = gcDefault.instantiate(this.instance); // it still needs to be decomposed
				}
			}
			else {
				gc = font.glyphs[component.glyphId] || font.loadGlyphById(component.glyphId);
			}

			const matched = component.matchedPoints;
			const newTransform = component.transform;
			let newOffset = [ this.points[c][0], this.points[c][1] ];
			if (offset) {
				newOffset[0] += offset[0];
				newOffset[1] += offset[1];
			}

			// decompose!
			// - this is the recursive step
			let decomp = gc.decompose({
				offset: newOffset,
				transform: newTransform,
				flags: component.flags,
				matched: matched,
			});

			// get delta if this component is positioned with "matched points"
			let dx=0, dy=0;
			if (matched) {
				dx = simpleGlyph.points[matched[0]][0] - decomp.points[matched[1]][0];
				dy = simpleGlyph.points[matched[0]][1] - decomp.points[matched[1]][1];
			}

			// we now have the simple glyph "decomp": no offset or transform is needed (but we may need to match points using dx,dy)
			for (let p=0; p<decomp.numPoints; p++) {
				simpleGlyph.points.push([
					decomp.points[p][0] + dx,
					decomp.points[p][1] + dy,
					decomp.points[p][2]
				]);
			}

			// fix up simpleGlyph
			decomp.endPts.forEach(endPt => {
				simpleGlyph.endPts.push(endPt + simpleGlyph.numPoints);
			});
			simpleGlyph.numPoints += decomp.numPoints;
			simpleGlyph.numberOfContours += decomp.numberOfContours;
		});
	}


	// add the 4 phantom points
	simpleGlyph.points.push([0,0,0], [this.points[this.points.length-3][0],0,0], [0,0,0], [0,0,0]);

	// return the simple glyph
	return simpleGlyph;

}

// svgPath()
// - export glyph as a string suitable for the SVG <path> "d" attribute
SamsaGlyph.prototype.svgPath = function () {

	let contours = [];
	let contour, contourLen, pt, pt_, pt__, p, startPt;
	let path = "";

	switch (this.curveOrder) {

		// quadratic curves
		case 2:

			// LOOP 1: convert the glyph contours into an SVG-compatible contours array
			startPt = 0;
			this.endPts.forEach(endPt => {
				contourLen = endPt-startPt+1; // number of points in this contour
				contour = [];

				// insert on-curve points between any two consecutive off-curve points
				for (p=startPt; p<=endPt; p++) {
					pt = this.points[p];
					pt_ = this.points[(p-startPt+1)%contourLen+startPt];
					contour.push (pt);
					if (!(pt[2] & 0x01 || pt_[2] & 0x01)) // if we have 2 consecutive off-curve points...
						contour.push ( [ (pt[0]+pt_[0])/2, (pt[1]+pt_[1])/2, 1 ] ); // ...we insert the implied on-curve point
				}

				// ensure SVG contour starts with an on-curve point
				if (!(contour[0][2] & 0x01)) // is first point off-curve?
					contour.unshift(contour.pop()); // OPTIMIZE: unshift is slow, so maybe build two arrays, "actual" and "toAppend", where "actual" starts with an on-curve

				// append this contour
				contours.push(contour);

				startPt = endPt+1;
			});

			// LOOP 2: convert contours array to an actual SVG path
			// - we’ve already fixed things in loop 1 so there are never consecutive off-curve points
			contours.forEach(contour => {
				for (p=0; p<contour.length; p++) {
					pt = contour[p];
					if (p==0)
						path += `M${pt[0]} ${pt[1]}`;
					else {
						if (pt[2] & 0x01) { // on-curve point (consume 1 point)
							path += `L${pt[0]} ${pt[1]}`;
						}
						else { // off-curve point (consume 2 points)
							pt_ = contour[(++p) % contour.length]; // increments loop variable p
							path += `Q${pt[0]} ${pt[1]} ${pt_[0]} ${pt_[1]}`;
						}
					}
				}
				path += "Z";
			});

			break;

		// cubic curves
		// - EXPERIMENTAL!
		// - for use with ttf-cubic format, cff (when we implement cff), and glyf1
		case 3:
			startPt = 0;

			// loop through each contour
			this.endPts.forEach(endPt => {

				let firstOnPt;
				contourLen = endPt-startPt+1;

				// find this contour’s first on-curve point: it is either startPt, startPt+1 or startPt+2 (else the contour is invalid)
				if      (contourLen >= 1 && this.points[startPt][2] & 0x01)
					firstOnPt = 0;
				else if (contourLen >= 2 && this.points[startPt+1][2] & 0x01)
					firstOnPt = 1;
				else if (contourLen >= 3 && this.points[startPt+2][2] & 0x01)
					firstOnPt = 2;

				if (firstOnPt !== undefined) {

					// loop through all this contour’s points
					for (p=0; p<contourLen; p++) {

						pt = this.points[startPt + (p+firstOnPt) % contourLen];
						if (p==0)
							path += `M${pt[0]} ${pt[1]}`;
						else {
							if (pt[2] & 0x01) { // on-curve point (consume 1 point)
								path += `L${pt[0]} ${pt[1]}`;
							}
							else { // off-curve point (consume 3 points)
								pt_ = this.points[startPt + ((++p + firstOnPt) % contourLen)]; // increments loop variable p
								pt__ = this.points[startPt + ((++p + firstOnPt) % contourLen)]; // increments loop variable p
								path += `C${pt[0]} ${pt[1]} ${pt_[0]} ${pt_[1]} ${pt__[0]} ${pt__[1]}`;
							}
							if (p == (contourLen+firstOnPt-1) % contourLen)
								path += "Z";
						}
					}
				}

				startPt = endPt+1;
			});
			break;
	}

	return path;
};

// exportPath()
// - export glyph outline in arbitrary ways, according to the supplied SamsaContext
// - SamsaContext provides various functions, ctx.moveto(), ctx.lineto, ctx.quadto, etc.
SamsaGlyph.prototype.exportPath = function (ctx) {

	const contours = [];
	const glyph = this.numberOfContours < 0 ? this.decompose() : this;
	let contour, contourLen, pt, pt_, pt__, c, p, startPt;

	switch (this.curveOrder) {

		// quadratic curves
		case 2:

			// LOOP 1: convert the glyph contours into an SVG-compatible contours array
			startPt = 0;
			//this.endPts.forEach(endPt => {
			glyph.endPts.forEach(endPt => {
				
				contourLen = endPt-startPt+1; // number of points in this contour
				contour = [];

				// insert on-curve points between any two consecutive off-curve points
				for (p=startPt; p<=endPt; p++) {
					// pt = this.points[p];
					// pt_ = this.points[(p-startPt+1)%contourLen+startPt];
					pt = glyph.points[p];
					pt_ = glyph.points[(p-startPt+1)%contourLen+startPt];
					contour.push (pt);
					if (!(pt[2] & 0x01 || pt_[2] & 0x01)) // if we have 2 consecutive off-curve points...
						contour.push ( [ (pt[0]+pt_[0])/2, (pt[1]+pt_[1])/2, 1 ] ); // ...we insert the implied on-curve point
				}

				// ensure SVG contour starts with an on-curve point
				if (!(contour[0][2] & 0x01)) // is first point off-curve?
					contour.unshift(contour.pop()); // OPTIMIZE: unshift is slow, so maybe build two arrays, "actual" and "toAppend", where "actual" starts with an on-curve

				// append this contour
				contours.push(contour);
				startPt = endPt+1;
			});

			// LOOP 2: convert contours array to an actual SVG path
			// - we’ve already fixed things in loop 1 so there are never consecutive off-curve points
			contours.forEach(contour => {
				for (p=0; p<contour.length; p++) {
					pt = contour[p];
					if (p==0) {
						ctx.moveto(pt[0], pt[1]);
					}
					else {
						if (pt[2] & 0x01) { // on-curve point (consume 1 point)
							ctx.lineto(pt[0], pt[1]);
						}
						else { // off-curve point (consume 2 points)
							pt_ = contour[(++p) % contour.length]; // increments loop variable p
							ctx.quadto(pt[0], pt[1], pt_[0], pt_[1]);
						}
					}
				}
				ctx.closepath();
			});

			break;

		// cubic curves
		// - EXPERIMENTAL!
		// - for use with ttf-cubic format, cff (when we implement cff), and glyf1
		case 3:
			startPt = 0;

			// loop through each contour
			this.endPts.forEach(endPt => {

				let firstOnPt;
				contourLen = endPt-startPt+1;

				// find this contour’s first on-curve point: it is either startPt, startPt+1 or startPt+2 (else the contour is invalid)
				if      (contourLen >= 1 && this.points[startPt][2] & 0x01)
					firstOnPt = 0;
				else if (contourLen >= 2 && this.points[startPt+1][2] & 0x01)
					firstOnPt = 1;
				else if (contourLen >= 3 && this.points[startPt+2][2] & 0x01)
					firstOnPt = 2;

				if (firstOnPt !== undefined) {

					// loop through all this contour’s points
					for (p=0; p<contourLen; p++) {

						pt = this.points[startPt + (p+firstOnPt) % contourLen];
						if (p==0) {
							ctx.moveto(pt[0], pt[1]);
						}
						else {
							if (pt[2] & 0x01) { // on-curve point (consume 1 point)
								ctx.lineto(pt[0], pt[1]);
							}
							else { // off-curve point (consume 3 points)
								pt_ = this.points[startPt + ((++p + firstOnPt) % contourLen)]; // increments loop variable p
								pt__ = this.points[startPt + ((++p + firstOnPt) % contourLen)]; // increments loop variable p
								ctx.curveto(pt[0], pt[1], pt_[0], pt_[1], pt__[0], pt__[1]);
							}
							if (p == (contourLen+firstOnPt-1) % contourLen) {
								ctx.closepath();
							}
						}
					}
				}

				startPt = endPt+1;
			});
			break;
	}

	//return path;
};

// process paint tables for a glyph, producing a DAG (directed acyclic graph) of paint tables, that can be used to render the glyph or make a diagram of its paint structure
// - return false if there is no COLRv1 data for this glyph
// - consider returning COLRv0 data in the form of paint tables, so that only one colour "renderer" is needed
SamsaGlyph.prototype.paint = function (context={}) {
	const offset = this.findCOLR(1);

	if (!offset) {
		return false; // no COLRv1 data for this glyph
	}
	else {
		const font = this.font;
		const buf = font.bufferFromTable("COLR");

		if (context.color === undefined) context.color = 0x000000ff;
		if (!context.rendering) context.rendering = {};
		if (!context.defs) context.defs = {};
		if (!context.font) context.font = font;
		if (!context.rendering) context.rendering = {};
		context.gradientTransform = "";
		context.gradientTransformId = 0; // we add extra gradients to the defs if they are transformed
		context.paintIds = []; // keep track of the paint IDs we’ve used (must be reset for each glyph): we 
		context.lastGlyphId = null;

		// fetch the DAG of paint tables recursively
		buf.seek(offset);
		const paint = buf.decodePaint(context); // recursive (offer a non-recursive option?)
		context.paintIds = null; // we no longer need this
		return paint;
	}
}


// paintSVG() renders a COLRv1 DAG (paint tree) recursively
// - paint (required) is the root of the DAG, or subroot when called recursively
// - context (required) contains:
//   .font, a reference to the SamsaFont object
//   .color, the foreground color being used in U32 format (optional, default is 0x000000ff)
//   .defs, object to cache repeatable items in the text run:
//       - the monochrome glyph paths, identitied by p<glyphId>
//       - the gradients, identified by g<gradientId> where gradientId is actually the paint offset where the gradient definition starts
// - the function does not make use of the SamsaGlyph object at all, it’s just convenient for export
// - the main switch statement selects between the 4 paint types; paint types group paint formats together, and are stored in PAINT_TYPES; PAINT_COMPOSE is the only non-recursive paint type (paint format=32 is a special case which needs to recurse 2 paint trees before the compose operation)
// - the result of a paintSVG() still needs to be wrapped in a <svg> element, and <defs> needs to be expanded
SamsaGlyph.prototype.paintSVG = function (paint, context) {

	const font = context.font;
	const defs = context.defs;
	const palette = font.CPAL.palettes[context.paletteId || 0];
	if (context.color === undefined)
		context.color = 0x000000ff; // black

	let svg = `<g>`;

	switch (PAINT_TYPES[paint.format]) {

		case PAINT_LAYERS: {
			paint.children.forEach(child => {
				svg += this.paintSVG(child, context);
			});
			break;
		}

		case PAINT_SHAPE: {
			// retrieve the glyph path definition if we don't already have it, and insert it into defs
			if (!defs[`p${paint.glyphID}`]) {
				const glyph = font.glyphs[paint.glyphID] || font.loadGlyphById(paint.glyphID);
				const iglyph = glyph.instantiate(context.instance);
				const path = iglyph.svgGlyphMonochrome(0);
				defs[`p${paint.glyphID}`] = `<path id="p${paint.glyphID}" d="${path}"/>`;
			}
			context.lastGlyphId = paint.glyphID;
			svg += this.paintSVG(paint.children[0], context); // there’s only one child; this should be a fill or a gradient (or maybe another PAINT_SHAPE)
			break;
		}

		case PAINT_TRANSFORM: {
			const {scale, skew, translate, rotate, center, matrix} = paint;
			let transform = "";
			if (translate) {
				transform = `translate(${translate[0]} ${translate[1]})`;
			}
			else if (matrix) {
				transform = `matrix(${matrix.join(" ")})`;
			}
			else if (rotate) {
				transform += `rotate(${-rotate}` + (center ? ` ${center[0]} ${center[1]}` : "") +`)`; // flip sign of angle, and use the 3-argument form if there is a center
			}
			else {
				if (center) {
					transform += `translate(${center[0]} ${center[1]})`;
				}
				if (scale) {
					transform += `scale(${scale.join(" ")})`; // join() handles 1 or 2 scale operands
				}
				else if (skew) {
					transform += `skewX(${-skew[0]})skewY(${-skew[1]})`; // flip sign of angles
				}
				if (center) {
					transform += `translate(${-center[0]} ${-center[1]})`;
				}
			}

			if (context.lastGlyphId === null) {
				svg = `<g transform="${transform}">`; // rewrite <g> tag
			}
			else {
				context.gradientTransform += transform;
			}
			svg += this.paintSVG(paint.children[0], context); // there’s only one child
			break;
		}

		case PAINT_COMPOSE: {

			// PaintComposite
			if (paint.format == 32) {

				if (context.paintComposites) // are we recording?
					context.paintComposites.add(this.id);
				// console.error("Attempting PaintComposite ...");
				// console.log(paint);

				const m = paint.compositeMode;
				const [modeType, mode] = SVG_PAINTCOMPOSITE_MODES[m]; // e.g. ["F", "atop"] for COMPOSITE_SRC_ATOP or ["M", "difference"] for COMPOSITE_DIFFERENCE
				const srcDag = this.paintSVG(paint.children[0], context); // source
				const destDag = this.paintSVG(paint.children[1], context); // destination

				let svg = "";
				let src = "src";
				let dest = "dest";
				if (m >= 1 && m <= 10 && (m % 2 == 0)) {
					[src, dest] = [dest, src]; // swap src and dest for the even-numbered modes of over, in, out, atop and src and dest
				}
				
				// always push the 2 shapes as defs
				// defs.push(`<rect id="${src}" x="0" y="0" width="100" height="100" fill="#0000ff80"/>`); // src
				// defs.push(`<rect id="${dest}" x="50" y="50" width="100" height="100" fill="#ff0000"/>`); // dest
				
				switch (modeType) {
					
					// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComposite
					case "F": {
						defs[`filter-${m}`] = `<filter id="filter-${m}">
							<feImage href="#${dest}" x="0px" y="0px" width="300px" height="300px" filterUnits="userSpaceOnUse" primitiveUnits="userSpaceOnUse" />
							<feComposite in="SourceGraphic" operator="${mode}" />
							</filter>`;
						svg += `<g><use href="#${src}" style="filter:url(#filter-${m})" /></g>`;      
						break;
					}
					
					// https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode
					case "M": {
						svg += `<g style="isolation: isolate;">
									<use href="#src" style="mix-blend-mode: ${mode};" />
									<use href="#dest" style="mix-blend-mode: ${mode};" />
								</g>`;
						break;
					}
					
					// simple methods
					case "-": {
						if (m !== 0) svg += `<g><use href="#${src}" /></g>`; // if not COMPOSITE_CLEAR
						break;      
					}
					
				}						
			}

			// simple fill and gradient fill
			else {

				const paintFormatStatic = paint.format - paint.format % 2;

				// simple fill
				if (paintFormatStatic == 2) {
					const paletteIndex = paint.paletteIndex;
					const color = paletteIndex == 0xffff ? context.color : palette.colors[paletteIndex];
					const attrs = {
						href: `#p${context.lastGlyphId}`,
						fill: font.hexColorFromU32(color),
					}
					if (paint.alpha !== 1)
						attrs["fill-opacity"] = paint.alpha;
					svg += `<use${expandAttrs(attrs)}/>`;
				}

				// gradient fill
				else {
					let gradientId = "g" + paint.offset; // this gets modified if there is a transform

					// do we already have this gradient in the defs?
					if (!defs[gradientId] || context.gradientTransform) { // we try not to repeat gradients, but we always store them if there's a transform

						// we must store the gradient separatelt if it has a transform
						if (context.gradientTransform)
							gradientId += "-" + context.gradientTransformId;

						// set the initial attributes of the gradient element (we set more specific attributes later)
						const attrs = {
							id: gradientId,
							gradientUnits: "userSpaceOnUse",
							spreadMethod: paint.colorLine.extend ? SVG_GRADIENT_EXTEND_MODES[paint.colorLine.extend] : undefined, // we could allow "pad" here, but instead we ignore EXTEND_PAD (0) since it is default behaviour
						};

						// is there a transform to use? (the shape transform should already have been cleared)
						if (context.gradientTransform)
							attrs.gradientTransform = context.gradientTransform;

						// get the colorLine stops for all gradient types
						let stops = "";
						let gradientElement;
						paint.colorLine.colorStops.forEach(colorStop => {
							const color = colorStop.paletteIndex == 0xffff ? context.color : palette.colors[colorStop.paletteIndex];
							const attrs = {
								offset: `${colorStop.stopOffset*100}%`,
								"stop-color": font.hexColorFromU32(color),
							}
							if (colorStop.alpha != 1)
								attrs["stop-opacity"] = colorStop.alpha;
							stops += `<stop${expandAttrs(attrs)}/>`;
						});

						switch (paintFormatStatic) {

							// PaintLinearGradient (4), PaintVarLinearGradient (5)
							// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient
							case 4:
								[attrs.x1, attrs.y1] = paint.points[0];
								[attrs.x2, attrs.y2] = font.linearGradientFromThreePoints(paint.points);
								gradientElement = "linearGradient";
								break;

							// PaintRadialGradient (6), PaintVarRadialGradient (7)
							// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient
							case 6:
								[attrs.fx, attrs.fy] = paint.points[0];
								[attrs.cx, attrs.cy] = paint.points[1];
								[attrs.fr, attrs.r]  = paint.radii;
								gradientElement = "radialGradient";
								break;

							// PaintSweepGradient (8), PaintVarSweepGradient (9)
							case 8:
								console.error("PaintSweepGradient is not implemented yet");
								//console.log(paint);
								// paint.center
								// paint.startAngle
								// paint.endAngle
								gradientElement = "sweepGradient"; // invalid SVG, but at least will not break the output
								break;
						}

						// add the gradient to the defs
						defs[gradientId] = `<${gradientElement}${expandAttrs(attrs)}>${stops}</${gradientElement}>`;

						// gradientTransform housekeeping
						context.gradientTransformId++;
						context.gradientTransform = "";
					}

					// so which glyph outline we are using?
					// TODO: we’re using lastGlyphId for now, but it is unsatisfactory since we may have several consecutive format 10 tables defining a clip path (in practice this seems uncommon)
					svg += `<use href="#p${context.lastGlyphId}" fill="url(#${gradientId})" />`;
				}

			}
			context.lastGlyphId = null;
			break;
		}

		default: {
			console.error("Should not get here", paint);
			break;
		}

	}
	
	svg += "</g>";
	return svg;
}

SamsaGlyph.prototype.svgGlyphCOLRv1 = function (context={}) {
	const result = this.findCOLR(1); // might be undefined
	if (result) {

		const paintDag = this.paint(context);

		//console.log(paintDag);
		if (paintDag) {
			const svgResult = this.paintSVG(paintDag, context); // we could bring the paintSVG function inside here, but there seems little point
			return svgResult; // this is a <g> element ready to be inserted into an <svg>, but we must also remember to add the defs (paths and gradients) from the context
		}
		else {
			return false; // we didn’t find a COLRv1 glyph
		}
	}
}

SamsaGlyph.prototype.svgGlyphCOLRv0 = function (context={}) { // we need to poss the instance, right?
	const result = this.findCOLR(0); // might be undefined
	if (result) {
		const [firstLayerIndex, numLayers] = result;
		const font = this.font;
		const buf = font.bufferFromTable("COLR");
		const colr = font.COLR;
		const cpal = font.CPAL;
		//const defaultColor = context.color ?? 0x000000ff; // default color // allows 0x000000000 (a valid transparent color)
		const defaultColor = context.color === undefined ? 0x000000ff : context.color; // default color // allows 0x000000000 (a valid transparent color)
		const palette = cpal.palettes[context.paletteId || 0];
		let paths = "";
		// TODO: store these paths in defs for efficient reuse
		for (let i=0; i<numLayers; i++) {
			buf.seek(colr.layerRecordsOffset + 4 * (firstLayerIndex + i));
			const glyphId = buf.u16;
			const paletteIndex = buf.u16;
			const layerGlyph = font.glyphs[glyphId];
			const iGlyph = layerGlyph.instantiate(context.instance);
			const dGlyph = iGlyph.decompose();
			if (dGlyph.numberOfContours > 0) {
				const layerColor = paletteIndex == 0xffff ? defaultColor : palette.colors[paletteIndex]; // TODO: omit fill if paletteIndex == 0xffff, and put it in the containing <g> element instead
				paths += `<path d="${dGlyph.svgPath()}" fill="${font.hexColorFromU32(layerColor)}"/>\n`; // TODO: precalculate the hex strings for the palettes? NO
			}
		}
		return paths;
	}
	else {
		return false; // we didn’t find a COLRv0 glyph
	}
}

function SamsaContext(options) {
	this.path = [];
	this.beginpath = options.beginpath;
	this.moveto = options.moveto;
	this.lineto = options.lineto;
	this.quadto = options.quadto;
	this.cubicto = options.cubicto;
	this.closepath = options.closepath;
	this.color = options.color;
	this.paletteId = options.paletteId;
	this.gradientId = options.gradientId;
	this.gradientPoints = options.gradientPoints;
	this.gradientStops = options.gradientStops;
	this.gradientType = options.gradientType;
	//this.popTransform = options.gradientTransform;
	this.ctx = options.ctx; // this is used for the actual HTML canvas context (ignored in SVG)
}


// SamsaGlyph.prototype.svgGlyphMonochrome = function () {

// 	// TODO: don’t return anything for empty glyphs, but take account of metrics
// 	return `<path d="${this.svgPath()}"/>`;

// }


SamsaGlyph.prototype.svgGlyphMonochrome = function (wrap=1) {

	// TODO: don’t return anything for empty glyphs, but take account of metrics

	//return `<path d="${this.svgPath()}"/>`;
	// this is SVG but we can do canvas too

	let ctx = new SamsaContext(DRAW_FUNCTIONS[CONTEXT_SVG]);
	this.exportPath(ctx); // complete the ctx.path string with the SVG representation of the glyph

	if (wrap)
		return `<path d="${ctx.path.join("")}"/>`;
	else
		return ctx.path.join("");

	// let ctxCanvas = new SamsaContext(DRAW_FUNCTIONS[CONTEXT_CANVAS]);
	// ctxCanvas.ctx = ctx;
	//ctxCanvas.ctx.fillStyle = "#ff0000";


	// return `<path d="${this.svgPath()}"/>`;

}


SamsaGlyph.prototype.canvasGlyphMonochrome = function (ctx) {
	let ctxSamsa = new SamsaContext(DRAW_FUNCTIONS[CONTEXT_CANVAS]);
	//ctxCanvas.ctx = ctx;
	this.exportPath(ctxSamsa); // now this.path contains multiple drawing commands

	//console.log(ctxCanvas.path);

	// fetch the drawing commands
	ctx.beginPath();

	ctxSamsa.path.forEach(cmd => {

		const op = cmd.pop();
		switch (op) {

			case "M":
				ctx.moveTo(...cmd);
				break;
			
			case "L":
				ctx.lineTo(...cmd);
				break;

			case "C":
				ctx.bezierCurveTo(...cmd);
				break;
			
			case "Q":
				ctx.quadraticCurveTo(...cmd);
				break;

			case "Z":
				ctx.closePath();
				break;
		}
	})
	ctx.fill();
}


SamsaGlyph.prototype.maxCOLR = function () {
	return this.findCOLR(1) ? 1 : this.findCOLR(0) ? 0 : undefined;
}

// does this glyph have a color glyph of the given COLR table version?
// - we could build this into the svgGlyphCOLRv1() and svgGlyphCOLRv0() methods but defining it separately makes it possible to test for presence efficiently
SamsaGlyph.prototype.findCOLR = function (version) {
	const font = this.font;
	const colr = font.COLR;
	if (colr) {
		let b=0;
		let glyphId;

		if (version == 1 && colr.version >= 1) {
			return colr.baseGlyphPaintRecords[this.id]; // returns offset to the paint record for this glyph or undefined
		}
		else if (version == 0 && colr.version >= 0) {
			return colr.baseGlyphRecords[this.id]; // returns [firstLayerIndex, numLayers] for this glyph or undefined
		}
	}
	return false;
}

// SamsaGlyph.svg()
// - we don’t want this method to supply a final svg... since we 
// - options supplies various parameters to style the resulting SVG
//     Styling is applied to the <g> element that contains the glyph.
//     Try { fill: "red" } or { fill: "red", transform: "translate(130,500) scale(0.5 -0.5)" }
//     Currently only supports class, fill, stroke, strokeWidth, transform.
//     Note that the transform property is assigned to the transform attribute, not the style attribute.
// - options.colr selects the *maximum* color format to use: 1=COLRv1, 0=COLRv0, -1=monochrome
// - options.paletteId selects a paletteId in the font
// - options.palette supplies a custom palette
SamsaGlyph.prototype.svg = function (context={}) {

	const font = this.font;

	// TODO: add a comment containin the string and glyphids that this svg represents (maybe use class or id in the <g> ?)
	let svgString = "";
	let extra = (context.class ? ` class="${context.class}"` : "")
	          + (context.fill ? ` fill="${context.fill}"` : "")
	          + (context.stroke ? ` stroke="${context.stroke}"` : "")
	          + (context.strokeWidth ? ` stroke-width="${context.strokeWidth}"` : "")
			  + (context.transform ? ` transform="${context.transform}"` : "");
	// TODO: check these style things don’t interfere with the COLRv1 styling (or maybe that’s ok)
	// TODO: completely ignore this stuff, as beyond scope of getting svg for a glyph; it should be the <g> (+ optional translate) and nothing else

	// TODO: remove this SVG wrapper so we can return multiple a glyph run in a single SVG
	// - or maybe have a look thru an array of glyphs and offsets calculated from simple metrics or OpenType layout
	svgString += `<g${extra}>`;
	svgString += `<!-- glyph ${this.id} -->`;
	
	// attempt COLRv1, then COLRv0, then monochrome for this glyph
	svgString += font.COLR ? this.svgGlyphCOLRv1(context) || this.svgGlyphCOLRv0(context) || this.svgGlyphMonochrome() : this.svgGlyphMonochrome(); // this the default auto mode // TODO: offer method to select a specific format
	// - we can provide some results info in the context

	svgString += `</g>`;
	return svgString; // shall we just leave it like this?
}



// custom processors
/*
function moveto_svg {

}

function moveto_canvas {

}

function lineto_canvas {

}

function quadto_canvas {

}

function cubicto_canvas {

}
*/


const RENDERER_SVG = 1;
const RENDERER_CANVAS = 2;

const R_MOVETO = 1;
const R_LINETO = 2;
const R_QUADTO = 3;
const R_CUBICTO = 4;
const R_ENDPATH = 5;
const R_LAYER = 6;
const R_PAINT = 7;
const R_MAX = 8;

const renderFuncs = [];
renderFuncs[RENDERER_SVG] = [];
renderFuncs[RENDERER_CANVAS] = [];

// renderFuncs[RENDERER_SVG][R_MOVETO] = (ctx, x, y) => {

// });

// renderFuncs.get(RENDERER_SVG)
// const renderFuncs[RENDERER_SVG] = new Map()

// {
// 	R_MOVETO: (ctx, x, y) => {

// 	}

// };


// WOW this is working 2023-06-22 02:25
const CONTEXT_SVG = 1;
const CONTEXT_CANVAS = 2;
const DRAW_FUNCTIONS = [];
DRAW_FUNCTIONS[CONTEXT_SVG] = {
	beginpath: function () {
		; // nothing to do
	},
	moveto: function (x, y) {
		this.path.push(`M${x} ${y}`);
	},
	lineto: function (x, y) {
		this.path.push(`L${x} ${y}`);
	},
	quadto: function (x1, y1, x, y) {
		this.path.push(`Q${x1} ${y1} ${x} ${y}`);
	},
	cubicto: function (x1, y1, x2, y2, x, y) {
		this.path.push(`C${x1} ${y1} ${x2} ${y2} ${x} ${y}`);
	},
	closepath: function () {
		this.path.push(`Z`);
	},
};
// DRAW_FUNCTIONS[CONTEXT_CANVAS] = {
// 	beginpath: function () {
// 		this.path.push(["B"]);
// 	},
// 	moveto: function (x, y) {
// 		this.path.push(["M", x, y]);
// 	},
// 	lineto: function (x, y) {
// 		this.path.push(["L", x, y]);
// 	},
// 	quadto: function (x1, y1, x, y) {
// 		this.path.push(["Q", x1, y1, x, y]);
// 		;
// 	},
// 	cubicto: function (x1, y1, x2, y2, x, y) {
// 		this.path.push(["C", x1, y1, x2, y2, x, y]);
// 	},
// 	closepath: function () {
// 		this.path.push(["F"]);
// 	},		
// };

DRAW_FUNCTIONS[CONTEXT_CANVAS] = {
	beginpath: function () {
		this.path.push(["B"]);
	},
	moveto: function (x, y) {
		this.path.push([x, y, "M"]);
	},
	lineto: function (x, y) {
		this.path.push([x, y, "L"]);
	},
	quadto: function (x1, y1, x, y) {
		this.path.push([x1, y1, x, y, "Q"]);
		;
	},
	cubicto: function (x1, y1, x2, y2, x, y) {
		this.path.push([x1, y1, x2, y2, x, y, "C"]);
	},
	closepath: function () {
		this.path.push(["F"]);
	},		
};


/*
const moveTo = [];

// SVG rendering functions
moveTo[RENDERER_SVG] = (ctx, x, y) => {
	return `M${x} ${y}`;
}
lineTo[RENDERER_SVG] = (ctx, x, y) => {
	return `L${x} ${y}`;
}
quadTo[RENDERER_SVG] = (ctx, x1, y1, x, y) => {
	return `Q${x1} ${y1} ${x} ${y}`;
}
cubicTo[RENDERER_SVG] = (ctx, x1, y1, x2, y2, x, y) => {
	return `C${x1} ${y1} ${x2} ${y2} ${x} ${y}`;
}
endPath[RENDERER_SVG] = (ctx) => {
	return `Z`;
}
paint[RENDERER_SVG] = (ctx, paint) => {
	return `COLRv1 a whole stack of stuff`;
}
layer[RENDERER_SVG] = (ctx, glyph, color) => {
	return `COLRv0 layer`;
}
palette[RENDERER_SVG] = (ctx, palette) => {
	return `CPAL palette`;
}

// canvas rendering functions
moveTo[RENDERER_CANVAS] = (ctx, x, y) => {
	return `m x y`;
}
lineTo[RENDERER_CANVAS] = (ctx, x, y) => {
	return `l x y`;
}
*/

/*
function SamsaContext (name) {
	this.name = name;
	switch (this.name) {

		case "svg":
			this.type = RENDERER_SVG;
			break;
	
		case "canvas":
			this.type = RENDERER_CANVAS;
			break;
	
		default:
			break;
	}

}
*/

/*
const RENDERERS = {
	svg: {
		moveto: moveto_canvas,
		lineto: moveto_canvas,
		quadto: quadto_canvas,
		cubicto: cubicto_canvas,
		endpath: endpath_canvas,
	}
}
*/


// - works in browser and node



/*


QUESTIONS

The child possibilities for a PaintGlyph seem problematic, see Filling Shapes https://learn.microsoft.com/en-us/typography/opentype/spec/colr#filling-shapes

So the simple idea is that any of the fill operations can be used, solid and gradient.

Finally there’s the statement:
"The child of a PaintGlyph table is not, however, limited to one of the basic fill formats. Rather, the child can be the 
root of a sub-graph that describes some graphic composition that is used as a fill. Another way to describe the relationship 
between a PaintGlyph table and its child sub-graph is that the glyph outline specified by the PaintGlyph table defines a 
bounds, or clip region, that is applied to the fill composition defined by the child sub-graph."

So the main idea this seems to support is to generate a clip region, being the intersection of all the shapes of a sequence of PaintGlyphs.

Ok so far, and doable using <defs> and <clipPath> in SVG.

But then there’s this:
"Note: Shapes can also be derived using PaintGlyph tables in combination with other tables, such as PaintTransform 
(see Transformations) or PaintComposite (see Compositing and blending)."

The problem is the wording "in combination with". It’s possible that this means those Paint tables may have been used only as *parents* of this 
PaintGlyph table. If so, that keeps things under control, but it is not clear. The phrase could include the possibility of PaintTransform and 
PaintComposite as children of PaintGlyph. PaintTransform is not a big problem: we’d need to transform the shape and presumably also any gradient 
fill. However, if we allow PaintComposite children, it interferes with PaintComposite’s ability to compose onto the canvas, since it would be used 
as a clip region instead.

For now, let’s assume a sequence of PaintGlyphs followed by a fill only. No PaintTransforms, no PaintComposites after a PaintGlyph.

# Spec suggestions

## cmap
* Clarify that multiple character mappings are not intended to be active at the same time. For example, it is not permisslble to set up a 
font to use some mappings via Format 4, then fallback to Format 13 for "last resort" glyphs. Similarly, Format 12 tables  must be complete,
and must not rely on Format 4 as fallback.

## vmtx
* Show the vMetrics field explicitly.

## COLRv1
* List the possibilities for a Paint path as a language-like tree, or maybe a kind of regex.

## gvar
* Make clear the sharedTuple array is all about peak tuples, with inferred start and end being -1, 0 and 1 as approptiate.
* Also note that the scalars derived from the sharedTuples may be calculated just once per instance.
* These two statements conflict "Note that intermediateRegion flag is independent of the embeddedPeakTuple flag..." "An intermediate-region
 tuple variation table additionally has start and end n-tuples ... these are always represented using embedded tuple records." The truth is if  
 INTERMEDIATE_REGION is set, then EMBEDDED_PEAK_TUPLE must also be set. We have a problem in that if we have an embedded peak tuple that is NOT
 an intermediate region, the setting of start and end is not defined. We assume it’s 



*/

/***/ }),

/***/ "./src/emoji_15_0_ordering.js":
/*!************************************!*\
  !*** ./src/emoji_15_0_ordering.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   emojiMetadata: () => (/* binding */ emojiMetadata)
/* harmony export */ });


// This is copied from https://github.com/googlefonts/emoji-metadata/blob/main/emoji_15_0_ordering.json
// The only chnage is to top and tail it to make it a js module that exports the object.
const emojiMetadata = 
[
  {
    "group": "Smileys and emotions",
    "emoji": [
      {
        "base": [
          128512
        ],
        "alternates": [],
        "emoticons": [
          ":D"
        ],
        "shortcodes": [
          ":smile:"
        ],
        "animated": true
      },
      {
        "base": [
          128515
        ],
        "alternates": [],
        "emoticons": [
          ":-D"
        ],
        "shortcodes": [
          ":smile-with-big-eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          128516
        ],
        "alternates": [],
        "emoticons": [
          "^_^"
        ],
        "shortcodes": [
          ":grin:"
        ],
        "animated": true
      },
      {
        "base": [
          128513
        ],
        "alternates": [],
        "emoticons": [
          "*^_^*"
        ],
        "shortcodes": [
          ":grinning:"
        ],
        "animated": true
      },
      {
        "base": [
          128518
        ],
        "alternates": [],
        "emoticons": [
          "X-D"
        ],
        "shortcodes": [
          ":laughing:"
        ],
        "animated": true
      },
      {
        "base": [
          128517
        ],
        "alternates": [],
        "emoticons": [
          "^_^;"
        ],
        "shortcodes": [
          ":grin-sweat:"
        ],
        "animated": true
      },
      {
        "base": [
          128514
        ],
        "alternates": [],
        "emoticons": [
          ">w<"
        ],
        "shortcodes": [
          ":joy:"
        ],
        "animated": true
      },
      {
        "base": [
          129315
        ],
        "alternates": [],
        "emoticons": [
          "*>w<*"
        ],
        "shortcodes": [
          ":rofl:"
        ],
        "animated": true
      },
      {
        "base": [
          128557
        ],
        "alternates": [],
        "emoticons": [
          ";_;"
        ],
        "shortcodes": [
          ":loudly-crying:"
        ],
        "animated": true
      },
      {
        "base": [
          128521
        ],
        "alternates": [],
        "emoticons": [
          ";)"
        ],
        "shortcodes": [
          ":wink:"
        ],
        "animated": true
      },
      {
        "base": [
          128535
        ],
        "alternates": [],
        "emoticons": [
          ":*"
        ],
        "shortcodes": [
          ":kissing:"
        ],
        "animated": true
      },
      {
        "base": [
          128537
        ],
        "alternates": [],
        "emoticons": [
          "^3^"
        ],
        "shortcodes": [
          ":kissing-smiling-eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          128538
        ],
        "alternates": [],
        "emoticons": [
          ":**"
        ],
        "shortcodes": [
          ":kissing-closed-eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          128536
        ],
        "alternates": [],
        "emoticons": [
          ";*"
        ],
        "shortcodes": [
          ":kissing-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129392
        ],
        "alternates": [],
        "emoticons": [
          "<3:)"
        ],
        "shortcodes": [
          ":heart-face:",
          ":3-hearts:"
        ],
        "animated": true
      },
      {
        "base": [
          128525
        ],
        "alternates": [],
        "emoticons": [
          "\u2665_\u2665"
        ],
        "shortcodes": [
          ":heart-eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          129321
        ],
        "alternates": [],
        "emoticons": [
          "*_*"
        ],
        "shortcodes": [
          ":star-struck:"
        ],
        "animated": true
      },
      {
        "base": [
          129395
        ],
        "alternates": [],
        "emoticons": [
          "(\uff89\u25d5\u30ee\u25d5)\u266c\u266a"
        ],
        "shortcodes": [
          ":partying-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129760
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":melting:"
        ],
        "animated": true
      },
      {
        "base": [
          128579
        ],
        "alternates": [],
        "emoticons": [
          "(:"
        ],
        "shortcodes": [
          ":upside-down-face:"
        ],
        "animated": true
      },
      {
        "base": [
          128578
        ],
        "alternates": [],
        "emoticons": [
          ":)",
          ":-)"
        ],
        "shortcodes": [
          ":slightly-happy:"
        ],
        "animated": true
      },
      {
        "base": [
          129394
        ],
        "alternates": [],
        "emoticons": [
          ":,)"
        ],
        "shortcodes": [
          ":happy-cry:"
        ],
        "animated": true
      },
      {
        "base": [
          129401
        ],
        "alternates": [],
        "emoticons": [
          "(\uff1b\u4eba\uff1b)"
        ],
        "shortcodes": [
          ":holding-back-tears:"
        ],
        "animated": true
      },
      {
        "base": [
          128522
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blush:"
        ],
        "animated": true
      },
      {
        "base": [
          9786,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":warm-smile:"
        ],
        "animated": true
      },
      {
        "base": [
          128524
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":relieved:"
        ],
        "animated": true
      },
      {
        "base": [
          128527
        ],
        "alternates": [],
        "emoticons": [
          ">~>"
        ],
        "shortcodes": [
          ":smirk:"
        ],
        "animated": true
      },
      {
        "base": [
          128564
        ],
        "alternates": [],
        "emoticons": [
          "Z_Z"
        ],
        "shortcodes": [
          ":sleep:",
          ":tired:"
        ],
        "animated": true
      },
      {
        "base": [
          128554
        ],
        "alternates": [],
        "emoticons": [
          "(-.-)zzZZ"
        ],
        "shortcodes": [
          ":sleepy:"
        ],
        "animated": true
      },
      {
        "base": [
          129316
        ],
        "alternates": [],
        "emoticons": [
          "(\u00af\ufe43\u00af)"
        ],
        "shortcodes": [
          ":drool:"
        ],
        "animated": true
      },
      {
        "base": [
          128523
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yum:"
        ],
        "animated": true
      },
      {
        "base": [
          128539
        ],
        "alternates": [],
        "emoticons": [
          ":P",
          ":p",
          ":-P",
          ":-p"
        ],
        "shortcodes": [
          ":stuck-out-tongue:"
        ],
        "animated": true
      },
      {
        "base": [
          128541
        ],
        "alternates": [],
        "emoticons": [
          ">q<"
        ],
        "shortcodes": [
          ":squinting-tongue:"
        ],
        "animated": true
      },
      {
        "base": [
          128540
        ],
        "alternates": [],
        "emoticons": [
          ";p"
        ],
        "shortcodes": [
          ":winky-tongue:"
        ],
        "animated": true
      },
      {
        "base": [
          129322
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":zany-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129396
        ],
        "alternates": [],
        "emoticons": [
          ">\ufe4f\u2609"
        ],
        "shortcodes": [
          ":woozy:"
        ],
        "animated": true
      },
      {
        "base": [
          128532
        ],
        "alternates": [],
        "emoticons": [
          "._."
        ],
        "shortcodes": [
          ":pensive:"
        ],
        "animated": true
      },
      {
        "base": [
          129402
        ],
        "alternates": [],
        "emoticons": [
          "\u25d5\ufe4f\u25d5"
        ],
        "shortcodes": [
          ":pleading:"
        ],
        "animated": true
      },
      {
        "base": [
          128556
        ],
        "alternates": [],
        "emoticons": [
          ":-|"
        ],
        "shortcodes": [
          ":grimacing:"
        ],
        "animated": true
      },
      {
        "base": [
          128529
        ],
        "alternates": [],
        "emoticons": [
          "-_-"
        ],
        "shortcodes": [
          ":expressionless:"
        ],
        "animated": true
      },
      {
        "base": [
          128528
        ],
        "alternates": [],
        "emoticons": [
          ":|"
        ],
        "shortcodes": [
          ":neutral-face:"
        ],
        "animated": true
      },
      {
        "base": [
          128566
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mouth-none:"
        ],
        "animated": true
      },
      {
        "base": [
          128566,
          8205,
          127787,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":face-in-clouds:",
          ":lost:"
        ],
        "animated": true
      },
      {
        "base": [
          129765
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dotted-line-face:",
          ":invisible:"
        ],
        "animated": true
      },
      {
        "base": [
          129296
        ],
        "alternates": [],
        "emoticons": [
          ":#"
        ],
        "shortcodes": [
          ":zipper-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129761
        ],
        "alternates": [],
        "emoticons": [
          "(\u30fb\u0434\u30fb\u309d\uff09"
        ],
        "shortcodes": [
          ":salute:"
        ],
        "animated": true
      },
      {
        "base": [
          129300
        ],
        "alternates": [],
        "emoticons": [
          "=L"
        ],
        "shortcodes": [
          ":thinking-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129323
        ],
        "alternates": [],
        "emoticons": [
          "(\uffe3b\uffe3)"
        ],
        "shortcodes": [
          ":shushing-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129762
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hand-over-mouth:"
        ],
        "animated": true
      },
      {
        "base": [
          129325
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":smiling-eyes-with-hand-over-mouth:",
          ":chuckling:"
        ],
        "animated": true
      },
      {
        "base": [
          129393
        ],
        "alternates": [],
        "emoticons": [
          "~O~"
        ],
        "shortcodes": [
          ":yawn:"
        ],
        "animated": true
      },
      {
        "base": [
          129303
        ],
        "alternates": [],
        "emoticons": [
          "\\(^o^)/"
        ],
        "shortcodes": [
          ":hug-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129763
        ],
        "alternates": [],
        "emoticons": [
          "(*/\u3002\uff3c)"
        ],
        "shortcodes": [
          ":peeking:"
        ],
        "animated": true
      },
      {
        "base": [
          128561
        ],
        "alternates": [],
        "emoticons": [
          "@0@"
        ],
        "shortcodes": [
          ":screaming:"
        ],
        "animated": true
      },
      {
        "base": [
          129320
        ],
        "alternates": [],
        "emoticons": [
          "(",
          "\u035d\u05e1\u05bc",
          "\u035c\u0296\u0361\u05e1\u05bc)"
        ],
        "shortcodes": [
          ":raised-eyebrow:"
        ],
        "animated": true
      },
      {
        "base": [
          129488
        ],
        "alternates": [],
        "emoticons": [
          "o~O"
        ],
        "shortcodes": [
          ":monocle:"
        ],
        "animated": true
      },
      {
        "base": [
          128530
        ],
        "alternates": [],
        "emoticons": [
          ">->"
        ],
        "shortcodes": [
          ":unamused:"
        ],
        "animated": true
      },
      {
        "base": [
          128580
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rolling-eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          128558,
          8205,
          128168
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":exhale:"
        ],
        "animated": true
      },
      {
        "base": [
          128548
        ],
        "alternates": [],
        "emoticons": [
          "(((\u256c\u25e3\ufe4f\u25e2)))"
        ],
        "shortcodes": [
          ":triumph:"
        ],
        "animated": true
      },
      {
        "base": [
          128544
        ],
        "alternates": [],
        "emoticons": [
          "X-("
        ],
        "shortcodes": [
          ":angry:"
        ],
        "animated": true
      },
      {
        "base": [
          128545
        ],
        "alternates": [],
        "emoticons": [
          ">:O"
        ],
        "shortcodes": [
          ":rage:"
        ],
        "animated": true
      },
      {
        "base": [
          129324
        ],
        "alternates": [],
        "emoticons": [
          "#$@!"
        ],
        "shortcodes": [
          ":cursing:"
        ],
        "animated": true
      },
      {
        "base": [
          128542
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sad:"
        ],
        "animated": true
      },
      {
        "base": [
          128531
        ],
        "alternates": [],
        "emoticons": [
          "(0\u30780)"
        ],
        "shortcodes": [
          ":sweat:",
          ":downcast:"
        ],
        "animated": true
      },
      {
        "base": [
          128543
        ],
        "alternates": [],
        "emoticons": [
          ":S"
        ],
        "shortcodes": [
          ":worried:"
        ],
        "animated": true
      },
      {
        "base": [
          128549
        ],
        "alternates": [],
        "emoticons": [
          "\u2022_\u2022'"
        ],
        "shortcodes": [
          ":concerned:"
        ],
        "animated": true
      },
      {
        "base": [
          128546
        ],
        "alternates": [],
        "emoticons": [
          ":'("
        ],
        "shortcodes": [
          ":cry:"
        ],
        "animated": true
      },
      {
        "base": [
          9785,
          65039
        ],
        "alternates": [],
        "emoticons": [
          ":-("
        ],
        "shortcodes": [
          ":big-frown:"
        ],
        "animated": true
      },
      {
        "base": [
          128577
        ],
        "alternates": [],
        "emoticons": [
          ":("
        ],
        "shortcodes": [
          ":frown:"
        ],
        "animated": true
      },
      {
        "base": [
          129764
        ],
        "alternates": [],
        "emoticons": [
          ":/"
        ],
        "shortcodes": [
          ":diagonal-mouth:"
        ],
        "animated": true
      },
      {
        "base": [
          128533
        ],
        "alternates": [],
        "emoticons": [
          ":-/"
        ],
        "shortcodes": [
          ":slightly-frowning:"
        ],
        "animated": true
      },
      {
        "base": [
          128560
        ],
        "alternates": [],
        "emoticons": [
          "D-':"
        ],
        "shortcodes": [
          ":anxious-with-sweat:"
        ],
        "animated": true
      },
      {
        "base": [
          128552
        ],
        "alternates": [],
        "emoticons": [
          "D-:"
        ],
        "shortcodes": [
          ":scared:"
        ],
        "animated": true
      },
      {
        "base": [
          128551
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":anguished:"
        ],
        "animated": true
      },
      {
        "base": [
          128550
        ],
        "alternates": [],
        "emoticons": [
          "D="
        ],
        "shortcodes": [
          ":gasp:"
        ],
        "animated": true
      },
      {
        "base": [
          128558
        ],
        "alternates": [],
        "emoticons": [
          ":O"
        ],
        "shortcodes": [
          ":mouth-open:"
        ],
        "animated": true
      },
      {
        "base": [
          128559
        ],
        "alternates": [],
        "emoticons": [
          ":o"
        ],
        "shortcodes": [
          ":surprised:",
          ":hushed:"
        ],
        "animated": true
      },
      {
        "base": [
          128562
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":astonished:"
        ],
        "animated": true
      },
      {
        "base": [
          128563
        ],
        "alternates": [],
        "emoticons": [
          "8\u20110"
        ],
        "shortcodes": [
          ":flushed:"
        ],
        "animated": true
      },
      {
        "base": [
          129327
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mind-blown:",
          ":exploding-head:"
        ],
        "animated": true
      },
      {
        "base": [
          128534
        ],
        "alternates": [],
        "emoticons": [
          ">:["
        ],
        "shortcodes": [
          ":scrunched-mouth:",
          ":confounded:",
          ":zigzag-mouth:"
        ],
        "animated": true
      },
      {
        "base": [
          128547
        ],
        "alternates": [],
        "emoticons": [
          ">:("
        ],
        "shortcodes": [
          ":scrunched-eyes:",
          ":persevering:"
        ],
        "animated": true
      },
      {
        "base": [
          128553
        ],
        "alternates": [],
        "emoticons": [
          "D:"
        ],
        "shortcodes": [
          ":weary:"
        ],
        "animated": true
      },
      {
        "base": [
          128555
        ],
        "alternates": [],
        "emoticons": [
          "D-X"
        ],
        "shortcodes": [
          ":distraught:"
        ],
        "animated": true
      },
      {
        "base": [
          128565
        ],
        "alternates": [],
        "emoticons": [
          "X_o"
        ],
        "shortcodes": [
          ":x-eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          128565,
          8205,
          128171
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dizzy-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129768
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shaking-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129398
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cold-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129397
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hot-face:",
          ":sweat-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129314
        ],
        "alternates": [],
        "emoticons": [
          ":-###"
        ],
        "shortcodes": [
          ":sick:",
          ":nauseated:"
        ],
        "animated": true
      },
      {
        "base": [
          129326
        ],
        "alternates": [],
        "emoticons": [
          ":-O##"
        ],
        "shortcodes": [
          ":vomit:"
        ],
        "animated": true
      },
      {
        "base": [
          129319
        ],
        "alternates": [],
        "emoticons": [
          "(*\u00b4\u53f0\uff40*)"
        ],
        "shortcodes": [
          ":sneeze:"
        ],
        "animated": true
      },
      {
        "base": [
          129298
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":thermometer-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129301
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bandage-face:"
        ],
        "animated": true
      },
      {
        "base": [
          128567
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mask:"
        ],
        "animated": true
      },
      {
        "base": [
          129317
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":liar:"
        ],
        "animated": true
      },
      {
        "base": [
          128519
        ],
        "alternates": [],
        "emoticons": [
          "O:)"
        ],
        "shortcodes": [
          ":halo:",
          ":innocent:"
        ],
        "animated": true
      },
      {
        "base": [
          129312
        ],
        "alternates": [],
        "emoticons": [
          "<):)"
        ],
        "shortcodes": [
          ":cowboy:"
        ],
        "animated": true
      },
      {
        "base": [
          129297
        ],
        "alternates": [],
        "emoticons": [
          "$_$"
        ],
        "shortcodes": [
          ":money-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129299
        ],
        "alternates": [],
        "emoticons": [
          ":-B"
        ],
        "shortcodes": [
          ":nerd-face:"
        ],
        "animated": true
      },
      {
        "base": [
          128526
        ],
        "alternates": [],
        "emoticons": [
          "B-)"
        ],
        "shortcodes": [
          ":sunglasses-face:"
        ],
        "animated": true
      },
      {
        "base": [
          129400
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":disguise:"
        ],
        "animated": true
      },
      {
        "base": [
          129313
        ],
        "alternates": [],
        "emoticons": [
          ":o)"
        ],
        "shortcodes": [
          ":clown:"
        ],
        "animated": true
      },
      {
        "base": [
          128520
        ],
        "alternates": [],
        "emoticons": [
          "3:)"
        ],
        "shortcodes": [
          ":imp-smile:"
        ],
        "animated": true
      },
      {
        "base": [
          128127
        ],
        "alternates": [],
        "emoticons": [
          "3:("
        ],
        "shortcodes": [
          ":imp-frown:"
        ],
        "animated": true
      },
      {
        "base": [
          128123
        ],
        "alternates": [],
        "emoticons": [
          "\u2282(\u00b4\u30fb\u25e1\u30fb\u2282)\u2218\u02da\u02f3\u00b0"
        ],
        "shortcodes": [
          ":ghost:"
        ],
        "animated": true
      },
      {
        "base": [
          127875
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":jack-o-lantern:"
        ],
        "animated": true
      },
      {
        "base": [
          128169
        ],
        "alternates": [],
        "emoticons": [
          "\u0f3c^-^\u0f3d"
        ],
        "shortcodes": [
          ":poop:"
        ],
        "animated": true
      },
      {
        "base": [
          129302
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":robot:"
        ],
        "animated": true
      },
      {
        "base": [
          128125
        ],
        "alternates": [],
        "emoticons": [
          "(<>..<>)"
        ],
        "shortcodes": [
          ":alien:"
        ],
        "animated": true
      },
      {
        "base": [
          128126
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":alien-monster:"
        ],
        "animated": false
      },
      {
        "base": [
          127771
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moon-face-first-quarter:"
        ],
        "animated": true
      },
      {
        "base": [
          127772
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moon-face-last-quarter:"
        ],
        "animated": true
      },
      {
        "base": [
          127770
        ],
        "alternates": [],
        "emoticons": [
          ">_>"
        ],
        "shortcodes": [
          ":moon-face-new:"
        ],
        "animated": false
      },
      {
        "base": [
          127773
        ],
        "alternates": [],
        "emoticons": [
          "<_<"
        ],
        "shortcodes": [
          ":moon-face-full:"
        ],
        "animated": false
      },
      {
        "base": [
          127774
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sun-with-face:"
        ],
        "animated": true
      },
      {
        "base": [
          9760,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":skull-and-crossbones:"
        ],
        "animated": false
      },
      {
        "base": [
          128121
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ogre:"
        ],
        "animated": false
      },
      {
        "base": [
          128122
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":goblin:"
        ],
        "animated": false
      },
      {
        "base": [
          128293
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fire:",
          ":burn:",
          ":lit:"
        ],
        "animated": true
      },
      {
        "base": [
          128175
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":100:",
          ":one-hundred:",
          ":hundred:",
          ":points:"
        ],
        "animated": true
      },
      {
        "base": [
          128171
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dizzy:"
        ],
        "animated": false
      },
      {
        "base": [
          11088
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":star:"
        ],
        "animated": false
      },
      {
        "base": [
          127775
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":glowing-star:"
        ],
        "animated": true
      },
      {
        "base": [
          10024
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sparkles:"
        ],
        "animated": true
      },
      {
        "base": [
          128165
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":collision:"
        ],
        "animated": true
      },
      {
        "base": [
          128168
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dash:",
          ":poof:"
        ],
        "animated": false
      },
      {
        "base": [
          128166
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sweat-droplets:"
        ],
        "animated": false
      },
      {
        "base": [
          128164
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":zzz:"
        ],
        "animated": false
      },
      {
        "base": [
          128371,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hole:"
        ],
        "animated": false
      },
      {
        "base": [
          127881
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":party-popper:"
        ],
        "animated": true
      },
      {
        "base": [
          128584
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":see-no-evil-monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128585
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hear-no-evil-monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128586
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":speak-no-evil-monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128570
        ],
        "alternates": [],
        "emoticons": [
          ":3"
        ],
        "shortcodes": [
          ":smiley-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128568
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":smile-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128569
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":joy-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128571
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":heart-eyes-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128572
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":smirk-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128573
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kissing-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128576
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":scream-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          128575
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crying-cat-face:"
        ],
        "animated": true
      },
      {
        "base": [
          128574
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pouting-cat:"
        ],
        "animated": true
      },
      {
        "base": [
          10084,
          65039
        ],
        "alternates": [],
        "emoticons": [
          "<3"
        ],
        "shortcodes": [
          ":red-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129505
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orange-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128155
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yellow-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128154
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129653
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":light-blue-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128153
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128156
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":purple-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129294
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":brown-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128420
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129654
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":grey-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129293
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129655
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pink-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128152
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cupid:"
        ],
        "animated": true
      },
      {
        "base": [
          128157
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gift-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128150
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sparkling-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128151
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":heart-grow:"
        ],
        "animated": true
      },
      {
        "base": [
          128147
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beating-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128158
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":revolving-hearts:"
        ],
        "animated": true
      },
      {
        "base": [
          128149
        ],
        "alternates": [],
        "emoticons": [
          "<3<3"
        ],
        "shortcodes": [
          ":two-hearts:"
        ],
        "animated": true
      },
      {
        "base": [
          128140
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":love-letter:"
        ],
        "animated": true
      },
      {
        "base": [
          128159
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":heart-box:"
        ],
        "animated": false
      },
      {
        "base": [
          9829,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":heart:"
        ],
        "animated": false
      },
      {
        "base": [
          10083,
          65039
        ],
        "alternates": [],
        "emoticons": [
          "<3!"
        ],
        "shortcodes": [
          ":heart-exclamation-point:"
        ],
        "animated": true
      },
      {
        "base": [
          10084,
          65039,
          8205,
          129657
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bandaged-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128148
        ],
        "alternates": [],
        "emoticons": [
          "</3"
        ],
        "shortcodes": [
          ":broken-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          10084,
          65039,
          8205,
          128293
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fire-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128139
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kiss:"
        ],
        "animated": true
      },
      {
        "base": [
          129730
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hugging:"
        ],
        "animated": false
      },
      {
        "base": [
          128101
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":busts-in-silhouette:"
        ],
        "animated": false
      },
      {
        "base": [
          128100
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bust-in-silhouette:"
        ],
        "animated": false
      },
      {
        "base": [
          128483,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":speaking-head:"
        ],
        "animated": false
      },
      {
        "base": [
          128099
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":footprints:"
        ],
        "animated": true
      },
      {
        "base": [
          129504
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":brain:"
        ],
        "animated": false
      },
      {
        "base": [
          129728
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":anatomical-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129729
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lungs:"
        ],
        "animated": false
      },
      {
        "base": [
          129656
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blood:"
        ],
        "animated": true
      },
      {
        "base": [
          129440
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":microbe:",
          ":virus:"
        ],
        "animated": true
      },
      {
        "base": [
          129463
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tooth:"
        ],
        "animated": false
      },
      {
        "base": [
          129460
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bone:"
        ],
        "animated": false
      },
      {
        "base": [
          128128
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":skull:"
        ],
        "animated": true
      },
      {
        "base": [
          128064
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eyes:"
        ],
        "animated": true
      },
      {
        "base": [
          128065,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eye:"
        ],
        "animated": true
      },
      {
        "base": [
          128068
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mouth:"
        ],
        "animated": false
      },
      {
        "base": [
          129766
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":biting-lip:"
        ],
        "animated": true
      },
      {
        "base": [
          128069
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tongue:"
        ],
        "animated": false
      },
      {
        "base": [
          128067
        ],
        "alternates": [
          [
            128067
          ],
          [
            128067,
            127995
          ],
          [
            128067,
            127996
          ],
          [
            128067,
            127997
          ],
          [
            128067,
            127998
          ],
          [
            128067,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":nose:"
        ],
        "animated": false
      },
      {
        "base": [
          128066
        ],
        "alternates": [
          [
            128066
          ],
          [
            128066,
            127995
          ],
          [
            128066,
            127996
          ],
          [
            128066,
            127997
          ],
          [
            128066,
            127998
          ],
          [
            128066,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":ear:"
        ],
        "animated": false
      },
      {
        "base": [
          129467
        ],
        "alternates": [
          [
            129467
          ],
          [
            129467,
            127995
          ],
          [
            129467,
            127996
          ],
          [
            129467,
            127997
          ],
          [
            129467,
            127998
          ],
          [
            129467,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":hearing-aid:"
        ],
        "animated": false
      },
      {
        "base": [
          129462
        ],
        "alternates": [
          [
            129462
          ],
          [
            129462,
            127995
          ],
          [
            129462,
            127996
          ],
          [
            129462,
            127997
          ],
          [
            129462,
            127998
          ],
          [
            129462,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":foot:"
        ],
        "animated": false
      },
      {
        "base": [
          129461
        ],
        "alternates": [
          [
            129461
          ],
          [
            129461,
            127995
          ],
          [
            129461,
            127996
          ],
          [
            129461,
            127997
          ],
          [
            129461,
            127998
          ],
          [
            129461,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":leg:"
        ],
        "animated": false
      },
      {
        "base": [
          129471
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":leg-mechanical:"
        ],
        "animated": true
      },
      {
        "base": [
          129470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":arm-mechanical:"
        ],
        "animated": true
      },
      {
        "base": [
          128170
        ],
        "alternates": [
          [
            128170
          ],
          [
            128170,
            127995
          ],
          [
            128170,
            127996
          ],
          [
            128170,
            127997
          ],
          [
            128170,
            127998
          ],
          [
            128170,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":muscle:",
          ":flex:",
          ":bicep:",
          ":strong:"
        ],
        "animated": true
      },
      {
        "base": [
          128079
        ],
        "alternates": [
          [
            128079
          ],
          [
            128079,
            127995
          ],
          [
            128079,
            127996
          ],
          [
            128079,
            127997
          ],
          [
            128079,
            127998
          ],
          [
            128079,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":clap:"
        ],
        "animated": true
      },
      {
        "base": [
          128077
        ],
        "alternates": [
          [
            128077
          ],
          [
            128077,
            127995
          ],
          [
            128077,
            127996
          ],
          [
            128077,
            127997
          ],
          [
            128077,
            127998
          ],
          [
            128077,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":thumbs-up:",
          ":+1:"
        ],
        "animated": true
      },
      {
        "base": [
          128078
        ],
        "alternates": [
          [
            128078
          ],
          [
            128078,
            127995
          ],
          [
            128078,
            127996
          ],
          [
            128078,
            127997
          ],
          [
            128078,
            127998
          ],
          [
            128078,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":thumbs-down:"
        ],
        "animated": true
      },
      {
        "base": [
          129782
        ],
        "alternates": [
          [
            129782
          ],
          [
            129782,
            127995
          ],
          [
            129782,
            127996
          ],
          [
            129782,
            127997
          ],
          [
            129782,
            127998
          ],
          [
            129782,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":heart-hands:"
        ],
        "animated": false
      },
      {
        "base": [
          128588
        ],
        "alternates": [
          [
            128588
          ],
          [
            128588,
            127995
          ],
          [
            128588,
            127996
          ],
          [
            128588,
            127997
          ],
          [
            128588,
            127998
          ],
          [
            128588,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":raising-hands:",
          ":hooray:"
        ],
        "animated": true
      },
      {
        "base": [
          128080
        ],
        "alternates": [
          [
            128080
          ],
          [
            128080,
            127995
          ],
          [
            128080,
            127996
          ],
          [
            128080,
            127997
          ],
          [
            128080,
            127998
          ],
          [
            128080,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":open-hands:"
        ],
        "animated": false
      },
      {
        "base": [
          129330
        ],
        "alternates": [
          [
            129330
          ],
          [
            129330,
            127995
          ],
          [
            129330,
            127996
          ],
          [
            129330,
            127997
          ],
          [
            129330,
            127998
          ],
          [
            129330,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":palms-up:"
        ],
        "animated": false
      },
      {
        "base": [
          129309
        ],
        "alternates": [
          [
            129309
          ],
          [
            129309,
            127995
          ],
          [
            129777,
            127995,
            8205,
            129778,
            127996
          ],
          [
            129777,
            127995,
            8205,
            129778,
            127997
          ],
          [
            129777,
            127995,
            8205,
            129778,
            127998
          ],
          [
            129777,
            127995,
            8205,
            129778,
            127999
          ],
          [
            129777,
            127996,
            8205,
            129778,
            127995
          ],
          [
            129309,
            127996
          ],
          [
            129777,
            127996,
            8205,
            129778,
            127997
          ],
          [
            129777,
            127996,
            8205,
            129778,
            127998
          ],
          [
            129777,
            127996,
            8205,
            129778,
            127999
          ],
          [
            129777,
            127997,
            8205,
            129778,
            127995
          ],
          [
            129777,
            127997,
            8205,
            129778,
            127996
          ],
          [
            129309,
            127997
          ],
          [
            129777,
            127997,
            8205,
            129778,
            127998
          ],
          [
            129777,
            127997,
            8205,
            129778,
            127999
          ],
          [
            129777,
            127998,
            8205,
            129778,
            127995
          ],
          [
            129777,
            127998,
            8205,
            129778,
            127996
          ],
          [
            129777,
            127998,
            8205,
            129778,
            127997
          ],
          [
            129309,
            127998
          ],
          [
            129777,
            127998,
            8205,
            129778,
            127999
          ],
          [
            129777,
            127999,
            8205,
            129778,
            127995
          ],
          [
            129777,
            127999,
            8205,
            129778,
            127996
          ],
          [
            129777,
            127999,
            8205,
            129778,
            127997
          ],
          [
            129777,
            127999,
            8205,
            129778,
            127998
          ],
          [
            129309,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":handshake:"
        ],
        "animated": false
      },
      {
        "base": [
          129308
        ],
        "alternates": [
          [
            129308
          ],
          [
            129308,
            127995
          ],
          [
            129308,
            127996
          ],
          [
            129308,
            127997
          ],
          [
            129308,
            127998
          ],
          [
            129308,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":fist-rightwards:"
        ],
        "animated": false
      },
      {
        "base": [
          129307
        ],
        "alternates": [
          [
            129307
          ],
          [
            129307,
            127995
          ],
          [
            129307,
            127996
          ],
          [
            129307,
            127997
          ],
          [
            129307,
            127998
          ],
          [
            129307,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":fist-leftwards:"
        ],
        "animated": false
      },
      {
        "base": [
          9994
        ],
        "alternates": [
          [
            9994
          ],
          [
            9994,
            127995
          ],
          [
            9994,
            127996
          ],
          [
            9994,
            127997
          ],
          [
            9994,
            127998
          ],
          [
            9994,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":raised-fist:"
        ],
        "animated": false
      },
      {
        "base": [
          128074
        ],
        "alternates": [
          [
            128074
          ],
          [
            128074,
            127995
          ],
          [
            128074,
            127996
          ],
          [
            128074,
            127997
          ],
          [
            128074,
            127998
          ],
          [
            128074,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":fist:",
          ":bump:"
        ],
        "animated": false
      },
      {
        "base": [
          129779
        ],
        "alternates": [
          [
            129779
          ],
          [
            129779,
            127995
          ],
          [
            129779,
            127996
          ],
          [
            129779,
            127997
          ],
          [
            129779,
            127998
          ],
          [
            129779,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":palm-down:",
          ":drop:"
        ],
        "animated": false
      },
      {
        "base": [
          129780
        ],
        "alternates": [
          [
            129780
          ],
          [
            129780,
            127995
          ],
          [
            129780,
            127996
          ],
          [
            129780,
            127997
          ],
          [
            129780,
            127998
          ],
          [
            129780,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":palm-up:",
          ":throw:"
        ],
        "animated": false
      },
      {
        "base": [
          129777
        ],
        "alternates": [
          [
            129777
          ],
          [
            129777,
            127995
          ],
          [
            129777,
            127996
          ],
          [
            129777,
            127997
          ],
          [
            129777,
            127998
          ],
          [
            129777,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":rightwards-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          129778
        ],
        "alternates": [
          [
            129778
          ],
          [
            129778,
            127995
          ],
          [
            129778,
            127996
          ],
          [
            129778,
            127997
          ],
          [
            129778,
            127998
          ],
          [
            129778,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":leftwards-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          129784
        ],
        "alternates": [
          [
            129784
          ],
          [
            129784,
            127995
          ],
          [
            129784,
            127996
          ],
          [
            129784,
            127997
          ],
          [
            129784,
            127998
          ],
          [
            129784,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":push-rightwards:"
        ],
        "animated": false
      },
      {
        "base": [
          129783
        ],
        "alternates": [
          [
            129783
          ],
          [
            129783,
            127995
          ],
          [
            129783,
            127996
          ],
          [
            129783,
            127997
          ],
          [
            129783,
            127998
          ],
          [
            129783,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":push-leftwards:"
        ],
        "animated": false
      },
      {
        "base": [
          128075
        ],
        "alternates": [
          [
            128075
          ],
          [
            128075,
            127995
          ],
          [
            128075,
            127996
          ],
          [
            128075,
            127997
          ],
          [
            128075,
            127998
          ],
          [
            128075,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":wave:"
        ],
        "animated": true
      },
      {
        "base": [
          129306
        ],
        "alternates": [
          [
            129306
          ],
          [
            129306,
            127995
          ],
          [
            129306,
            127996
          ],
          [
            129306,
            127997
          ],
          [
            129306,
            127998
          ],
          [
            129306,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":back-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          128400,
          65039
        ],
        "alternates": [
          [
            128400,
            65039
          ],
          [
            128400,
            127995
          ],
          [
            128400,
            127996
          ],
          [
            128400,
            127997
          ],
          [
            128400,
            127998
          ],
          [
            128400,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":palm:"
        ],
        "animated": false
      },
      {
        "base": [
          9995
        ],
        "alternates": [
          [
            9995
          ],
          [
            9995,
            127995
          ],
          [
            9995,
            127996
          ],
          [
            9995,
            127997
          ],
          [
            9995,
            127998
          ],
          [
            9995,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":raised-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          128406
        ],
        "alternates": [
          [
            128406
          ],
          [
            128406,
            127995
          ],
          [
            128406,
            127996
          ],
          [
            128406,
            127997
          ],
          [
            128406,
            127998
          ],
          [
            128406,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":vulcan:",
          ":prosper:",
          ":spock:"
        ],
        "animated": false
      },
      {
        "base": [
          129311
        ],
        "alternates": [
          [
            129311
          ],
          [
            129311,
            127995
          ],
          [
            129311,
            127996
          ],
          [
            129311,
            127997
          ],
          [
            129311,
            127998
          ],
          [
            129311,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":love-you-gesture:"
        ],
        "animated": false
      },
      {
        "base": [
          129304
        ],
        "alternates": [
          [
            129304
          ],
          [
            129304,
            127995
          ],
          [
            129304,
            127996
          ],
          [
            129304,
            127997
          ],
          [
            129304,
            127998
          ],
          [
            129304,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":metal:",
          ":horns:"
        ],
        "animated": false
      },
      {
        "base": [
          9996,
          65039
        ],
        "alternates": [
          [
            9996,
            65039
          ],
          [
            9996,
            127995
          ],
          [
            9996,
            127996
          ],
          [
            9996,
            127997
          ],
          [
            9996,
            127998
          ],
          [
            9996,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":v:",
          ":peace-hand:",
          ":victory:"
        ],
        "animated": true
      },
      {
        "base": [
          129310
        ],
        "alternates": [
          [
            129310
          ],
          [
            129310,
            127995
          ],
          [
            129310,
            127996
          ],
          [
            129310,
            127997
          ],
          [
            129310,
            127998
          ],
          [
            129310,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":crossed-fingers:"
        ],
        "animated": true
      },
      {
        "base": [
          129776
        ],
        "alternates": [
          [
            129776
          ],
          [
            129776,
            127995
          ],
          [
            129776,
            127996
          ],
          [
            129776,
            127997
          ],
          [
            129776,
            127998
          ],
          [
            129776,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":hand-with-index-finger-and-thumb-crossed:",
          ":snap:",
          ":finger-heart:"
        ],
        "animated": false
      },
      {
        "base": [
          129305
        ],
        "alternates": [
          [
            129305
          ],
          [
            129305,
            127995
          ],
          [
            129305,
            127996
          ],
          [
            129305,
            127997
          ],
          [
            129305,
            127998
          ],
          [
            129305,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":call-me-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          129292
        ],
        "alternates": [
          [
            129292
          ],
          [
            129292,
            127995
          ],
          [
            129292,
            127996
          ],
          [
            129292,
            127997
          ],
          [
            129292,
            127998
          ],
          [
            129292,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":pinched-fingers:"
        ],
        "animated": false
      },
      {
        "base": [
          129295
        ],
        "alternates": [
          [
            129295
          ],
          [
            129295,
            127995
          ],
          [
            129295,
            127996
          ],
          [
            129295,
            127997
          ],
          [
            129295,
            127998
          ],
          [
            129295,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":pinch:"
        ],
        "animated": false
      },
      {
        "base": [
          128076
        ],
        "alternates": [
          [
            128076
          ],
          [
            128076,
            127995
          ],
          [
            128076,
            127996
          ],
          [
            128076,
            127997
          ],
          [
            128076,
            127998
          ],
          [
            128076,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":ok:"
        ],
        "animated": false
      },
      {
        "base": [
          129781
        ],
        "alternates": [
          [
            129781
          ],
          [
            129781,
            127995
          ],
          [
            129781,
            127996
          ],
          [
            129781,
            127997
          ],
          [
            129781,
            127998
          ],
          [
            129781,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":pointing:"
        ],
        "animated": false
      },
      {
        "base": [
          128073
        ],
        "alternates": [
          [
            128073
          ],
          [
            128073,
            127995
          ],
          [
            128073,
            127996
          ],
          [
            128073,
            127997
          ],
          [
            128073,
            127998
          ],
          [
            128073,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":point-right:"
        ],
        "animated": false
      },
      {
        "base": [
          128072
        ],
        "alternates": [
          [
            128072
          ],
          [
            128072,
            127995
          ],
          [
            128072,
            127996
          ],
          [
            128072,
            127997
          ],
          [
            128072,
            127998
          ],
          [
            128072,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":point-left:"
        ],
        "animated": false
      },
      {
        "base": [
          9757,
          65039
        ],
        "alternates": [
          [
            9757,
            65039
          ],
          [
            9757,
            127995
          ],
          [
            9757,
            127996
          ],
          [
            9757,
            127997
          ],
          [
            9757,
            127998
          ],
          [
            9757,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":index-finger:"
        ],
        "animated": true
      },
      {
        "base": [
          128070
        ],
        "alternates": [
          [
            128070
          ],
          [
            128070,
            127995
          ],
          [
            128070,
            127996
          ],
          [
            128070,
            127997
          ],
          [
            128070,
            127998
          ],
          [
            128070,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":point-up:"
        ],
        "animated": false
      },
      {
        "base": [
          128071
        ],
        "alternates": [
          [
            128071
          ],
          [
            128071,
            127995
          ],
          [
            128071,
            127996
          ],
          [
            128071,
            127997
          ],
          [
            128071,
            127998
          ],
          [
            128071,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":point-down:"
        ],
        "animated": false
      },
      {
        "base": [
          128405
        ],
        "alternates": [
          [
            128405
          ],
          [
            128405,
            127995
          ],
          [
            128405,
            127996
          ],
          [
            128405,
            127997
          ],
          [
            128405,
            127998
          ],
          [
            128405,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":middle-finger:"
        ],
        "animated": false
      },
      {
        "base": [
          9997,
          65039
        ],
        "alternates": [
          [
            9997,
            65039
          ],
          [
            9997,
            127995
          ],
          [
            9997,
            127996
          ],
          [
            9997,
            127997
          ],
          [
            9997,
            127998
          ],
          [
            9997,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":writing-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          129331
        ],
        "alternates": [
          [
            129331
          ],
          [
            129331,
            127995
          ],
          [
            129331,
            127996
          ],
          [
            129331,
            127997
          ],
          [
            129331,
            127998
          ],
          [
            129331,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":selfie:"
        ],
        "animated": false
      },
      {
        "base": [
          128591
        ],
        "alternates": [
          [
            128591
          ],
          [
            128591,
            127995
          ],
          [
            128591,
            127996
          ],
          [
            128591,
            127997
          ],
          [
            128591,
            127998
          ],
          [
            128591,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":folded-hands:",
          ":please:",
          ":pray:",
          ":hope:",
          ":wish:",
          ":thank-you:",
          ":high-five:"
        ],
        "animated": true
      },
      {
        "base": [
          128133
        ],
        "alternates": [
          [
            128133
          ],
          [
            128133,
            127995
          ],
          [
            128133,
            127996
          ],
          [
            128133,
            127997
          ],
          [
            128133,
            127998
          ],
          [
            128133,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":nail-care:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "People",
    "emoji": [
      {
        "base": [
          128583
        ],
        "alternates": [
          [
            128583
          ],
          [
            128583,
            127995
          ],
          [
            128583,
            127996
          ],
          [
            128583,
            127997
          ],
          [
            128583,
            127998
          ],
          [
            128583,
            127999
          ],
          [
            128583,
            8205,
            9792,
            65039
          ],
          [
            128583,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128583,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128583,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128583,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128583,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128583,
            8205,
            9794,
            65039
          ],
          [
            128583,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128583,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128583,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128583,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128583,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":bow:"
        ],
        "animated": false
      },
      {
        "base": [
          128587
        ],
        "alternates": [
          [
            128587
          ],
          [
            128587,
            127995
          ],
          [
            128587,
            127996
          ],
          [
            128587,
            127997
          ],
          [
            128587,
            127998
          ],
          [
            128587,
            127999
          ],
          [
            128587,
            8205,
            9792,
            65039
          ],
          [
            128587,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128587,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128587,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128587,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128587,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128587,
            8205,
            9794,
            65039
          ],
          [
            128587,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128587,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128587,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128587,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128587,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":raising-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          128129
        ],
        "alternates": [
          [
            128129
          ],
          [
            128129,
            127995
          ],
          [
            128129,
            127996
          ],
          [
            128129,
            127997
          ],
          [
            128129,
            127998
          ],
          [
            128129,
            127999
          ],
          [
            128129,
            8205,
            9792,
            65039
          ],
          [
            128129,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128129,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128129,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128129,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128129,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128129,
            8205,
            9794,
            65039
          ],
          [
            128129,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128129,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128129,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128129,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128129,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":tipping-hand:"
        ],
        "animated": false
      },
      {
        "base": [
          128582
        ],
        "alternates": [
          [
            128582
          ],
          [
            128582,
            127995
          ],
          [
            128582,
            127996
          ],
          [
            128582,
            127997
          ],
          [
            128582,
            127998
          ],
          [
            128582,
            127999
          ],
          [
            128582,
            8205,
            9792,
            65039
          ],
          [
            128582,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128582,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128582,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128582,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128582,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128582,
            8205,
            9794,
            65039
          ],
          [
            128582,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128582,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128582,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128582,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128582,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":gesture-ok:"
        ],
        "animated": false
      },
      {
        "base": [
          128581
        ],
        "alternates": [
          [
            128581
          ],
          [
            128581,
            127995
          ],
          [
            128581,
            127996
          ],
          [
            128581,
            127997
          ],
          [
            128581,
            127998
          ],
          [
            128581,
            127999
          ],
          [
            128581,
            8205,
            9792,
            65039
          ],
          [
            128581,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128581,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128581,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128581,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128581,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128581,
            8205,
            9794,
            65039
          ],
          [
            128581,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128581,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128581,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128581,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128581,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":no-gesture:",
          ":no-good:",
          ":denied:",
          ":halt:"
        ],
        "animated": false
      },
      {
        "base": [
          129335
        ],
        "alternates": [
          [
            129335
          ],
          [
            129335,
            127995
          ],
          [
            129335,
            127996
          ],
          [
            129335,
            127997
          ],
          [
            129335,
            127998
          ],
          [
            129335,
            127999
          ],
          [
            129335,
            8205,
            9792,
            65039
          ],
          [
            129335,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129335,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129335,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129335,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129335,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129335,
            8205,
            9794,
            65039
          ],
          [
            129335,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129335,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129335,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129335,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129335,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":shrug:"
        ],
        "animated": false
      },
      {
        "base": [
          129318
        ],
        "alternates": [
          [
            129318
          ],
          [
            129318,
            127995
          ],
          [
            129318,
            127996
          ],
          [
            129318,
            127997
          ],
          [
            129318,
            127998
          ],
          [
            129318,
            127999
          ],
          [
            129318,
            8205,
            9792,
            65039
          ],
          [
            129318,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129318,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129318,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129318,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129318,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129318,
            8205,
            9794,
            65039
          ],
          [
            129318,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129318,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129318,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129318,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129318,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":facepalm:"
        ],
        "animated": false
      },
      {
        "base": [
          128589
        ],
        "alternates": [
          [
            128589
          ],
          [
            128589,
            127995
          ],
          [
            128589,
            127996
          ],
          [
            128589,
            127997
          ],
          [
            128589,
            127998
          ],
          [
            128589,
            127999
          ],
          [
            128589,
            8205,
            9792,
            65039
          ],
          [
            128589,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128589,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128589,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128589,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128589,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128589,
            8205,
            9794,
            65039
          ],
          [
            128589,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128589,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128589,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128589,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128589,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":frowning:"
        ],
        "animated": false
      },
      {
        "base": [
          128590
        ],
        "alternates": [
          [
            128590
          ],
          [
            128590,
            127995
          ],
          [
            128590,
            127996
          ],
          [
            128590,
            127997
          ],
          [
            128590,
            127998
          ],
          [
            128590,
            127999
          ],
          [
            128590,
            8205,
            9792,
            65039
          ],
          [
            128590,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128590,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128590,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128590,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128590,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128590,
            8205,
            9794,
            65039
          ],
          [
            128590,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128590,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128590,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128590,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128590,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":pouting:"
        ],
        "animated": false
      },
      {
        "base": [
          129487
        ],
        "alternates": [
          [
            129487
          ],
          [
            129487,
            127995
          ],
          [
            129487,
            127996
          ],
          [
            129487,
            127997
          ],
          [
            129487,
            127998
          ],
          [
            129487,
            127999
          ],
          [
            129487,
            8205,
            9792,
            65039
          ],
          [
            129487,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129487,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129487,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129487,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129487,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129487,
            8205,
            9794,
            65039
          ],
          [
            129487,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129487,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129487,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129487,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129487,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":deaf:"
        ],
        "animated": false
      },
      {
        "base": [
          128134
        ],
        "alternates": [
          [
            128134
          ],
          [
            128134,
            127995
          ],
          [
            128134,
            127996
          ],
          [
            128134,
            127997
          ],
          [
            128134,
            127998
          ],
          [
            128134,
            127999
          ],
          [
            128134,
            8205,
            9792,
            65039
          ],
          [
            128134,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128134,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128134,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128134,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128134,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128134,
            8205,
            9794,
            65039
          ],
          [
            128134,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128134,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128134,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128134,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128134,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":massage:"
        ],
        "animated": false
      },
      {
        "base": [
          128135
        ],
        "alternates": [
          [
            128135
          ],
          [
            128135,
            127995
          ],
          [
            128135,
            127996
          ],
          [
            128135,
            127997
          ],
          [
            128135,
            127998
          ],
          [
            128135,
            127999
          ],
          [
            128135,
            8205,
            9792,
            65039
          ],
          [
            128135,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128135,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128135,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128135,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128135,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128135,
            8205,
            9794,
            65039
          ],
          [
            128135,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128135,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128135,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128135,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128135,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":haircut:"
        ],
        "animated": false
      },
      {
        "base": [
          129494
        ],
        "alternates": [
          [
            129494
          ],
          [
            129494,
            127995
          ],
          [
            129494,
            127996
          ],
          [
            129494,
            127997
          ],
          [
            129494,
            127998
          ],
          [
            129494,
            127999
          ],
          [
            129494,
            8205,
            9792,
            65039
          ],
          [
            129494,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129494,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129494,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129494,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129494,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129494,
            8205,
            9794,
            65039
          ],
          [
            129494,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129494,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129494,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129494,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129494,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":sauna:",
          ":steamy:"
        ],
        "animated": false
      },
      {
        "base": [
          128704
        ],
        "alternates": [
          [
            128704
          ],
          [
            128704,
            127995
          ],
          [
            128704,
            127996
          ],
          [
            128704,
            127997
          ],
          [
            128704,
            127998
          ],
          [
            128704,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":bathe:"
        ],
        "animated": false
      },
      {
        "base": [
          128716
        ],
        "alternates": [
          [
            128716
          ],
          [
            128716,
            127995
          ],
          [
            128716,
            127996
          ],
          [
            128716,
            127997
          ],
          [
            128716,
            127998
          ],
          [
            128716,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":in-bed:"
        ],
        "animated": false
      },
      {
        "base": [
          129496
        ],
        "alternates": [
          [
            129496
          ],
          [
            129496,
            127995
          ],
          [
            129496,
            127996
          ],
          [
            129496,
            127997
          ],
          [
            129496,
            127998
          ],
          [
            129496,
            127999
          ],
          [
            129496,
            8205,
            9792,
            65039
          ],
          [
            129496,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129496,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129496,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129496,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129496,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129496,
            8205,
            9794,
            65039
          ],
          [
            129496,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129496,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129496,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129496,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129496,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":yoga:",
          ":meditation:",
          ":lotus-position:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129455
        ],
        "alternates": [
          [
            129489,
            8205,
            129455
          ],
          [
            129489,
            127995,
            8205,
            129455
          ],
          [
            129489,
            127996,
            8205,
            129455
          ],
          [
            129489,
            127997,
            8205,
            129455
          ],
          [
            129489,
            127998,
            8205,
            129455
          ],
          [
            129489,
            127999,
            8205,
            129455
          ],
          [
            128105,
            8205,
            129455
          ],
          [
            128105,
            127995,
            8205,
            129455
          ],
          [
            128105,
            127996,
            8205,
            129455
          ],
          [
            128105,
            127997,
            8205,
            129455
          ],
          [
            128105,
            127998,
            8205,
            129455
          ],
          [
            128105,
            127999,
            8205,
            129455
          ],
          [
            128104,
            8205,
            129455
          ],
          [
            128104,
            127995,
            8205,
            129455
          ],
          [
            128104,
            127996,
            8205,
            129455
          ],
          [
            128104,
            127997,
            8205,
            129455
          ],
          [
            128104,
            127998,
            8205,
            129455
          ],
          [
            128104,
            127999,
            8205,
            129455
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":walking-with-cane:",
          ":blind:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129468
        ],
        "alternates": [
          [
            129489,
            8205,
            129468
          ],
          [
            129489,
            127995,
            8205,
            129468
          ],
          [
            129489,
            127996,
            8205,
            129468
          ],
          [
            129489,
            127997,
            8205,
            129468
          ],
          [
            129489,
            127998,
            8205,
            129468
          ],
          [
            129489,
            127999,
            8205,
            129468
          ],
          [
            128105,
            8205,
            129468
          ],
          [
            128105,
            127995,
            8205,
            129468
          ],
          [
            128105,
            127996,
            8205,
            129468
          ],
          [
            128105,
            127997,
            8205,
            129468
          ],
          [
            128105,
            127998,
            8205,
            129468
          ],
          [
            128105,
            127999,
            8205,
            129468
          ],
          [
            128104,
            8205,
            129468
          ],
          [
            128104,
            127995,
            8205,
            129468
          ],
          [
            128104,
            127996,
            8205,
            129468
          ],
          [
            128104,
            127997,
            8205,
            129468
          ],
          [
            128104,
            127998,
            8205,
            129468
          ],
          [
            128104,
            127999,
            8205,
            129468
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":person-in-motorized-wheelchair:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129469
        ],
        "alternates": [
          [
            129489,
            8205,
            129469
          ],
          [
            129489,
            127995,
            8205,
            129469
          ],
          [
            129489,
            127996,
            8205,
            129469
          ],
          [
            129489,
            127997,
            8205,
            129469
          ],
          [
            129489,
            127998,
            8205,
            129469
          ],
          [
            129489,
            127999,
            8205,
            129469
          ],
          [
            128105,
            8205,
            129469
          ],
          [
            128105,
            127995,
            8205,
            129469
          ],
          [
            128105,
            127996,
            8205,
            129469
          ],
          [
            128105,
            127997,
            8205,
            129469
          ],
          [
            128105,
            127998,
            8205,
            129469
          ],
          [
            128105,
            127999,
            8205,
            129469
          ],
          [
            128104,
            8205,
            129469
          ],
          [
            128104,
            127995,
            8205,
            129469
          ],
          [
            128104,
            127996,
            8205,
            129469
          ],
          [
            128104,
            127997,
            8205,
            129469
          ],
          [
            128104,
            127998,
            8205,
            129469
          ],
          [
            128104,
            127999,
            8205,
            129469
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":person-in-manual-wheelchair:"
        ],
        "animated": false
      },
      {
        "base": [
          129486
        ],
        "alternates": [
          [
            129486
          ],
          [
            129486,
            127995
          ],
          [
            129486,
            127996
          ],
          [
            129486,
            127997
          ],
          [
            129486,
            127998
          ],
          [
            129486,
            127999
          ],
          [
            129486,
            8205,
            9792,
            65039
          ],
          [
            129486,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129486,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129486,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129486,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129486,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129486,
            8205,
            9794,
            65039
          ],
          [
            129486,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129486,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129486,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129486,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129486,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":kneeling:"
        ],
        "animated": false
      },
      {
        "base": [
          129485
        ],
        "alternates": [
          [
            129485
          ],
          [
            129485,
            127995
          ],
          [
            129485,
            127996
          ],
          [
            129485,
            127997
          ],
          [
            129485,
            127998
          ],
          [
            129485,
            127999
          ],
          [
            129485,
            8205,
            9792,
            65039
          ],
          [
            129485,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129485,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129485,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129485,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129485,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129485,
            8205,
            9794,
            65039
          ],
          [
            129485,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129485,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129485,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129485,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129485,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":standing:"
        ],
        "animated": false
      },
      {
        "base": [
          128694
        ],
        "alternates": [
          [
            128694
          ],
          [
            128694,
            127995
          ],
          [
            128694,
            127996
          ],
          [
            128694,
            127997
          ],
          [
            128694,
            127998
          ],
          [
            128694,
            127999
          ],
          [
            128694,
            8205,
            9792,
            65039
          ],
          [
            128694,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128694,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128694,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128694,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128694,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128694,
            8205,
            9794,
            65039
          ],
          [
            128694,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128694,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128694,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128694,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128694,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":walking:"
        ],
        "animated": false
      },
      {
        "base": [
          127939
        ],
        "alternates": [
          [
            127939
          ],
          [
            127939,
            127995
          ],
          [
            127939,
            127996
          ],
          [
            127939,
            127997
          ],
          [
            127939,
            127998
          ],
          [
            127939,
            127999
          ],
          [
            127939,
            8205,
            9792,
            65039
          ],
          [
            127939,
            127995,
            8205,
            9792,
            65039
          ],
          [
            127939,
            127996,
            8205,
            9792,
            65039
          ],
          [
            127939,
            127997,
            8205,
            9792,
            65039
          ],
          [
            127939,
            127998,
            8205,
            9792,
            65039
          ],
          [
            127939,
            127999,
            8205,
            9792,
            65039
          ],
          [
            127939,
            8205,
            9794,
            65039
          ],
          [
            127939,
            127995,
            8205,
            9794,
            65039
          ],
          [
            127939,
            127996,
            8205,
            9794,
            65039
          ],
          [
            127939,
            127997,
            8205,
            9794,
            65039
          ],
          [
            127939,
            127998,
            8205,
            9794,
            65039
          ],
          [
            127939,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":running:"
        ],
        "animated": false
      },
      {
        "base": [
          129336
        ],
        "alternates": [
          [
            129336
          ],
          [
            129336,
            127995
          ],
          [
            129336,
            127996
          ],
          [
            129336,
            127997
          ],
          [
            129336,
            127998
          ],
          [
            129336,
            127999
          ],
          [
            129336,
            8205,
            9792,
            65039
          ],
          [
            129336,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129336,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129336,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129336,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129336,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129336,
            8205,
            9794,
            65039
          ],
          [
            129336,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129336,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129336,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129336,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129336,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":cartwheel:"
        ],
        "animated": false
      },
      {
        "base": [
          127947,
          65039
        ],
        "alternates": [
          [
            127947,
            65039
          ],
          [
            127947,
            127995
          ],
          [
            127947,
            127996
          ],
          [
            127947,
            127997
          ],
          [
            127947,
            127998
          ],
          [
            127947,
            127999
          ],
          [
            127947,
            65039,
            8205,
            9792,
            65039
          ],
          [
            127947,
            127995,
            8205,
            9792,
            65039
          ],
          [
            127947,
            127996,
            8205,
            9792,
            65039
          ],
          [
            127947,
            127997,
            8205,
            9792,
            65039
          ],
          [
            127947,
            127998,
            8205,
            9792,
            65039
          ],
          [
            127947,
            127999,
            8205,
            9792,
            65039
          ],
          [
            127947,
            65039,
            8205,
            9794,
            65039
          ],
          [
            127947,
            127995,
            8205,
            9794,
            65039
          ],
          [
            127947,
            127996,
            8205,
            9794,
            65039
          ],
          [
            127947,
            127997,
            8205,
            9794,
            65039
          ],
          [
            127947,
            127998,
            8205,
            9794,
            65039
          ],
          [
            127947,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":lifting-weights:"
        ],
        "animated": false
      },
      {
        "base": [
          9977,
          65039
        ],
        "alternates": [
          [
            9977,
            65039
          ],
          [
            9977,
            127995
          ],
          [
            9977,
            127996
          ],
          [
            9977,
            127997
          ],
          [
            9977,
            127998
          ],
          [
            9977,
            127999
          ],
          [
            9977,
            65039,
            8205,
            9792,
            65039
          ],
          [
            9977,
            127995,
            8205,
            9792,
            65039
          ],
          [
            9977,
            127996,
            8205,
            9792,
            65039
          ],
          [
            9977,
            127997,
            8205,
            9792,
            65039
          ],
          [
            9977,
            127998,
            8205,
            9792,
            65039
          ],
          [
            9977,
            127999,
            8205,
            9792,
            65039
          ],
          [
            9977,
            65039,
            8205,
            9794,
            65039
          ],
          [
            9977,
            127995,
            8205,
            9794,
            65039
          ],
          [
            9977,
            127996,
            8205,
            9794,
            65039
          ],
          [
            9977,
            127997,
            8205,
            9794,
            65039
          ],
          [
            9977,
            127998,
            8205,
            9794,
            65039
          ],
          [
            9977,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":bouncing-ball:"
        ],
        "animated": false
      },
      {
        "base": [
          129342
        ],
        "alternates": [
          [
            129342
          ],
          [
            129342,
            127995
          ],
          [
            129342,
            127996
          ],
          [
            129342,
            127997
          ],
          [
            129342,
            127998
          ],
          [
            129342,
            127999
          ],
          [
            129342,
            8205,
            9792,
            65039
          ],
          [
            129342,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129342,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129342,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129342,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129342,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129342,
            8205,
            9794,
            65039
          ],
          [
            129342,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129342,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129342,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129342,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129342,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":handball:"
        ],
        "animated": false
      },
      {
        "base": [
          128692
        ],
        "alternates": [
          [
            128692
          ],
          [
            128692,
            127995
          ],
          [
            128692,
            127996
          ],
          [
            128692,
            127997
          ],
          [
            128692,
            127998
          ],
          [
            128692,
            127999
          ],
          [
            128692,
            8205,
            9792,
            65039
          ],
          [
            128692,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128692,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128692,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128692,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128692,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128692,
            8205,
            9794,
            65039
          ],
          [
            128692,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128692,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128692,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128692,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128692,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":biking:"
        ],
        "animated": false
      },
      {
        "base": [
          128693
        ],
        "alternates": [
          [
            128693
          ],
          [
            128693,
            127995
          ],
          [
            128693,
            127996
          ],
          [
            128693,
            127997
          ],
          [
            128693,
            127998
          ],
          [
            128693,
            127999
          ],
          [
            128693,
            8205,
            9792,
            65039
          ],
          [
            128693,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128693,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128693,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128693,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128693,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128693,
            8205,
            9794,
            65039
          ],
          [
            128693,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128693,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128693,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128693,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128693,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":mountain-biking:"
        ],
        "animated": false
      },
      {
        "base": [
          129495
        ],
        "alternates": [
          [
            129495
          ],
          [
            129495,
            127995
          ],
          [
            129495,
            127996
          ],
          [
            129495,
            127997
          ],
          [
            129495,
            127998
          ],
          [
            129495,
            127999
          ],
          [
            129495,
            8205,
            9792,
            65039
          ],
          [
            129495,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129495,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129495,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129495,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129495,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129495,
            8205,
            9794,
            65039
          ],
          [
            129495,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129495,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129495,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129495,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129495,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":climbing:"
        ],
        "animated": false
      },
      {
        "base": [
          129340
        ],
        "alternates": [
          [
            129340
          ],
          [
            129340,
            8205,
            9792,
            65039
          ],
          [
            129340,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":wrestling:"
        ],
        "animated": false
      },
      {
        "base": [
          129337
        ],
        "alternates": [
          [
            129337
          ],
          [
            129337,
            127995
          ],
          [
            129337,
            127996
          ],
          [
            129337,
            127997
          ],
          [
            129337,
            127998
          ],
          [
            129337,
            127999
          ],
          [
            129337,
            8205,
            9792,
            65039
          ],
          [
            129337,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129337,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129337,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129337,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129337,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129337,
            8205,
            9794,
            65039
          ],
          [
            129337,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129337,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129337,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129337,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129337,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":juggling:"
        ],
        "animated": false
      },
      {
        "base": [
          127948,
          65039
        ],
        "alternates": [
          [
            127948,
            65039
          ],
          [
            127948,
            127995
          ],
          [
            127948,
            127996
          ],
          [
            127948,
            127997
          ],
          [
            127948,
            127998
          ],
          [
            127948,
            127999
          ],
          [
            127948,
            65039,
            8205,
            9792,
            65039
          ],
          [
            127948,
            127995,
            8205,
            9792,
            65039
          ],
          [
            127948,
            127996,
            8205,
            9792,
            65039
          ],
          [
            127948,
            127997,
            8205,
            9792,
            65039
          ],
          [
            127948,
            127998,
            8205,
            9792,
            65039
          ],
          [
            127948,
            127999,
            8205,
            9792,
            65039
          ],
          [
            127948,
            65039,
            8205,
            9794,
            65039
          ],
          [
            127948,
            127995,
            8205,
            9794,
            65039
          ],
          [
            127948,
            127996,
            8205,
            9794,
            65039
          ],
          [
            127948,
            127997,
            8205,
            9794,
            65039
          ],
          [
            127948,
            127998,
            8205,
            9794,
            65039
          ],
          [
            127948,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":golfing:"
        ],
        "animated": false
      },
      {
        "base": [
          127943
        ],
        "alternates": [
          [
            127943
          ],
          [
            127943,
            127995
          ],
          [
            127943,
            127996
          ],
          [
            127943,
            127997
          ],
          [
            127943,
            127998
          ],
          [
            127943,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":horse-racing:"
        ],
        "animated": false
      },
      {
        "base": [
          129338
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fencing:"
        ],
        "animated": false
      },
      {
        "base": [
          9975,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":skier:"
        ],
        "animated": false
      },
      {
        "base": [
          127938
        ],
        "alternates": [
          [
            127938
          ],
          [
            127938,
            127995
          ],
          [
            127938,
            127996
          ],
          [
            127938,
            127997
          ],
          [
            127938,
            127998
          ],
          [
            127938,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":snowboarder:"
        ],
        "animated": false
      },
      {
        "base": [
          129666
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":parachute:"
        ],
        "animated": false
      },
      {
        "base": [
          127940
        ],
        "alternates": [
          [
            127940
          ],
          [
            127940,
            127995
          ],
          [
            127940,
            127996
          ],
          [
            127940,
            127997
          ],
          [
            127940,
            127998
          ],
          [
            127940,
            127999
          ],
          [
            127940,
            8205,
            9792,
            65039
          ],
          [
            127940,
            127995,
            8205,
            9792,
            65039
          ],
          [
            127940,
            127996,
            8205,
            9792,
            65039
          ],
          [
            127940,
            127997,
            8205,
            9792,
            65039
          ],
          [
            127940,
            127998,
            8205,
            9792,
            65039
          ],
          [
            127940,
            127999,
            8205,
            9792,
            65039
          ],
          [
            127940,
            8205,
            9794,
            65039
          ],
          [
            127940,
            127995,
            8205,
            9794,
            65039
          ],
          [
            127940,
            127996,
            8205,
            9794,
            65039
          ],
          [
            127940,
            127997,
            8205,
            9794,
            65039
          ],
          [
            127940,
            127998,
            8205,
            9794,
            65039
          ],
          [
            127940,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":surfing:"
        ],
        "animated": false
      },
      {
        "base": [
          128675
        ],
        "alternates": [
          [
            128675
          ],
          [
            128675,
            127995
          ],
          [
            128675,
            127996
          ],
          [
            128675,
            127997
          ],
          [
            128675,
            127998
          ],
          [
            128675,
            127999
          ],
          [
            128675,
            8205,
            9792,
            65039
          ],
          [
            128675,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128675,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128675,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128675,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128675,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128675,
            8205,
            9794,
            65039
          ],
          [
            128675,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128675,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128675,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128675,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128675,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":rowing-boat:"
        ],
        "animated": false
      },
      {
        "base": [
          127946
        ],
        "alternates": [
          [
            127946
          ],
          [
            127946,
            127995
          ],
          [
            127946,
            127996
          ],
          [
            127946,
            127997
          ],
          [
            127946,
            127998
          ],
          [
            127946,
            127999
          ],
          [
            127946,
            8205,
            9792,
            65039
          ],
          [
            127946,
            127995,
            8205,
            9792,
            65039
          ],
          [
            127946,
            127996,
            8205,
            9792,
            65039
          ],
          [
            127946,
            127997,
            8205,
            9792,
            65039
          ],
          [
            127946,
            127998,
            8205,
            9792,
            65039
          ],
          [
            127946,
            127999,
            8205,
            9792,
            65039
          ],
          [
            127946,
            8205,
            9794,
            65039
          ],
          [
            127946,
            127995,
            8205,
            9794,
            65039
          ],
          [
            127946,
            127996,
            8205,
            9794,
            65039
          ],
          [
            127946,
            127997,
            8205,
            9794,
            65039
          ],
          [
            127946,
            127998,
            8205,
            9794,
            65039
          ],
          [
            127946,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":swimming:"
        ],
        "animated": false
      },
      {
        "base": [
          129341
        ],
        "alternates": [
          [
            129341
          ],
          [
            129341,
            127995
          ],
          [
            129341,
            127996
          ],
          [
            129341,
            127997
          ],
          [
            129341,
            127998
          ],
          [
            129341,
            127999
          ],
          [
            129341,
            8205,
            9792,
            65039
          ],
          [
            129341,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129341,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129341,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129341,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129341,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129341,
            8205,
            9794,
            65039
          ],
          [
            129341,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129341,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129341,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129341,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129341,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":water-polo:"
        ],
        "animated": false
      },
      {
        "base": [
          129500
        ],
        "alternates": [
          [
            129500
          ],
          [
            129500,
            127995
          ],
          [
            129500,
            127996
          ],
          [
            129500,
            127997
          ],
          [
            129500,
            127998
          ],
          [
            129500,
            127999
          ],
          [
            129500,
            8205,
            9792,
            65039
          ],
          [
            129500,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129500,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129500,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129500,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129500,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129500,
            8205,
            9794,
            65039
          ],
          [
            129500,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129500,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129500,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129500,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129500,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":merperson:"
        ],
        "animated": false
      },
      {
        "base": [
          129498
        ],
        "alternates": [
          [
            129498
          ],
          [
            129498,
            127995
          ],
          [
            129498,
            127996
          ],
          [
            129498,
            127997
          ],
          [
            129498,
            127998
          ],
          [
            129498,
            127999
          ],
          [
            129498,
            8205,
            9792,
            65039
          ],
          [
            129498,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129498,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129498,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129498,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129498,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129498,
            8205,
            9794,
            65039
          ],
          [
            129498,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129498,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129498,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129498,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129498,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":fairy:"
        ],
        "animated": false
      },
      {
        "base": [
          129502
        ],
        "alternates": [
          [
            129502
          ],
          [
            129502,
            8205,
            9792,
            65039
          ],
          [
            129502,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":genie:"
        ],
        "animated": false
      },
      {
        "base": [
          129501
        ],
        "alternates": [
          [
            129501
          ],
          [
            129501,
            127995
          ],
          [
            129501,
            127996
          ],
          [
            129501,
            127997
          ],
          [
            129501,
            127998
          ],
          [
            129501,
            127999
          ],
          [
            129501,
            8205,
            9792,
            65039
          ],
          [
            129501,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129501,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129501,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129501,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129501,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129501,
            8205,
            9794,
            65039
          ],
          [
            129501,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129501,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129501,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129501,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129501,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":elf:"
        ],
        "animated": false
      },
      {
        "base": [
          129497
        ],
        "alternates": [
          [
            129497
          ],
          [
            129497,
            127995
          ],
          [
            129497,
            127996
          ],
          [
            129497,
            127997
          ],
          [
            129497,
            127998
          ],
          [
            129497,
            127999
          ],
          [
            129497,
            8205,
            9792,
            65039
          ],
          [
            129497,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129497,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129497,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129497,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129497,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129497,
            8205,
            9794,
            65039
          ],
          [
            129497,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129497,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129497,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129497,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129497,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":mage:"
        ],
        "animated": false
      },
      {
        "base": [
          129499
        ],
        "alternates": [
          [
            129499
          ],
          [
            129499,
            127995
          ],
          [
            129499,
            127996
          ],
          [
            129499,
            127997
          ],
          [
            129499,
            127998
          ],
          [
            129499,
            127999
          ],
          [
            129499,
            8205,
            9792,
            65039
          ],
          [
            129499,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129499,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129499,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129499,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129499,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129499,
            8205,
            9794,
            65039
          ],
          [
            129499,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129499,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129499,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129499,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129499,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":vampire:"
        ],
        "animated": false
      },
      {
        "base": [
          129503
        ],
        "alternates": [
          [
            129503
          ],
          [
            129503,
            8205,
            9792,
            65039
          ],
          [
            129503,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":zombie:"
        ],
        "animated": false
      },
      {
        "base": [
          129484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":troll:"
        ],
        "animated": false
      },
      {
        "base": [
          129464
        ],
        "alternates": [
          [
            129464
          ],
          [
            129464,
            127995
          ],
          [
            129464,
            127996
          ],
          [
            129464,
            127997
          ],
          [
            129464,
            127998
          ],
          [
            129464,
            127999
          ],
          [
            129464,
            8205,
            9792,
            65039
          ],
          [
            129464,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129464,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129464,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129464,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129464,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129464,
            8205,
            9794,
            65039
          ],
          [
            129464,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129464,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129464,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129464,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129464,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":superhero:"
        ],
        "animated": false
      },
      {
        "base": [
          129465
        ],
        "alternates": [
          [
            129465
          ],
          [
            129465,
            127995
          ],
          [
            129465,
            127996
          ],
          [
            129465,
            127997
          ],
          [
            129465,
            127998
          ],
          [
            129465,
            127999
          ],
          [
            129465,
            8205,
            9792,
            65039
          ],
          [
            129465,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129465,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129465,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129465,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129465,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129465,
            8205,
            9794,
            65039
          ],
          [
            129465,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129465,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129465,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129465,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129465,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":supervillain:"
        ],
        "animated": false
      },
      {
        "base": [
          129399
        ],
        "alternates": [
          [
            129399
          ],
          [
            129399,
            127995
          ],
          [
            129399,
            127996
          ],
          [
            129399,
            127997
          ],
          [
            129399,
            127998
          ],
          [
            129399,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":ninja:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127876
        ],
        "alternates": [
          [
            129489,
            8205,
            127876
          ],
          [
            129489,
            127995,
            8205,
            127876
          ],
          [
            129489,
            127996,
            8205,
            127876
          ],
          [
            129489,
            127997,
            8205,
            127876
          ],
          [
            129489,
            127998,
            8205,
            127876
          ],
          [
            129489,
            127999,
            8205,
            127876
          ],
          [
            129334
          ],
          [
            129334,
            127995
          ],
          [
            129334,
            127996
          ],
          [
            129334,
            127997
          ],
          [
            129334,
            127998
          ],
          [
            129334,
            127999
          ],
          [
            127877
          ],
          [
            127877,
            127995
          ],
          [
            127877,
            127996
          ],
          [
            127877,
            127997
          ],
          [
            127877,
            127998
          ],
          [
            127877,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":mx-claus:"
        ],
        "animated": false
      },
      {
        "base": [
          128124
        ],
        "alternates": [
          [
            128124
          ],
          [
            128124,
            127995
          ],
          [
            128124,
            127996
          ],
          [
            128124,
            127997
          ],
          [
            128124,
            127998
          ],
          [
            128124,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":angel:"
        ],
        "animated": false
      },
      {
        "base": [
          128130
        ],
        "alternates": [
          [
            128130
          ],
          [
            128130,
            127995
          ],
          [
            128130,
            127996
          ],
          [
            128130,
            127997
          ],
          [
            128130,
            127998
          ],
          [
            128130,
            127999
          ],
          [
            128130,
            8205,
            9792,
            65039
          ],
          [
            128130,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128130,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128130,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128130,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128130,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128130,
            8205,
            9794,
            65039
          ],
          [
            128130,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128130,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128130,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128130,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128130,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":guard:"
        ],
        "animated": false
      },
      {
        "base": [
          129733
        ],
        "alternates": [
          [
            129733
          ],
          [
            129733,
            127995
          ],
          [
            129733,
            127996
          ],
          [
            129733,
            127997
          ],
          [
            129733,
            127998
          ],
          [
            129733,
            127999
          ],
          [
            128120
          ],
          [
            128120,
            127995
          ],
          [
            128120,
            127996
          ],
          [
            128120,
            127997
          ],
          [
            128120,
            127998
          ],
          [
            128120,
            127999
          ],
          [
            129332
          ],
          [
            129332,
            127995
          ],
          [
            129332,
            127996
          ],
          [
            129332,
            127997
          ],
          [
            129332,
            127998
          ],
          [
            129332,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":royalty:"
        ],
        "animated": false
      },
      {
        "base": [
          129333
        ],
        "alternates": [
          [
            129333
          ],
          [
            129333,
            127995
          ],
          [
            129333,
            127996
          ],
          [
            129333,
            127997
          ],
          [
            129333,
            127998
          ],
          [
            129333,
            127999
          ],
          [
            129333,
            8205,
            9792,
            65039
          ],
          [
            129333,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129333,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129333,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129333,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129333,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129333,
            8205,
            9794,
            65039
          ],
          [
            129333,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129333,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129333,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129333,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129333,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":tuxedo:"
        ],
        "animated": false
      },
      {
        "base": [
          128112
        ],
        "alternates": [
          [
            128112
          ],
          [
            128112,
            127995
          ],
          [
            128112,
            127996
          ],
          [
            128112,
            127997
          ],
          [
            128112,
            127998
          ],
          [
            128112,
            127999
          ],
          [
            128112,
            8205,
            9792,
            65039
          ],
          [
            128112,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128112,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128112,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128112,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128112,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128112,
            8205,
            9794,
            65039
          ],
          [
            128112,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128112,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128112,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128112,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128112,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":veil:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          128640
        ],
        "alternates": [
          [
            129489,
            8205,
            128640
          ],
          [
            129489,
            127995,
            8205,
            128640
          ],
          [
            129489,
            127996,
            8205,
            128640
          ],
          [
            129489,
            127997,
            8205,
            128640
          ],
          [
            129489,
            127998,
            8205,
            128640
          ],
          [
            129489,
            127999,
            8205,
            128640
          ],
          [
            128105,
            8205,
            128640
          ],
          [
            128105,
            127995,
            8205,
            128640
          ],
          [
            128105,
            127996,
            8205,
            128640
          ],
          [
            128105,
            127997,
            8205,
            128640
          ],
          [
            128105,
            127998,
            8205,
            128640
          ],
          [
            128105,
            127999,
            8205,
            128640
          ],
          [
            128104,
            8205,
            128640
          ],
          [
            128104,
            127995,
            8205,
            128640
          ],
          [
            128104,
            127996,
            8205,
            128640
          ],
          [
            128104,
            127997,
            8205,
            128640
          ],
          [
            128104,
            127998,
            8205,
            128640
          ],
          [
            128104,
            127999,
            8205,
            128640
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":astronaut:"
        ],
        "animated": false
      },
      {
        "base": [
          128119
        ],
        "alternates": [
          [
            128119
          ],
          [
            128119,
            127995
          ],
          [
            128119,
            127996
          ],
          [
            128119,
            127997
          ],
          [
            128119,
            127998
          ],
          [
            128119,
            127999
          ],
          [
            128119,
            8205,
            9792,
            65039
          ],
          [
            128119,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128119,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128119,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128119,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128119,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128119,
            8205,
            9794,
            65039
          ],
          [
            128119,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128119,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128119,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128119,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128119,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":construction-worker:"
        ],
        "animated": false
      },
      {
        "base": [
          128110
        ],
        "alternates": [
          [
            128110
          ],
          [
            128110,
            127995
          ],
          [
            128110,
            127996
          ],
          [
            128110,
            127997
          ],
          [
            128110,
            127998
          ],
          [
            128110,
            127999
          ],
          [
            128110,
            8205,
            9792,
            65039
          ],
          [
            128110,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128110,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128110,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128110,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128110,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128110,
            8205,
            9794,
            65039
          ],
          [
            128110,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128110,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128110,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128110,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128110,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":police:"
        ],
        "animated": false
      },
      {
        "base": [
          128373,
          65039
        ],
        "alternates": [
          [
            128373,
            65039
          ],
          [
            128373,
            127995
          ],
          [
            128373,
            127996
          ],
          [
            128373,
            127997
          ],
          [
            128373,
            127998
          ],
          [
            128373,
            127999
          ],
          [
            128373,
            65039,
            8205,
            9792,
            65039
          ],
          [
            128373,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128373,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128373,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128373,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128373,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128373,
            65039,
            8205,
            9794,
            65039
          ],
          [
            128373,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128373,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128373,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128373,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128373,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":detective:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          9992,
          65039
        ],
        "alternates": [
          [
            129489,
            8205,
            9992,
            65039
          ],
          [
            129489,
            127995,
            8205,
            9992,
            65039
          ],
          [
            129489,
            127996,
            8205,
            9992,
            65039
          ],
          [
            129489,
            127997,
            8205,
            9992,
            65039
          ],
          [
            129489,
            127998,
            8205,
            9992,
            65039
          ],
          [
            129489,
            127999,
            8205,
            9992,
            65039
          ],
          [
            128105,
            8205,
            9992,
            65039
          ],
          [
            128105,
            127995,
            8205,
            9992,
            65039
          ],
          [
            128105,
            127996,
            8205,
            9992,
            65039
          ],
          [
            128105,
            127997,
            8205,
            9992,
            65039
          ],
          [
            128105,
            127998,
            8205,
            9992,
            65039
          ],
          [
            128105,
            127999,
            8205,
            9992,
            65039
          ],
          [
            128104,
            8205,
            9992,
            65039
          ],
          [
            128104,
            127995,
            8205,
            9992,
            65039
          ],
          [
            128104,
            127996,
            8205,
            9992,
            65039
          ],
          [
            128104,
            127997,
            8205,
            9992,
            65039
          ],
          [
            128104,
            127998,
            8205,
            9992,
            65039
          ],
          [
            128104,
            127999,
            8205,
            9992,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":pilot:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          128300
        ],
        "alternates": [
          [
            129489,
            8205,
            128300
          ],
          [
            129489,
            127995,
            8205,
            128300
          ],
          [
            129489,
            127996,
            8205,
            128300
          ],
          [
            129489,
            127997,
            8205,
            128300
          ],
          [
            129489,
            127998,
            8205,
            128300
          ],
          [
            129489,
            127999,
            8205,
            128300
          ],
          [
            128105,
            8205,
            128300
          ],
          [
            128105,
            127995,
            8205,
            128300
          ],
          [
            128105,
            127996,
            8205,
            128300
          ],
          [
            128105,
            127997,
            8205,
            128300
          ],
          [
            128105,
            127998,
            8205,
            128300
          ],
          [
            128105,
            127999,
            8205,
            128300
          ],
          [
            128104,
            8205,
            128300
          ],
          [
            128104,
            127995,
            8205,
            128300
          ],
          [
            128104,
            127996,
            8205,
            128300
          ],
          [
            128104,
            127997,
            8205,
            128300
          ],
          [
            128104,
            127998,
            8205,
            128300
          ],
          [
            128104,
            127999,
            8205,
            128300
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":scientist:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          9877,
          65039
        ],
        "alternates": [
          [
            129489,
            8205,
            9877,
            65039
          ],
          [
            129489,
            127995,
            8205,
            9877,
            65039
          ],
          [
            129489,
            127996,
            8205,
            9877,
            65039
          ],
          [
            129489,
            127997,
            8205,
            9877,
            65039
          ],
          [
            129489,
            127998,
            8205,
            9877,
            65039
          ],
          [
            129489,
            127999,
            8205,
            9877,
            65039
          ],
          [
            128105,
            8205,
            9877,
            65039
          ],
          [
            128105,
            127995,
            8205,
            9877,
            65039
          ],
          [
            128105,
            127996,
            8205,
            9877,
            65039
          ],
          [
            128105,
            127997,
            8205,
            9877,
            65039
          ],
          [
            128105,
            127998,
            8205,
            9877,
            65039
          ],
          [
            128105,
            127999,
            8205,
            9877,
            65039
          ],
          [
            128104,
            8205,
            9877,
            65039
          ],
          [
            128104,
            127995,
            8205,
            9877,
            65039
          ],
          [
            128104,
            127996,
            8205,
            9877,
            65039
          ],
          [
            128104,
            127997,
            8205,
            9877,
            65039
          ],
          [
            128104,
            127998,
            8205,
            9877,
            65039
          ],
          [
            128104,
            127999,
            8205,
            9877,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":health-worker:",
          ":doctor:",
          ":nurse:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          128295
        ],
        "alternates": [
          [
            129489,
            8205,
            128295
          ],
          [
            129489,
            127995,
            8205,
            128295
          ],
          [
            129489,
            127996,
            8205,
            128295
          ],
          [
            129489,
            127997,
            8205,
            128295
          ],
          [
            129489,
            127998,
            8205,
            128295
          ],
          [
            129489,
            127999,
            8205,
            128295
          ],
          [
            128105,
            8205,
            128295
          ],
          [
            128105,
            127995,
            8205,
            128295
          ],
          [
            128105,
            127996,
            8205,
            128295
          ],
          [
            128105,
            127997,
            8205,
            128295
          ],
          [
            128105,
            127998,
            8205,
            128295
          ],
          [
            128105,
            127999,
            8205,
            128295
          ],
          [
            128104,
            8205,
            128295
          ],
          [
            128104,
            127995,
            8205,
            128295
          ],
          [
            128104,
            127996,
            8205,
            128295
          ],
          [
            128104,
            127997,
            8205,
            128295
          ],
          [
            128104,
            127998,
            8205,
            128295
          ],
          [
            128104,
            127999,
            8205,
            128295
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":mechanic:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127981
        ],
        "alternates": [
          [
            129489,
            8205,
            127981
          ],
          [
            129489,
            127995,
            8205,
            127981
          ],
          [
            129489,
            127996,
            8205,
            127981
          ],
          [
            129489,
            127997,
            8205,
            127981
          ],
          [
            129489,
            127998,
            8205,
            127981
          ],
          [
            129489,
            127999,
            8205,
            127981
          ],
          [
            128105,
            8205,
            127981
          ],
          [
            128105,
            127995,
            8205,
            127981
          ],
          [
            128105,
            127996,
            8205,
            127981
          ],
          [
            128105,
            127997,
            8205,
            127981
          ],
          [
            128105,
            127998,
            8205,
            127981
          ],
          [
            128105,
            127999,
            8205,
            127981
          ],
          [
            128104,
            8205,
            127981
          ],
          [
            128104,
            127995,
            8205,
            127981
          ],
          [
            128104,
            127996,
            8205,
            127981
          ],
          [
            128104,
            127997,
            8205,
            127981
          ],
          [
            128104,
            127998,
            8205,
            127981
          ],
          [
            128104,
            127999,
            8205,
            127981
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":factory-worker:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          128658
        ],
        "alternates": [
          [
            129489,
            8205,
            128658
          ],
          [
            129489,
            127995,
            8205,
            128658
          ],
          [
            129489,
            127996,
            8205,
            128658
          ],
          [
            129489,
            127997,
            8205,
            128658
          ],
          [
            129489,
            127998,
            8205,
            128658
          ],
          [
            129489,
            127999,
            8205,
            128658
          ],
          [
            128105,
            8205,
            128658
          ],
          [
            128105,
            127995,
            8205,
            128658
          ],
          [
            128105,
            127996,
            8205,
            128658
          ],
          [
            128105,
            127997,
            8205,
            128658
          ],
          [
            128105,
            127998,
            8205,
            128658
          ],
          [
            128105,
            127999,
            8205,
            128658
          ],
          [
            128104,
            8205,
            128658
          ],
          [
            128104,
            127995,
            8205,
            128658
          ],
          [
            128104,
            127996,
            8205,
            128658
          ],
          [
            128104,
            127997,
            8205,
            128658
          ],
          [
            128104,
            127998,
            8205,
            128658
          ],
          [
            128104,
            127999,
            8205,
            128658
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":firefighter:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127806
        ],
        "alternates": [
          [
            129489,
            8205,
            127806
          ],
          [
            129489,
            127995,
            8205,
            127806
          ],
          [
            129489,
            127996,
            8205,
            127806
          ],
          [
            129489,
            127997,
            8205,
            127806
          ],
          [
            129489,
            127998,
            8205,
            127806
          ],
          [
            129489,
            127999,
            8205,
            127806
          ],
          [
            128105,
            8205,
            127806
          ],
          [
            128105,
            127995,
            8205,
            127806
          ],
          [
            128105,
            127996,
            8205,
            127806
          ],
          [
            128105,
            127997,
            8205,
            127806
          ],
          [
            128105,
            127998,
            8205,
            127806
          ],
          [
            128105,
            127999,
            8205,
            127806
          ],
          [
            128104,
            8205,
            127806
          ],
          [
            128104,
            127995,
            8205,
            127806
          ],
          [
            128104,
            127996,
            8205,
            127806
          ],
          [
            128104,
            127997,
            8205,
            127806
          ],
          [
            128104,
            127998,
            8205,
            127806
          ],
          [
            128104,
            127999,
            8205,
            127806
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":farmer:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127979
        ],
        "alternates": [
          [
            129489,
            8205,
            127979
          ],
          [
            129489,
            127995,
            8205,
            127979
          ],
          [
            129489,
            127996,
            8205,
            127979
          ],
          [
            129489,
            127997,
            8205,
            127979
          ],
          [
            129489,
            127998,
            8205,
            127979
          ],
          [
            129489,
            127999,
            8205,
            127979
          ],
          [
            128105,
            8205,
            127979
          ],
          [
            128105,
            127995,
            8205,
            127979
          ],
          [
            128105,
            127996,
            8205,
            127979
          ],
          [
            128105,
            127997,
            8205,
            127979
          ],
          [
            128105,
            127998,
            8205,
            127979
          ],
          [
            128105,
            127999,
            8205,
            127979
          ],
          [
            128104,
            8205,
            127979
          ],
          [
            128104,
            127995,
            8205,
            127979
          ],
          [
            128104,
            127996,
            8205,
            127979
          ],
          [
            128104,
            127997,
            8205,
            127979
          ],
          [
            128104,
            127998,
            8205,
            127979
          ],
          [
            128104,
            127999,
            8205,
            127979
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":teacher:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127891
        ],
        "alternates": [
          [
            129489,
            8205,
            127891
          ],
          [
            129489,
            127995,
            8205,
            127891
          ],
          [
            129489,
            127996,
            8205,
            127891
          ],
          [
            129489,
            127997,
            8205,
            127891
          ],
          [
            129489,
            127998,
            8205,
            127891
          ],
          [
            129489,
            127999,
            8205,
            127891
          ],
          [
            128105,
            8205,
            127891
          ],
          [
            128105,
            127995,
            8205,
            127891
          ],
          [
            128105,
            127996,
            8205,
            127891
          ],
          [
            128105,
            127997,
            8205,
            127891
          ],
          [
            128105,
            127998,
            8205,
            127891
          ],
          [
            128105,
            127999,
            8205,
            127891
          ],
          [
            128104,
            8205,
            127891
          ],
          [
            128104,
            127995,
            8205,
            127891
          ],
          [
            128104,
            127996,
            8205,
            127891
          ],
          [
            128104,
            127997,
            8205,
            127891
          ],
          [
            128104,
            127998,
            8205,
            127891
          ],
          [
            128104,
            127999,
            8205,
            127891
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":student:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          128188
        ],
        "alternates": [
          [
            129489,
            8205,
            128188
          ],
          [
            129489,
            127995,
            8205,
            128188
          ],
          [
            129489,
            127996,
            8205,
            128188
          ],
          [
            129489,
            127997,
            8205,
            128188
          ],
          [
            129489,
            127998,
            8205,
            128188
          ],
          [
            129489,
            127999,
            8205,
            128188
          ],
          [
            128105,
            8205,
            128188
          ],
          [
            128105,
            127995,
            8205,
            128188
          ],
          [
            128105,
            127996,
            8205,
            128188
          ],
          [
            128105,
            127997,
            8205,
            128188
          ],
          [
            128105,
            127998,
            8205,
            128188
          ],
          [
            128105,
            127999,
            8205,
            128188
          ],
          [
            128104,
            8205,
            128188
          ],
          [
            128104,
            127995,
            8205,
            128188
          ],
          [
            128104,
            127996,
            8205,
            128188
          ],
          [
            128104,
            127997,
            8205,
            128188
          ],
          [
            128104,
            127998,
            8205,
            128188
          ],
          [
            128104,
            127999,
            8205,
            128188
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":office-worker:",
          ":business-person:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          9878,
          65039
        ],
        "alternates": [
          [
            129489,
            8205,
            9878,
            65039
          ],
          [
            129489,
            127995,
            8205,
            9878,
            65039
          ],
          [
            129489,
            127996,
            8205,
            9878,
            65039
          ],
          [
            129489,
            127997,
            8205,
            9878,
            65039
          ],
          [
            129489,
            127998,
            8205,
            9878,
            65039
          ],
          [
            129489,
            127999,
            8205,
            9878,
            65039
          ],
          [
            128105,
            8205,
            9878,
            65039
          ],
          [
            128105,
            127995,
            8205,
            9878,
            65039
          ],
          [
            128105,
            127996,
            8205,
            9878,
            65039
          ],
          [
            128105,
            127997,
            8205,
            9878,
            65039
          ],
          [
            128105,
            127998,
            8205,
            9878,
            65039
          ],
          [
            128105,
            127999,
            8205,
            9878,
            65039
          ],
          [
            128104,
            8205,
            9878,
            65039
          ],
          [
            128104,
            127995,
            8205,
            9878,
            65039
          ],
          [
            128104,
            127996,
            8205,
            9878,
            65039
          ],
          [
            128104,
            127997,
            8205,
            9878,
            65039
          ],
          [
            128104,
            127998,
            8205,
            9878,
            65039
          ],
          [
            128104,
            127999,
            8205,
            9878,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":judge:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          128187
        ],
        "alternates": [
          [
            129489,
            8205,
            128187
          ],
          [
            129489,
            127995,
            8205,
            128187
          ],
          [
            129489,
            127996,
            8205,
            128187
          ],
          [
            129489,
            127997,
            8205,
            128187
          ],
          [
            129489,
            127998,
            8205,
            128187
          ],
          [
            129489,
            127999,
            8205,
            128187
          ],
          [
            128105,
            8205,
            128187
          ],
          [
            128105,
            127995,
            8205,
            128187
          ],
          [
            128105,
            127996,
            8205,
            128187
          ],
          [
            128105,
            127997,
            8205,
            128187
          ],
          [
            128105,
            127998,
            8205,
            128187
          ],
          [
            128105,
            127999,
            8205,
            128187
          ],
          [
            128104,
            8205,
            128187
          ],
          [
            128104,
            127995,
            8205,
            128187
          ],
          [
            128104,
            127996,
            8205,
            128187
          ],
          [
            128104,
            127997,
            8205,
            128187
          ],
          [
            128104,
            127998,
            8205,
            128187
          ],
          [
            128104,
            127999,
            8205,
            128187
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":technologist:",
          ":person-at-computer:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127908
        ],
        "alternates": [
          [
            129489,
            8205,
            127908
          ],
          [
            129489,
            127995,
            8205,
            127908
          ],
          [
            129489,
            127996,
            8205,
            127908
          ],
          [
            129489,
            127997,
            8205,
            127908
          ],
          [
            129489,
            127998,
            8205,
            127908
          ],
          [
            129489,
            127999,
            8205,
            127908
          ],
          [
            128105,
            8205,
            127908
          ],
          [
            128105,
            127995,
            8205,
            127908
          ],
          [
            128105,
            127996,
            8205,
            127908
          ],
          [
            128105,
            127997,
            8205,
            127908
          ],
          [
            128105,
            127998,
            8205,
            127908
          ],
          [
            128105,
            127999,
            8205,
            127908
          ],
          [
            128104,
            8205,
            127908
          ],
          [
            128104,
            127995,
            8205,
            127908
          ],
          [
            128104,
            127996,
            8205,
            127908
          ],
          [
            128104,
            127997,
            8205,
            127908
          ],
          [
            128104,
            127998,
            8205,
            127908
          ],
          [
            128104,
            127999,
            8205,
            127908
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":singer:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127912
        ],
        "alternates": [
          [
            129489,
            8205,
            127912
          ],
          [
            129489,
            127995,
            8205,
            127912
          ],
          [
            129489,
            127996,
            8205,
            127912
          ],
          [
            129489,
            127997,
            8205,
            127912
          ],
          [
            129489,
            127998,
            8205,
            127912
          ],
          [
            129489,
            127999,
            8205,
            127912
          ],
          [
            128105,
            8205,
            127912
          ],
          [
            128105,
            127995,
            8205,
            127912
          ],
          [
            128105,
            127996,
            8205,
            127912
          ],
          [
            128105,
            127997,
            8205,
            127912
          ],
          [
            128105,
            127998,
            8205,
            127912
          ],
          [
            128105,
            127999,
            8205,
            127912
          ],
          [
            128104,
            8205,
            127912
          ],
          [
            128104,
            127995,
            8205,
            127912
          ],
          [
            128104,
            127996,
            8205,
            127912
          ],
          [
            128104,
            127997,
            8205,
            127912
          ],
          [
            128104,
            127998,
            8205,
            127912
          ],
          [
            128104,
            127999,
            8205,
            127912
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":artist:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127859
        ],
        "alternates": [
          [
            129489,
            8205,
            127859
          ],
          [
            129489,
            127995,
            8205,
            127859
          ],
          [
            129489,
            127996,
            8205,
            127859
          ],
          [
            129489,
            127997,
            8205,
            127859
          ],
          [
            129489,
            127998,
            8205,
            127859
          ],
          [
            129489,
            127999,
            8205,
            127859
          ],
          [
            128105,
            8205,
            127859
          ],
          [
            128105,
            127995,
            8205,
            127859
          ],
          [
            128105,
            127996,
            8205,
            127859
          ],
          [
            128105,
            127997,
            8205,
            127859
          ],
          [
            128105,
            127998,
            8205,
            127859
          ],
          [
            128105,
            127999,
            8205,
            127859
          ],
          [
            128104,
            8205,
            127859
          ],
          [
            128104,
            127995,
            8205,
            127859
          ],
          [
            128104,
            127996,
            8205,
            127859
          ],
          [
            128104,
            127997,
            8205,
            127859
          ],
          [
            128104,
            127998,
            8205,
            127859
          ],
          [
            128104,
            127999,
            8205,
            127859
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":cook:"
        ],
        "animated": false
      },
      {
        "base": [
          128115
        ],
        "alternates": [
          [
            128115
          ],
          [
            128115,
            127995
          ],
          [
            128115,
            127996
          ],
          [
            128115,
            127997
          ],
          [
            128115,
            127998
          ],
          [
            128115,
            127999
          ],
          [
            128115,
            8205,
            9792,
            65039
          ],
          [
            128115,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128115,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128115,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128115,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128115,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128115,
            8205,
            9794,
            65039
          ],
          [
            128115,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128115,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128115,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128115,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128115,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":turban:"
        ],
        "animated": false
      },
      {
        "base": [
          129493
        ],
        "alternates": [
          [
            129493
          ],
          [
            129493,
            127995
          ],
          [
            129493,
            127996
          ],
          [
            129493,
            127997
          ],
          [
            129493,
            127998
          ],
          [
            129493,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":headscarf:"
        ],
        "animated": false
      },
      {
        "base": [
          128114
        ],
        "alternates": [
          [
            128114
          ],
          [
            128114,
            127995
          ],
          [
            128114,
            127996
          ],
          [
            128114,
            127997
          ],
          [
            128114,
            127998
          ],
          [
            128114,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":gua-pi-mao:"
        ],
        "animated": false
      },
      {
        "base": [
          128118
        ],
        "alternates": [
          [
            128118
          ],
          [
            128118,
            127995
          ],
          [
            128118,
            127996
          ],
          [
            128118,
            127997
          ],
          [
            128118,
            127998
          ],
          [
            128118,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":baby:"
        ],
        "animated": false
      },
      {
        "base": [
          129490
        ],
        "alternates": [
          [
            129490
          ],
          [
            129490,
            127995
          ],
          [
            129490,
            127996
          ],
          [
            129490,
            127997
          ],
          [
            129490,
            127998
          ],
          [
            129490,
            127999
          ],
          [
            128103
          ],
          [
            128103,
            127995
          ],
          [
            128103,
            127996
          ],
          [
            128103,
            127997
          ],
          [
            128103,
            127998
          ],
          [
            128103,
            127999
          ],
          [
            128102
          ],
          [
            128102,
            127995
          ],
          [
            128102,
            127996
          ],
          [
            128102,
            127997
          ],
          [
            128102,
            127998
          ],
          [
            128102,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":child:"
        ],
        "animated": false
      },
      {
        "base": [
          129489
        ],
        "alternates": [
          [
            129489
          ],
          [
            129489,
            127995
          ],
          [
            129489,
            127996
          ],
          [
            129489,
            127997
          ],
          [
            129489,
            127998
          ],
          [
            129489,
            127999
          ],
          [
            128105
          ],
          [
            128105,
            127995
          ],
          [
            128105,
            127996
          ],
          [
            128105,
            127997
          ],
          [
            128105,
            127998
          ],
          [
            128105,
            127999
          ],
          [
            128104
          ],
          [
            128104,
            127995
          ],
          [
            128104,
            127996
          ],
          [
            128104,
            127997
          ],
          [
            128104,
            127998
          ],
          [
            128104,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":adult:"
        ],
        "animated": false
      },
      {
        "base": [
          129491
        ],
        "alternates": [
          [
            129491
          ],
          [
            129491,
            127995
          ],
          [
            129491,
            127996
          ],
          [
            129491,
            127997
          ],
          [
            129491,
            127998
          ],
          [
            129491,
            127999
          ],
          [
            128117
          ],
          [
            128117,
            127995
          ],
          [
            128117,
            127996
          ],
          [
            128117,
            127997
          ],
          [
            128117,
            127998
          ],
          [
            128117,
            127999
          ],
          [
            128116
          ],
          [
            128116,
            127995
          ],
          [
            128116,
            127996
          ],
          [
            128116,
            127997
          ],
          [
            128116,
            127998
          ],
          [
            128116,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":elder:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129459
        ],
        "alternates": [
          [
            129489,
            8205,
            129459
          ],
          [
            129489,
            127995,
            8205,
            129459
          ],
          [
            129489,
            127996,
            8205,
            129459
          ],
          [
            129489,
            127997,
            8205,
            129459
          ],
          [
            129489,
            127998,
            8205,
            129459
          ],
          [
            129489,
            127999,
            8205,
            129459
          ],
          [
            128105,
            8205,
            129459
          ],
          [
            128105,
            127995,
            8205,
            129459
          ],
          [
            128105,
            127996,
            8205,
            129459
          ],
          [
            128105,
            127997,
            8205,
            129459
          ],
          [
            128105,
            127998,
            8205,
            129459
          ],
          [
            128105,
            127999,
            8205,
            129459
          ],
          [
            128104,
            8205,
            129459
          ],
          [
            128104,
            127995,
            8205,
            129459
          ],
          [
            128104,
            127996,
            8205,
            129459
          ],
          [
            128104,
            127997,
            8205,
            129459
          ],
          [
            128104,
            127998,
            8205,
            129459
          ],
          [
            128104,
            127999,
            8205,
            129459
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":white-hair:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129456
        ],
        "alternates": [
          [
            129489,
            8205,
            129456
          ],
          [
            129489,
            127995,
            8205,
            129456
          ],
          [
            129489,
            127996,
            8205,
            129456
          ],
          [
            129489,
            127997,
            8205,
            129456
          ],
          [
            129489,
            127998,
            8205,
            129456
          ],
          [
            129489,
            127999,
            8205,
            129456
          ],
          [
            128105,
            8205,
            129456
          ],
          [
            128105,
            127995,
            8205,
            129456
          ],
          [
            128105,
            127996,
            8205,
            129456
          ],
          [
            128105,
            127997,
            8205,
            129456
          ],
          [
            128105,
            127998,
            8205,
            129456
          ],
          [
            128105,
            127999,
            8205,
            129456
          ],
          [
            128104,
            8205,
            129456
          ],
          [
            128104,
            127995,
            8205,
            129456
          ],
          [
            128104,
            127996,
            8205,
            129456
          ],
          [
            128104,
            127997,
            8205,
            129456
          ],
          [
            128104,
            127998,
            8205,
            129456
          ],
          [
            128104,
            127999,
            8205,
            129456
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":red-hair:"
        ],
        "animated": false
      },
      {
        "base": [
          128113
        ],
        "alternates": [
          [
            128113
          ],
          [
            128113,
            127995
          ],
          [
            128113,
            127996
          ],
          [
            128113,
            127997
          ],
          [
            128113,
            127998
          ],
          [
            128113,
            127999
          ],
          [
            128113,
            8205,
            9792,
            65039
          ],
          [
            128113,
            127995,
            8205,
            9792,
            65039
          ],
          [
            128113,
            127996,
            8205,
            9792,
            65039
          ],
          [
            128113,
            127997,
            8205,
            9792,
            65039
          ],
          [
            128113,
            127998,
            8205,
            9792,
            65039
          ],
          [
            128113,
            127999,
            8205,
            9792,
            65039
          ],
          [
            128113,
            8205,
            9794,
            65039
          ],
          [
            128113,
            127995,
            8205,
            9794,
            65039
          ],
          [
            128113,
            127996,
            8205,
            9794,
            65039
          ],
          [
            128113,
            127997,
            8205,
            9794,
            65039
          ],
          [
            128113,
            127998,
            8205,
            9794,
            65039
          ],
          [
            128113,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":blond-hair:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129457
        ],
        "alternates": [
          [
            129489,
            8205,
            129457
          ],
          [
            129489,
            127995,
            8205,
            129457
          ],
          [
            129489,
            127996,
            8205,
            129457
          ],
          [
            129489,
            127997,
            8205,
            129457
          ],
          [
            129489,
            127998,
            8205,
            129457
          ],
          [
            129489,
            127999,
            8205,
            129457
          ],
          [
            128105,
            8205,
            129457
          ],
          [
            128105,
            127995,
            8205,
            129457
          ],
          [
            128105,
            127996,
            8205,
            129457
          ],
          [
            128105,
            127997,
            8205,
            129457
          ],
          [
            128105,
            127998,
            8205,
            129457
          ],
          [
            128105,
            127999,
            8205,
            129457
          ],
          [
            128104,
            8205,
            129457
          ],
          [
            128104,
            127995,
            8205,
            129457
          ],
          [
            128104,
            127996,
            8205,
            129457
          ],
          [
            128104,
            127997,
            8205,
            129457
          ],
          [
            128104,
            127998,
            8205,
            129457
          ],
          [
            128104,
            127999,
            8205,
            129457
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":curly-hair:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129458
        ],
        "alternates": [
          [
            129489,
            8205,
            129458
          ],
          [
            129489,
            127995,
            8205,
            129458
          ],
          [
            129489,
            127996,
            8205,
            129458
          ],
          [
            129489,
            127997,
            8205,
            129458
          ],
          [
            129489,
            127998,
            8205,
            129458
          ],
          [
            129489,
            127999,
            8205,
            129458
          ],
          [
            128105,
            8205,
            129458
          ],
          [
            128105,
            127995,
            8205,
            129458
          ],
          [
            128105,
            127996,
            8205,
            129458
          ],
          [
            128105,
            127997,
            8205,
            129458
          ],
          [
            128105,
            127998,
            8205,
            129458
          ],
          [
            128105,
            127999,
            8205,
            129458
          ],
          [
            128104,
            8205,
            129458
          ],
          [
            128104,
            127995,
            8205,
            129458
          ],
          [
            128104,
            127996,
            8205,
            129458
          ],
          [
            128104,
            127997,
            8205,
            129458
          ],
          [
            128104,
            127998,
            8205,
            129458
          ],
          [
            128104,
            127999,
            8205,
            129458
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":bald:"
        ],
        "animated": false
      },
      {
        "base": [
          129492
        ],
        "alternates": [
          [
            129492
          ],
          [
            129492,
            127995
          ],
          [
            129492,
            127996
          ],
          [
            129492,
            127997
          ],
          [
            129492,
            127998
          ],
          [
            129492,
            127999
          ],
          [
            129492,
            8205,
            9792,
            65039
          ],
          [
            129492,
            127995,
            8205,
            9792,
            65039
          ],
          [
            129492,
            127996,
            8205,
            9792,
            65039
          ],
          [
            129492,
            127997,
            8205,
            9792,
            65039
          ],
          [
            129492,
            127998,
            8205,
            9792,
            65039
          ],
          [
            129492,
            127999,
            8205,
            9792,
            65039
          ],
          [
            129492,
            8205,
            9794,
            65039
          ],
          [
            129492,
            127995,
            8205,
            9794,
            65039
          ],
          [
            129492,
            127996,
            8205,
            9794,
            65039
          ],
          [
            129492,
            127997,
            8205,
            9794,
            65039
          ],
          [
            129492,
            127998,
            8205,
            9794,
            65039
          ],
          [
            129492,
            127999,
            8205,
            9794,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":beard:"
        ],
        "animated": false
      },
      {
        "base": [
          128372,
          65039
        ],
        "alternates": [
          [
            128372,
            65039
          ],
          [
            128372,
            127995
          ],
          [
            128372,
            127996
          ],
          [
            128372,
            127997
          ],
          [
            128372,
            127998
          ],
          [
            128372,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":levitating-suit:"
        ],
        "animated": false
      },
      {
        "base": [
          128131
        ],
        "alternates": [
          [
            128131
          ],
          [
            128131,
            127995
          ],
          [
            128131,
            127996
          ],
          [
            128131,
            127997
          ],
          [
            128131,
            127998
          ],
          [
            128131,
            127999
          ]
        ],
        "emoticons": [
          "\u266a\u250f(\uff65o\uff65)\u251b\u266a"
        ],
        "shortcodes": [
          ":dancer-woman:"
        ],
        "animated": true
      },
      {
        "base": [
          128378
        ],
        "alternates": [
          [
            128378
          ],
          [
            128378,
            127995
          ],
          [
            128378,
            127996
          ],
          [
            128378,
            127997
          ],
          [
            128378,
            127998
          ],
          [
            128378,
            127999
          ]
        ],
        "emoticons": [
          "\u266a\u2517(\uff65o\uff65)\u2513\u266a"
        ],
        "shortcodes": [
          ":dancer-man:"
        ],
        "animated": false
      },
      {
        "base": [
          128111
        ],
        "alternates": [
          [
            128111
          ],
          [
            128111,
            8205,
            9794,
            65039
          ],
          [
            128111,
            8205,
            9792,
            65039
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":bunny-ears:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          129309,
          8205,
          129489
        ],
        "alternates": [
          [
            129489,
            8205,
            129309,
            8205,
            129489
          ],
          [
            129489,
            127995,
            8205,
            129309,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127995,
            8205,
            129309,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127995,
            8205,
            129309,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127995,
            8205,
            129309,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127995,
            8205,
            129309,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127996,
            8205,
            129309,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127996,
            8205,
            129309,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127996,
            8205,
            129309,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127996,
            8205,
            129309,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127996,
            8205,
            129309,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127997,
            8205,
            129309,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127997,
            8205,
            129309,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127997,
            8205,
            129309,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127997,
            8205,
            129309,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127997,
            8205,
            129309,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127998,
            8205,
            129309,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127998,
            8205,
            129309,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127998,
            8205,
            129309,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127998,
            8205,
            129309,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127998,
            8205,
            129309,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127999,
            8205,
            129309,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127999,
            8205,
            129309,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127999,
            8205,
            129309,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127999,
            8205,
            129309,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127999,
            8205,
            129309,
            8205,
            129489,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":holding-hands:"
        ],
        "animated": false
      },
      {
        "base": [
          128109
        ],
        "alternates": [
          [
            128109
          ],
          [
            128109,
            127995
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128105,
            127995
          ],
          [
            128109,
            127996
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128105,
            127996
          ],
          [
            128109,
            127997
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128105,
            127997
          ],
          [
            128109,
            127998
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128105,
            127998
          ],
          [
            128109,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":holding-hands-women:"
        ],
        "animated": false
      },
      {
        "base": [
          128108
        ],
        "alternates": [
          [
            128108
          ],
          [
            128108,
            127995
          ],
          [
            128104,
            127995,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127995,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127995,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127995,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127996,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128108,
            127996
          ],
          [
            128104,
            127996,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127996,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127996,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127997,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127997,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128108,
            127997
          ],
          [
            128104,
            127997,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127997,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127998,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127998,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127998,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128108,
            127998
          ],
          [
            128104,
            127998,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127999,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127999,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127999,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127999,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128108,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":holding-hands-men:"
        ],
        "animated": false
      },
      {
        "base": [
          128107
        ],
        "alternates": [
          [
            128107
          ],
          [
            128107,
            127995
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127995,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128107,
            127996
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127996,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128107,
            127997
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127997,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128107,
            127998
          ],
          [
            128105,
            127998,
            8205,
            129309,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127999,
            8205,
            129309,
            8205,
            128104,
            127998
          ],
          [
            128107,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":holding-hands-woman-and-man:"
        ],
        "animated": false
      },
      {
        "base": [
          128143
        ],
        "alternates": [
          [
            128143
          ],
          [
            128143,
            127995
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127995
          ],
          [
            128143,
            127996
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127996
          ],
          [
            128143,
            127997
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127997
          ],
          [
            128143,
            127998
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            129489,
            127998
          ],
          [
            128143,
            127999
          ]
        ],
        "emoticons": [
          "(-}{-)"
        ],
        "shortcodes": [
          ":kiss-people:"
        ],
        "animated": false
      },
      {
        "base": [
          128105,
          8205,
          10084,
          65039,
          8205,
          128139,
          8205,
          128104
        ],
        "alternates": [
          [
            128105,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":kiss-woman-and-man:"
        ],
        "animated": false
      },
      {
        "base": [
          128104,
          8205,
          10084,
          65039,
          8205,
          128139,
          8205,
          128104
        ],
        "alternates": [
          [
            128104,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128104,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":kiss-man-and-man:"
        ],
        "animated": false
      },
      {
        "base": [
          128105,
          8205,
          10084,
          65039,
          8205,
          128139,
          8205,
          128105
        ],
        "alternates": [
          [
            128105,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128139,
            8205,
            128105,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":kiss-woman-and-woman:"
        ],
        "animated": false
      },
      {
        "base": [
          128145
        ],
        "alternates": [
          [
            128145
          ],
          [
            128145,
            127995
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127995,
            8205,
            10084,
            65039,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            129489,
            127995
          ],
          [
            128145,
            127996
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127996,
            8205,
            10084,
            65039,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            129489,
            127996
          ],
          [
            128145,
            127997
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            129489,
            127998
          ],
          [
            129489,
            127997,
            8205,
            10084,
            65039,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            129489,
            127997
          ],
          [
            128145,
            127998
          ],
          [
            129489,
            127998,
            8205,
            10084,
            65039,
            8205,
            129489,
            127999
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            129489,
            127995
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            129489,
            127996
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            129489,
            127997
          ],
          [
            129489,
            127999,
            8205,
            10084,
            65039,
            8205,
            129489,
            127998
          ],
          [
            128145,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":people-with-heart:"
        ],
        "animated": false
      },
      {
        "base": [
          128105,
          8205,
          10084,
          65039,
          8205,
          128104
        ],
        "alternates": [
          [
            128105,
            8205,
            10084,
            65039,
            8205,
            128104
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":heart-with-woman-and-man:"
        ],
        "animated": false
      },
      {
        "base": [
          128104,
          8205,
          10084,
          65039,
          8205,
          128104
        ],
        "alternates": [
          [
            128104,
            8205,
            10084,
            65039,
            8205,
            128104
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127995,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127996,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127997,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127998,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127995
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127996
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127997
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127998
          ],
          [
            128104,
            127999,
            8205,
            10084,
            65039,
            8205,
            128104,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":heart-with-man-and-man:"
        ],
        "animated": false
      },
      {
        "base": [
          128105,
          8205,
          10084,
          65039,
          8205,
          128105
        ],
        "alternates": [
          [
            128105,
            8205,
            10084,
            65039,
            8205,
            128105
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127995,
            8205,
            10084,
            65039,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127996,
            8205,
            10084,
            65039,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127997,
            8205,
            10084,
            65039,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127998,
            8205,
            10084,
            65039,
            8205,
            128105,
            127999
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128105,
            127995
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128105,
            127996
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128105,
            127997
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128105,
            127998
          ],
          [
            128105,
            127999,
            8205,
            10084,
            65039,
            8205,
            128105,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":heart-with-woman-and-woman:"
        ],
        "animated": false
      },
      {
        "base": [
          129732
        ],
        "alternates": [
          [
            129732
          ],
          [
            129732,
            127995
          ],
          [
            129732,
            127996
          ],
          [
            129732,
            127997
          ],
          [
            129732,
            127998
          ],
          [
            129732,
            127999
          ],
          [
            129328
          ],
          [
            129328,
            127995
          ],
          [
            129328,
            127996
          ],
          [
            129328,
            127997
          ],
          [
            129328,
            127998
          ],
          [
            129328,
            127999
          ],
          [
            129731
          ],
          [
            129731,
            127995
          ],
          [
            129731,
            127996
          ],
          [
            129731,
            127997
          ],
          [
            129731,
            127998
          ],
          [
            129731,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":pregnant:"
        ],
        "animated": false
      },
      {
        "base": [
          129329
        ],
        "alternates": [
          [
            129329
          ],
          [
            129329,
            127995
          ],
          [
            129329,
            127996
          ],
          [
            129329,
            127997
          ],
          [
            129329,
            127998
          ],
          [
            129329,
            127999
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":breast-feeding:"
        ],
        "animated": false
      },
      {
        "base": [
          129489,
          8205,
          127868
        ],
        "alternates": [
          [
            129489,
            8205,
            127868
          ],
          [
            129489,
            127995,
            8205,
            127868
          ],
          [
            129489,
            127996,
            8205,
            127868
          ],
          [
            129489,
            127997,
            8205,
            127868
          ],
          [
            129489,
            127998,
            8205,
            127868
          ],
          [
            129489,
            127999,
            8205,
            127868
          ],
          [
            128105,
            8205,
            127868
          ],
          [
            128105,
            127995,
            8205,
            127868
          ],
          [
            128105,
            127996,
            8205,
            127868
          ],
          [
            128105,
            127997,
            8205,
            127868
          ],
          [
            128105,
            127998,
            8205,
            127868
          ],
          [
            128105,
            127999,
            8205,
            127868
          ],
          [
            128104,
            8205,
            127868
          ],
          [
            128104,
            127995,
            8205,
            127868
          ],
          [
            128104,
            127996,
            8205,
            127868
          ],
          [
            128104,
            127997,
            8205,
            127868
          ],
          [
            128104,
            127998,
            8205,
            127868
          ],
          [
            128104,
            127999,
            8205,
            127868
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":person-feeding-baby:"
        ],
        "animated": false
      },
      {
        "base": [
          128106
        ],
        "alternates": [
          [
            128106
          ],
          [
            128104,
            8205,
            128105,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128105,
            8205,
            128103
          ],
          [
            128104,
            8205,
            128105,
            8205,
            128103,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128105,
            8205,
            128102,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128105,
            8205,
            128103,
            8205,
            128103
          ],
          [
            128104,
            8205,
            128104,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128104,
            8205,
            128103
          ],
          [
            128104,
            8205,
            128104,
            8205,
            128103,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128104,
            8205,
            128102,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128104,
            8205,
            128103,
            8205,
            128103
          ],
          [
            128104,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128103
          ],
          [
            128104,
            8205,
            128103,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128102,
            8205,
            128102
          ],
          [
            128104,
            8205,
            128103,
            8205,
            128103
          ],
          [
            128105,
            8205,
            128105,
            8205,
            128102
          ],
          [
            128105,
            8205,
            128105,
            8205,
            128103
          ],
          [
            128105,
            8205,
            128105,
            8205,
            128103,
            8205,
            128102
          ],
          [
            128105,
            8205,
            128105,
            8205,
            128102,
            8205,
            128102
          ],
          [
            128105,
            8205,
            128105,
            8205,
            128103,
            8205,
            128103
          ],
          [
            128105,
            8205,
            128102
          ],
          [
            128105,
            8205,
            128103
          ],
          [
            128105,
            8205,
            128103,
            8205,
            128102
          ],
          [
            128105,
            8205,
            128102,
            8205,
            128102
          ],
          [
            128105,
            8205,
            128103,
            8205,
            128103
          ]
        ],
        "emoticons": [],
        "shortcodes": [
          ":family:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "Animals and nature",
    "emoji": [
      {
        "base": [
          128144
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bouquet:",
          ":flowers:"
        ],
        "animated": false
      },
      {
        "base": [
          127801
        ],
        "alternates": [],
        "emoticons": [
          "@-,-'-,-"
        ],
        "shortcodes": [
          ":rose:"
        ],
        "animated": true
      },
      {
        "base": [
          129344
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wilted-flower:"
        ],
        "animated": true
      },
      {
        "base": [
          127802
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hibiscus:"
        ],
        "animated": false
      },
      {
        "base": [
          127799
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tulip:"
        ],
        "animated": false
      },
      {
        "base": [
          129719
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lotus:"
        ],
        "animated": false
      },
      {
        "base": [
          127800
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cherry-blossom:"
        ],
        "animated": false
      },
      {
        "base": [
          128174
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-flower:"
        ],
        "animated": false
      },
      {
        "base": [
          127989,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rosette:"
        ],
        "animated": false
      },
      {
        "base": [
          129723
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hyacinth:"
        ],
        "animated": false
      },
      {
        "base": [
          127803
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunflower:"
        ],
        "animated": false
      },
      {
        "base": [
          127804
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blossom:"
        ],
        "animated": false
      },
      {
        "base": [
          127810
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fallen-leaf:"
        ],
        "animated": true
      },
      {
        "base": [
          127809
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":maple-leaf:"
        ],
        "animated": false
      },
      {
        "base": [
          127812
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mushroom:"
        ],
        "animated": false
      },
      {
        "base": [
          127806
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ear-of-rice:"
        ],
        "animated": false
      },
      {
        "base": [
          127793
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":plant:",
          ":seed:"
        ],
        "animated": true
      },
      {
        "base": [
          127807
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":herb:"
        ],
        "animated": false
      },
      {
        "base": [
          127811
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":leaves:"
        ],
        "animated": false
      },
      {
        "base": [
          9752,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shamrock:"
        ],
        "animated": false
      },
      {
        "base": [
          127808
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":luck:",
          ":four-leaf-clover:"
        ],
        "animated": true
      },
      {
        "base": [
          129716
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":potted-plant:"
        ],
        "animated": false
      },
      {
        "base": [
          127797
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cactus:"
        ],
        "animated": false
      },
      {
        "base": [
          127796
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":palm-tree:"
        ],
        "animated": false
      },
      {
        "base": [
          127795
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":deciduous-tree:"
        ],
        "animated": false
      },
      {
        "base": [
          127794
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":evergreen-tree:"
        ],
        "animated": false
      },
      {
        "base": [
          129717
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wood:"
        ],
        "animated": false
      },
      {
        "base": [
          129721
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nest:"
        ],
        "animated": false
      },
      {
        "base": [
          129722
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nest-with-eggs:"
        ],
        "animated": false
      },
      {
        "base": [
          129704
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rock:"
        ],
        "animated": false
      },
      {
        "base": [
          9968,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mountain:"
        ],
        "animated": false
      },
      {
        "base": [
          127956,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":snow-mountain:"
        ],
        "animated": false
      },
      {
        "base": [
          10052,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":snowflake:",
          ":winter:",
          ":cold:"
        ],
        "animated": true
      },
      {
        "base": [
          9731,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":snowman-with-snow:"
        ],
        "animated": false
      },
      {
        "base": [
          9924
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":snowman:"
        ],
        "animated": false
      },
      {
        "base": [
          127787,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fog:"
        ],
        "animated": false
      },
      {
        "base": [
          127777,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":thermometer:"
        ],
        "animated": false
      },
      {
        "base": [
          128293
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fire:",
          ":burn:",
          ":lit:"
        ],
        "animated": true
      },
      {
        "base": [
          127755
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":volcano:"
        ],
        "animated": true
      },
      {
        "base": [
          127964,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":desert:"
        ],
        "animated": false
      },
      {
        "base": [
          127966,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":national-park:"
        ],
        "animated": false
      },
      {
        "base": [
          127965,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":desert-island:"
        ],
        "animated": false
      },
      {
        "base": [
          127958,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beach:"
        ],
        "animated": false
      },
      {
        "base": [
          127749
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunrise:"
        ],
        "animated": true
      },
      {
        "base": [
          127748
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunrise-over-mountains:"
        ],
        "animated": true
      },
      {
        "base": [
          127752
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rainbow:"
        ],
        "animated": true
      },
      {
        "base": [
          129767
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bubbles:"
        ],
        "animated": false
      },
      {
        "base": [
          127754
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ocean:"
        ],
        "animated": false
      },
      {
        "base": [
          127788,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wind-face:"
        ],
        "animated": true
      },
      {
        "base": [
          127744
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cyclone:"
        ],
        "animated": false
      },
      {
        "base": [
          127786,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tornado:"
        ],
        "animated": false
      },
      {
        "base": [
          9889
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":electricity:",
          ":zap:",
          ":lightning:"
        ],
        "animated": true
      },
      {
        "base": [
          9748
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":umbrella-in-rain:"
        ],
        "animated": false
      },
      {
        "base": [
          128167
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":droplet:"
        ],
        "animated": false
      },
      {
        "base": [
          127783,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rain-cloud:"
        ],
        "animated": false
      },
      {
        "base": [
          127785,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cloud-with-lightning:"
        ],
        "animated": false
      },
      {
        "base": [
          9928,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cloud-with-lightning-and-rain:"
        ],
        "animated": false
      },
      {
        "base": [
          127784,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cloud-with-snow:"
        ],
        "animated": false
      },
      {
        "base": [
          9729,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cloud:"
        ],
        "animated": false
      },
      {
        "base": [
          127782,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sun-behind-rain-cloud:"
        ],
        "animated": false
      },
      {
        "base": [
          127781,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sun-behind-large-cloud:"
        ],
        "animated": false
      },
      {
        "base": [
          9925
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":partly-sunny:"
        ],
        "animated": false
      },
      {
        "base": [
          127780,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sun-behind-small-cloud:"
        ],
        "animated": false
      },
      {
        "base": [
          9728,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunny:"
        ],
        "animated": false
      },
      {
        "base": [
          127774
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sun-with-face:"
        ],
        "animated": true
      },
      {
        "base": [
          127773
        ],
        "alternates": [],
        "emoticons": [
          "<_<"
        ],
        "shortcodes": [
          ":moon-face-full:"
        ],
        "animated": false
      },
      {
        "base": [
          127770
        ],
        "alternates": [],
        "emoticons": [
          ">_>"
        ],
        "shortcodes": [
          ":moon-face-new:"
        ],
        "animated": false
      },
      {
        "base": [
          127772
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moon-face-last-quarter:"
        ],
        "animated": false
      },
      {
        "base": [
          127771
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moon-face-first-quarter:"
        ],
        "animated": false
      },
      {
        "base": [
          11088
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":star:"
        ],
        "animated": false
      },
      {
        "base": [
          127775
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":glowing-star:"
        ],
        "animated": true
      },
      {
        "base": [
          10024
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sparkles:"
        ],
        "animated": false
      },
      {
        "base": [
          128171
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dizzy:"
        ],
        "animated": true
      },
      {
        "base": [
          127769
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crescent-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          9732,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":comet:"
        ],
        "animated": true
      },
      {
        "base": [
          128371,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hole:"
        ],
        "animated": false
      },
      {
        "base": [
          127776
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shooting-star:"
        ],
        "animated": false
      },
      {
        "base": [
          127756
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":milky-way:"
        ],
        "animated": false
      },
      {
        "base": [
          127757
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":globe-showing-Europe-Africa:"
        ],
        "animated": true
      },
      {
        "base": [
          127758
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":globe-showing-Americas:"
        ],
        "animated": false
      },
      {
        "base": [
          127759
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":globe-showing-Asia-Australia:"
        ],
        "animated": false
      },
      {
        "base": [
          129680
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ringed-planet:"
        ],
        "animated": false
      },
      {
        "base": [
          127761
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":new-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127762
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":waxing-crescent-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127763
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":first-quarter-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127764
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":waxing-gibbous-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127765
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":full-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127766
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":waning-gibbous-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127767
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":last-quarter-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          127768
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":waning-crescent-moon:"
        ],
        "animated": false
      },
      {
        "base": [
          128584
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":see-no-evil-monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128585
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hear-no-evil-monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128586
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":speak-no-evil-monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128053
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":monkey-face:"
        ],
        "animated": false
      },
      {
        "base": [
          129409
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lion-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128047
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tiger-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128049
        ],
        "alternates": [],
        "emoticons": [
          "=^.^="
        ],
        "shortcodes": [
          ":cat-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128054
        ],
        "alternates": [],
        "emoticons": [
          "\u25bc\u30fb\u1d25\u30fb\u25bc"
        ],
        "shortcodes": [
          ":dog-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128058
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wolf:"
        ],
        "animated": false
      },
      {
        "base": [
          128059
        ],
        "alternates": [],
        "emoticons": [
          "\u0295\u00b7\u1d25\u00b7\u0294"
        ],
        "shortcodes": [
          ":bear-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128059,
          8205,
          10052,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":polar-bear:"
        ],
        "animated": false
      },
      {
        "base": [
          128040
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":koala:"
        ],
        "animated": false
      },
      {
        "base": [
          128060
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":panda:"
        ],
        "animated": false
      },
      {
        "base": [
          128057
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hamster:"
        ],
        "animated": false
      },
      {
        "base": [
          128045
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mouse-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128048
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rabbit-face:"
        ],
        "animated": false
      },
      {
        "base": [
          129418
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fox-face:"
        ],
        "animated": false
      },
      {
        "base": [
          129437
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":raccoon:"
        ],
        "animated": false
      },
      {
        "base": [
          128046
        ],
        "alternates": [],
        "emoticons": [
          "3:O"
        ],
        "shortcodes": [
          ":cow-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128055
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pig-face:"
        ],
        "animated": false
      },
      {
        "base": [
          128061
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":snout:"
        ],
        "animated": false
      },
      {
        "base": [
          128023
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":boar:"
        ],
        "animated": false
      },
      {
        "base": [
          129427
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":zebra:"
        ],
        "animated": false
      },
      {
        "base": [
          129412
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":unicorn:"
        ],
        "animated": true
      },
      {
        "base": [
          128052
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":horse-face:"
        ],
        "animated": false
      },
      {
        "base": [
          129742
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moose:"
        ],
        "animated": false
      },
      {
        "base": [
          128050
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dragon-face:"
        ],
        "animated": false
      },
      {
        "base": [
          129422
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lizard:"
        ],
        "animated": true
      },
      {
        "base": [
          128009
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dragon:"
        ],
        "animated": true
      },
      {
        "base": [
          129430
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":t-rex:"
        ],
        "animated": true
      },
      {
        "base": [
          129429
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dinosaur:"
        ],
        "animated": false
      },
      {
        "base": [
          128034
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":turtle:"
        ],
        "animated": true
      },
      {
        "base": [
          128010
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crocodile:"
        ],
        "animated": false
      },
      {
        "base": [
          128013
        ],
        "alternates": [],
        "emoticons": [
          "\uff5e>\u309c\uff09\uff5e\uff5e\uff5e\uff5e"
        ],
        "shortcodes": [
          ":snake:"
        ],
        "animated": true
      },
      {
        "base": [
          128056
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":frog:"
        ],
        "animated": true
      },
      {
        "base": [
          128007
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rabbit:"
        ],
        "animated": true
      },
      {
        "base": [
          128001
        ],
        "alternates": [],
        "emoticons": [
          "<:3)~"
        ],
        "shortcodes": [
          ":mouse:"
        ],
        "animated": false
      },
      {
        "base": [
          128000
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rat:"
        ],
        "animated": true
      },
      {
        "base": [
          128008
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cat:"
        ],
        "animated": false
      },
      {
        "base": [
          128008,
          8205,
          11035
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-cat:"
        ],
        "animated": false
      },
      {
        "base": [
          128041
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":poodle:"
        ],
        "animated": false
      },
      {
        "base": [
          128021
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dog:"
        ],
        "animated": true
      },
      {
        "base": [
          129454
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":guide-dog:"
        ],
        "animated": false
      },
      {
        "base": [
          128021,
          8205,
          129466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":service-dog:"
        ],
        "animated": false
      },
      {
        "base": [
          128022
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pig:"
        ],
        "animated": true
      },
      {
        "base": [
          128014
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":racehorse:"
        ],
        "animated": true
      },
      {
        "base": [
          129743
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":donkey:"
        ],
        "animated": true
      },
      {
        "base": [
          128004
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cow:"
        ],
        "animated": false
      },
      {
        "base": [
          128002
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ox:"
        ],
        "animated": true
      },
      {
        "base": [
          128003
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":water-buffalo:"
        ],
        "animated": false
      },
      {
        "base": [
          129452
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bison:"
        ],
        "animated": false
      },
      {
        "base": [
          128015
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ram:"
        ],
        "animated": false
      },
      {
        "base": [
          128017
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sheep:",
          ":ewe:"
        ],
        "animated": false
      },
      {
        "base": [
          128016
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":goat:"
        ],
        "animated": true
      },
      {
        "base": [
          129420
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":deer:"
        ],
        "animated": false
      },
      {
        "base": [
          129433
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":llama:"
        ],
        "animated": false
      },
      {
        "base": [
          129445
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sloth:"
        ],
        "animated": false
      },
      {
        "base": [
          129432
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kangaroo:"
        ],
        "animated": true
      },
      {
        "base": [
          128024
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":elephant:"
        ],
        "animated": false
      },
      {
        "base": [
          129443
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mammoth:"
        ],
        "animated": false
      },
      {
        "base": [
          129423
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rhino:",
          ":rhinoceros:"
        ],
        "animated": false
      },
      {
        "base": [
          129435
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hippo:"
        ],
        "animated": false
      },
      {
        "base": [
          129426
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":giraffe:"
        ],
        "animated": false
      },
      {
        "base": [
          128006
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":leopard:"
        ],
        "animated": false
      },
      {
        "base": [
          128005
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tiger:"
        ],
        "animated": true
      },
      {
        "base": [
          128018
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":monkey:"
        ],
        "animated": true
      },
      {
        "base": [
          129421
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gorilla:"
        ],
        "animated": false
      },
      {
        "base": [
          129447
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orangutan:"
        ],
        "animated": false
      },
      {
        "base": [
          128042
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":camel:"
        ],
        "animated": false
      },
      {
        "base": [
          128043
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bactrian-camel:"
        ],
        "animated": false
      },
      {
        "base": [
          128063,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chipmunk:"
        ],
        "animated": true
      },
      {
        "base": [
          129451
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beaver:"
        ],
        "animated": false
      },
      {
        "base": [
          129448
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":skunk:"
        ],
        "animated": false
      },
      {
        "base": [
          129441
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":badger:"
        ],
        "animated": false
      },
      {
        "base": [
          129428
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hedgehog:"
        ],
        "animated": false
      },
      {
        "base": [
          129446
        ],
        "alternates": [],
        "emoticons": [
          "(:3\ua1e4\u2050\ua0f3"
        ],
        "shortcodes": [
          ":otter:"
        ],
        "animated": true
      },
      {
        "base": [
          129415
        ],
        "alternates": [],
        "emoticons": [
          "\u239b\u239d(\u2022\u2c45\u2022)\u23a0\u239e"
        ],
        "shortcodes": [
          ":bat:"
        ],
        "animated": true
      },
      {
        "base": [
          129725
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wing:; :fly:"
        ],
        "animated": false
      },
      {
        "base": [
          129718
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":feather:"
        ],
        "animated": false
      },
      {
        "base": [
          128038
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bird:"
        ],
        "animated": false
      },
      {
        "base": [
          128038,
          8205,
          11035
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-bird:"
        ],
        "animated": false
      },
      {
        "base": [
          128019
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rooster:"
        ],
        "animated": true
      },
      {
        "base": [
          128020
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chicken:"
        ],
        "animated": false
      },
      {
        "base": [
          128035
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hatching-chick:"
        ],
        "animated": true
      },
      {
        "base": [
          128036
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":baby-chick:"
        ],
        "animated": true
      },
      {
        "base": [
          128037
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hatched-chick:"
        ],
        "animated": true
      },
      {
        "base": [
          129413
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eagle:"
        ],
        "animated": true
      },
      {
        "base": [
          129417
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":owl:"
        ],
        "animated": false
      },
      {
        "base": [
          129436
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":parrot:"
        ],
        "animated": false
      },
      {
        "base": [
          128330,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":peace:",
          ":dove:"
        ],
        "animated": true
      },
      {
        "base": [
          129444
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dodo:"
        ],
        "animated": false
      },
      {
        "base": [
          129442
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":swan:"
        ],
        "animated": false
      },
      {
        "base": [
          129414
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":duck:"
        ],
        "animated": false
      },
      {
        "base": [
          129727
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":goose:"
        ],
        "animated": true
      },
      {
        "base": [
          129449
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flamingo:"
        ],
        "animated": false
      },
      {
        "base": [
          129434
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":peacock:"
        ],
        "animated": true
      },
      {
        "base": [
          129411
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":turkey:"
        ],
        "animated": false
      },
      {
        "base": [
          128039
        ],
        "alternates": [],
        "emoticons": [
          "<(\")"
        ],
        "shortcodes": [
          ":penguin:"
        ],
        "animated": false
      },
      {
        "base": [
          129453
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":seal:"
        ],
        "animated": true
      },
      {
        "base": [
          129416
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shark:"
        ],
        "animated": false
      },
      {
        "base": [
          128044
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dolphin:"
        ],
        "animated": true
      },
      {
        "base": [
          128011
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":humpback-whale:"
        ],
        "animated": false
      },
      {
        "base": [
          128051
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":whale:"
        ],
        "animated": true
      },
      {
        "base": [
          128031
        ],
        "alternates": [],
        "emoticons": [
          "<><"
        ],
        "shortcodes": [
          ":fish:"
        ],
        "animated": false
      },
      {
        "base": [
          128032
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tropical-fish:"
        ],
        "animated": false
      },
      {
        "base": [
          128033
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blowfish:"
        ],
        "animated": true
      },
      {
        "base": [
          129424
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shrimp:"
        ],
        "animated": false
      },
      {
        "base": [
          129438
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lobster:"
        ],
        "animated": false
      },
      {
        "base": [
          129408
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crab:"
        ],
        "animated": true
      },
      {
        "base": [
          129425
        ],
        "alternates": [],
        "emoticons": [
          "\u304f\u30b3:\u5f61"
        ],
        "shortcodes": [
          ":squid:"
        ],
        "animated": false
      },
      {
        "base": [
          128025
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":octopus:"
        ],
        "animated": true
      },
      {
        "base": [
          129724
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":jellyfish:"
        ],
        "animated": true
      },
      {
        "base": [
          129450
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":oyster:"
        ],
        "animated": false
      },
      {
        "base": [
          129720
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":coral:"
        ],
        "animated": false
      },
      {
        "base": [
          129410
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":scorpion:"
        ],
        "animated": false
      },
      {
        "base": [
          128375,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spider:"
        ],
        "animated": false
      },
      {
        "base": [
          128376,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spider-web:"
        ],
        "animated": false
      },
      {
        "base": [
          128026
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shell:"
        ],
        "animated": false
      },
      {
        "base": [
          128012
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":snail:"
        ],
        "animated": true
      },
      {
        "base": [
          128028
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ant:"
        ],
        "animated": true
      },
      {
        "base": [
          129431
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cricket:"
        ],
        "animated": false
      },
      {
        "base": [
          129714
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beetle:"
        ],
        "animated": false
      },
      {
        "base": [
          129439
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mosquito:"
        ],
        "animated": true
      },
      {
        "base": [
          129715
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cockroach:"
        ],
        "animated": false
      },
      {
        "base": [
          129712
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fly:"
        ],
        "animated": false
      },
      {
        "base": [
          128029
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bee:"
        ],
        "animated": true
      },
      {
        "base": [
          128030
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lady-bug:"
        ],
        "animated": false
      },
      {
        "base": [
          129419
        ],
        "alternates": [],
        "emoticons": [
          "\u03b5\u0457\u0437"
        ],
        "shortcodes": [
          ":butterfly:"
        ],
        "animated": true
      },
      {
        "base": [
          128027
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bug:"
        ],
        "animated": false
      },
      {
        "base": [
          129713
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":worm:"
        ],
        "animated": false
      },
      {
        "base": [
          129440
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":microbe:"
        ],
        "animated": false
      },
      {
        "base": [
          128062
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":paw prints:"
        ],
        "animated": true
      }
    ]
  },
  {
    "group": "Food and drink",
    "emoji": [
      {
        "base": [
          127827
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":strawberry:"
        ],
        "animated": false
      },
      {
        "base": [
          127826
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cherries:"
        ],
        "animated": false
      },
      {
        "base": [
          127822
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":red-apple:"
        ],
        "animated": false
      },
      {
        "base": [
          127817
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":watermelon:"
        ],
        "animated": false
      },
      {
        "base": [
          127825
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":peach:"
        ],
        "animated": false
      },
      {
        "base": [
          127818
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tangerine:",
          ":orange:",
          ":mandarin:"
        ],
        "animated": false
      },
      {
        "base": [
          129389
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mango:"
        ],
        "animated": false
      },
      {
        "base": [
          127821
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pineapple:"
        ],
        "animated": false
      },
      {
        "base": [
          127820
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":banana:"
        ],
        "animated": false
      },
      {
        "base": [
          127819
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lemon:"
        ],
        "animated": false
      },
      {
        "base": [
          127816
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":melon:"
        ],
        "animated": false
      },
      {
        "base": [
          127823
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-apple:"
        ],
        "animated": false
      },
      {
        "base": [
          127824
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pear:"
        ],
        "animated": false
      },
      {
        "base": [
          129373
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kiwi-fruit:"
        ],
        "animated": false
      },
      {
        "base": [
          129746
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":olive:"
        ],
        "animated": false
      },
      {
        "base": [
          129744
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blueberries:"
        ],
        "animated": false
      },
      {
        "base": [
          127815
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":grapes:"
        ],
        "animated": false
      },
      {
        "base": [
          129381
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":coconut:"
        ],
        "animated": false
      },
      {
        "base": [
          127813
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tomato:"
        ],
        "animated": true
      },
      {
        "base": [
          127798,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hot-pepper:"
        ],
        "animated": false
      },
      {
        "base": [
          129754
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ginger:"
        ],
        "animated": false
      },
      {
        "base": [
          129365
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":carrot:"
        ],
        "animated": false
      },
      {
        "base": [
          127840
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":roasted-sweet-potato:"
        ],
        "animated": false
      },
      {
        "base": [
          129477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":onion:"
        ],
        "animated": false
      },
      {
        "base": [
          127805
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ear-of-corn:"
        ],
        "animated": false
      },
      {
        "base": [
          129382
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":broccoli:"
        ],
        "animated": false
      },
      {
        "base": [
          129362
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cucumber:"
        ],
        "animated": false
      },
      {
        "base": [
          129388
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":leafy-green:"
        ],
        "animated": false
      },
      {
        "base": [
          129755
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pea-pod:"
        ],
        "animated": false
      },
      {
        "base": [
          129745
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bell-pepper:"
        ],
        "animated": false
      },
      {
        "base": [
          129361
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":avocado:"
        ],
        "animated": false
      },
      {
        "base": [
          127814
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eggplant:"
        ],
        "animated": false
      },
      {
        "base": [
          129476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":garlic:"
        ],
        "animated": false
      },
      {
        "base": [
          129364
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":potato:"
        ],
        "animated": false
      },
      {
        "base": [
          129752
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beans:"
        ],
        "animated": false
      },
      {
        "base": [
          127792
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chestnut:"
        ],
        "animated": false
      },
      {
        "base": [
          129372
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":peanuts:"
        ],
        "animated": false
      },
      {
        "base": [
          127838
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bread:"
        ],
        "animated": false
      },
      {
        "base": [
          129747
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flatbread:"
        ],
        "animated": false
      },
      {
        "base": [
          129360
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":croissant:"
        ],
        "animated": false
      },
      {
        "base": [
          129366
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":baguette-bread:"
        ],
        "animated": false
      },
      {
        "base": [
          129391
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bagel:"
        ],
        "animated": false
      },
      {
        "base": [
          129479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":waffle:"
        ],
        "animated": false
      },
      {
        "base": [
          129374
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pancakes:"
        ],
        "animated": false
      },
      {
        "base": [
          127859
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cooking:"
        ],
        "animated": false
      },
      {
        "base": [
          129370
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":egg:"
        ],
        "animated": false
      },
      {
        "base": [
          129472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cheese-wedge:"
        ],
        "animated": false
      },
      {
        "base": [
          129363
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bacon:"
        ],
        "animated": false
      },
      {
        "base": [
          129385
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cut-of-meat:"
        ],
        "animated": false
      },
      {
        "base": [
          127831
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":poultry-leg:"
        ],
        "animated": false
      },
      {
        "base": [
          127830
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":meat-on-bone:"
        ],
        "animated": false
      },
      {
        "base": [
          127828
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hamburger:"
        ],
        "animated": false
      },
      {
        "base": [
          127789
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hot-dog:"
        ],
        "animated": false
      },
      {
        "base": [
          129386
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sandwich:"
        ],
        "animated": false
      },
      {
        "base": [
          129384
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pretzel:"
        ],
        "animated": false
      },
      {
        "base": [
          127839
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":french-fries:"
        ],
        "animated": false
      },
      {
        "base": [
          127829
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pizza:"
        ],
        "animated": false
      },
      {
        "base": [
          129748
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tamale:"
        ],
        "animated": false
      },
      {
        "base": [
          127790
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":taco:"
        ],
        "animated": false
      },
      {
        "base": [
          127791
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":burrito:"
        ],
        "animated": false
      },
      {
        "base": [
          129369
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stuffed-flatbread:"
        ],
        "animated": false
      },
      {
        "base": [
          129478
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":falafel:"
        ],
        "animated": false
      },
      {
        "base": [
          129368
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shallow-pan-of-food:"
        ],
        "animated": false
      },
      {
        "base": [
          127837
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spaghetti:"
        ],
        "animated": false
      },
      {
        "base": [
          129387
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":canned-food:"
        ],
        "animated": false
      },
      {
        "base": [
          129749
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fondue:"
        ],
        "animated": false
      },
      {
        "base": [
          129379
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bowl-with-spoon:"
        ],
        "animated": false
      },
      {
        "base": [
          129367
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-salad:"
        ],
        "animated": false
      },
      {
        "base": [
          127858
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pot-of-food:"
        ],
        "animated": false
      },
      {
        "base": [
          127835
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":curry-rice:"
        ],
        "animated": false
      },
      {
        "base": [
          127836
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":steaming-bowl:"
        ],
        "animated": false
      },
      {
        "base": [
          129450
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":oyster:"
        ],
        "animated": false
      },
      {
        "base": [
          129438
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lobster:"
        ],
        "animated": false
      },
      {
        "base": [
          127843
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sushi:"
        ],
        "animated": false
      },
      {
        "base": [
          127844
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fried-shrimp:"
        ],
        "animated": false
      },
      {
        "base": [
          129377
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":takeout-box:"
        ],
        "animated": false
      },
      {
        "base": [
          127834
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cooked-rice:"
        ],
        "animated": false
      },
      {
        "base": [
          127857
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bento-box:"
        ],
        "animated": false
      },
      {
        "base": [
          129375
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dumpling:"
        ],
        "animated": false
      },
      {
        "base": [
          127842
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":oden:"
        ],
        "animated": false
      },
      {
        "base": [
          127833
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rice-ball:"
        ],
        "animated": false
      },
      {
        "base": [
          127832
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rice-cracker:"
        ],
        "animated": false
      },
      {
        "base": [
          127845
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fish-cake-with-swirl:"
        ],
        "animated": false
      },
      {
        "base": [
          127841
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dango:"
        ],
        "animated": false
      },
      {
        "base": [
          129376
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fortune-cookie:"
        ],
        "animated": false
      },
      {
        "base": [
          129390
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moon-cake:"
        ],
        "animated": false
      },
      {
        "base": [
          127847
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shaved-ice:"
        ],
        "animated": false
      },
      {
        "base": [
          127848
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ice-cream:"
        ],
        "animated": false
      },
      {
        "base": [
          127846
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":soft-ice-cream:"
        ],
        "animated": false
      },
      {
        "base": [
          129383
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pie:"
        ],
        "animated": false
      },
      {
        "base": [
          127856
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shortcake:"
        ],
        "animated": false
      },
      {
        "base": [
          127854
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":custard:"
        ],
        "animated": false
      },
      {
        "base": [
          127874
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":birthday-cake:"
        ],
        "animated": false
      },
      {
        "base": [
          129473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cupcake:"
        ],
        "animated": false
      },
      {
        "base": [
          127853
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lollipop:"
        ],
        "animated": false
      },
      {
        "base": [
          127852
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":candy:"
        ],
        "animated": false
      },
      {
        "base": [
          127851
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chocolate-bar:"
        ],
        "animated": false
      },
      {
        "base": [
          127849
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":doughnut:"
        ],
        "animated": false
      },
      {
        "base": [
          127850
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cookie:"
        ],
        "animated": false
      },
      {
        "base": [
          127855
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":honey-pot:"
        ],
        "animated": false
      },
      {
        "base": [
          129474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":salt:"
        ],
        "animated": false
      },
      {
        "base": [
          129480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":butter:"
        ],
        "animated": false
      },
      {
        "base": [
          127871
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":popcorn:"
        ],
        "animated": true
      },
      {
        "base": [
          129482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ice-cube:"
        ],
        "animated": false
      },
      {
        "base": [
          129753
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":jar:"
        ],
        "animated": false
      },
      {
        "base": [
          129380
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cup-with-straw:"
        ],
        "animated": false
      },
      {
        "base": [
          129483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bubble-tea:",
          ":milk-tea:"
        ],
        "animated": false
      },
      {
        "base": [
          129475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beverage-box:"
        ],
        "animated": false
      },
      {
        "base": [
          129371
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":glass-of-milk:"
        ],
        "animated": false
      },
      {
        "base": [
          127868
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":baby-bottle:"
        ],
        "animated": false
      },
      {
        "base": [
          127861
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":teacup-without-handle:"
        ],
        "animated": false
      },
      {
        "base": [
          9749
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hot-beverage:"
        ],
        "animated": true
      },
      {
        "base": [
          129750
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":teapot:"
        ],
        "animated": false
      },
      {
        "base": [
          129481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mate:"
        ],
        "animated": false
      },
      {
        "base": [
          127866
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":beer-mug:"
        ],
        "animated": false
      },
      {
        "base": [
          127867
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clinking-beer-mugs:"
        ],
        "animated": true
      },
      {
        "base": [
          129346
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clinking-glasses:"
        ],
        "animated": true
      },
      {
        "base": [
          127870
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bottle-with-popping-cork:"
        ],
        "animated": true
      },
      {
        "base": [
          127863
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wine-glass:"
        ],
        "animated": true
      },
      {
        "base": [
          129347
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tumbler-glass:"
        ],
        "animated": false
      },
      {
        "base": [
          129751
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pour:"
        ],
        "animated": false
      },
      {
        "base": [
          127864
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cocktail-glass:"
        ],
        "animated": false
      },
      {
        "base": [
          127865
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tropical-drink:"
        ],
        "animated": true
      },
      {
        "base": [
          127862
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sake:"
        ],
        "animated": false
      },
      {
        "base": [
          129378
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chopsticks:"
        ],
        "animated": false
      },
      {
        "base": [
          127860
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fork-and-knife:"
        ],
        "animated": false
      },
      {
        "base": [
          129348
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spoon:"
        ],
        "animated": false
      },
      {
        "base": [
          128298
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kitchen-knife:"
        ],
        "animated": false
      },
      {
        "base": [
          127869,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fork-and-knife-with-plate:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "Travel and places",
    "emoji": [
      {
        "base": [
          128721
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stop-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          128679
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":construction:"
        ],
        "animated": false
      },
      {
        "base": [
          128680
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":police-car-light:"
        ],
        "animated": true
      },
      {
        "base": [
          9981
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fuel-pump:"
        ],
        "animated": false
      },
      {
        "base": [
          128738,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":oil-drum:"
        ],
        "animated": false
      },
      {
        "base": [
          129517
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":compass:"
        ],
        "animated": false
      },
      {
        "base": [
          128734
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wheel:"
        ],
        "animated": false
      },
      {
        "base": [
          128735
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ring-buoy:"
        ],
        "animated": false
      },
      {
        "base": [
          9875
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":anchor:"
        ],
        "animated": false
      },
      {
        "base": [
          128655
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bus-stop:"
        ],
        "animated": false
      },
      {
        "base": [
          128647
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":metro:"
        ],
        "animated": false
      },
      {
        "base": [
          128677
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":horizontal-traffic-light:"
        ],
        "animated": false
      },
      {
        "base": [
          128678
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":vertical-traffic-light:"
        ],
        "animated": false
      },
      {
        "base": [
          128756
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kick-scooter:"
        ],
        "animated": false
      },
      {
        "base": [
          129469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":manual-wheelchair:"
        ],
        "animated": false
      },
      {
        "base": [
          129468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":motorized-wheelchair:"
        ],
        "animated": false
      },
      {
        "base": [
          129660
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crutch:"
        ],
        "animated": false
      },
      {
        "base": [
          128690
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bicycle:"
        ],
        "animated": false
      },
      {
        "base": [
          128757
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":motor-scooter:"
        ],
        "animated": false
      },
      {
        "base": [
          127949,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":motorcycle:"
        ],
        "animated": false
      },
      {
        "base": [
          128665
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sport-utility-vehicle:"
        ],
        "animated": false
      },
      {
        "base": [
          128663
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":automobile:"
        ],
        "animated": false
      },
      {
        "base": [
          128763
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pickup-truck:"
        ],
        "animated": false
      },
      {
        "base": [
          128656
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":minibus:"
        ],
        "animated": false
      },
      {
        "base": [
          128666
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":delivery-truck:"
        ],
        "animated": false
      },
      {
        "base": [
          128667
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":articulated-lorry:"
        ],
        "animated": false
      },
      {
        "base": [
          128668
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tractor:"
        ],
        "animated": false
      },
      {
        "base": [
          127950,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":racing-car:"
        ],
        "animated": false
      },
      {
        "base": [
          128658
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fire-engine:"
        ],
        "animated": false
      },
      {
        "base": [
          128657
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ambulance:"
        ],
        "animated": false
      },
      {
        "base": [
          128659
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":police-car:"
        ],
        "animated": false
      },
      {
        "base": [
          128661
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":taxi:"
        ],
        "animated": false
      },
      {
        "base": [
          128762
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":auto-rickshaw:"
        ],
        "animated": false
      },
      {
        "base": [
          128652
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bus:"
        ],
        "animated": false
      },
      {
        "base": [
          128648
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":light-rail:"
        ],
        "animated": false
      },
      {
        "base": [
          128669
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":monorail:"
        ],
        "animated": false
      },
      {
        "base": [
          128645
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bullet-train:"
        ],
        "animated": false
      },
      {
        "base": [
          128644
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":high-speed-train:"
        ],
        "animated": false
      },
      {
        "base": [
          128642
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":locomotive:"
        ],
        "animated": false
      },
      {
        "base": [
          128643
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":railway-car:"
        ],
        "animated": false
      },
      {
        "base": [
          128651
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tram-car:"
        ],
        "animated": false
      },
      {
        "base": [
          128654
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trolleybus:"
        ],
        "animated": false
      },
      {
        "base": [
          128670
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mountain-railway:"
        ],
        "animated": false
      },
      {
        "base": [
          128650
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tram:"
        ],
        "animated": false
      },
      {
        "base": [
          128649
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":station:"
        ],
        "animated": false
      },
      {
        "base": [
          128653
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bus-front:"
        ],
        "animated": false
      },
      {
        "base": [
          128660
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":police-car-front:"
        ],
        "animated": false
      },
      {
        "base": [
          128664
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":automobile-front:"
        ],
        "animated": false
      },
      {
        "base": [
          128662
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":taxi-front:"
        ],
        "animated": false
      },
      {
        "base": [
          128646
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":train:"
        ],
        "animated": false
      },
      {
        "base": [
          128674
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ship:"
        ],
        "animated": false
      },
      {
        "base": [
          128755,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":passenger-ship:"
        ],
        "animated": false
      },
      {
        "base": [
          128741,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":motor-boat:"
        ],
        "animated": false
      },
      {
        "base": [
          128676
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":speedboat:"
        ],
        "animated": false
      },
      {
        "base": [
          9972,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ferry:"
        ],
        "animated": false
      },
      {
        "base": [
          9973
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sailboat:"
        ],
        "animated": false
      },
      {
        "base": [
          128758
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":canoe:"
        ],
        "animated": false
      },
      {
        "base": [
          128671
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":suspension-railway:"
        ],
        "animated": false
      },
      {
        "base": [
          128672
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mountain-cableway:"
        ],
        "animated": false
      },
      {
        "base": [
          128673
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":aerial-tramway:"
        ],
        "animated": false
      },
      {
        "base": [
          128641
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":helicopter:"
        ],
        "animated": false
      },
      {
        "base": [
          128760
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flying-saucer:"
        ],
        "animated": true
      },
      {
        "base": [
          128640
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rocket:"
        ],
        "animated": true
      },
      {
        "base": [
          9992,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":airplane:"
        ],
        "animated": false
      },
      {
        "base": [
          128747
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":airplane-departure:"
        ],
        "animated": true
      },
      {
        "base": [
          128748
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":airplane-arrival:"
        ],
        "animated": true
      },
      {
        "base": [
          128745,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":small-airplane:"
        ],
        "animated": false
      },
      {
        "base": [
          128733
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":slide:",
          ":playground:"
        ],
        "animated": false
      },
      {
        "base": [
          127906
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":roller-coaster:"
        ],
        "animated": true
      },
      {
        "base": [
          127905
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ferris-wheel:"
        ],
        "animated": false
      },
      {
        "base": [
          127904
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":carousel-horse:"
        ],
        "animated": false
      },
      {
        "base": [
          127914
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":circus-tent:"
        ],
        "animated": false
      },
      {
        "base": [
          128508
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tokyo-tower:"
        ],
        "animated": false
      },
      {
        "base": [
          128509
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":statue-of-Liberty:"
        ],
        "animated": false
      },
      {
        "base": [
          128511
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moai:"
        ],
        "animated": false
      },
      {
        "base": [
          128507
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mount-fuji:"
        ],
        "animated": false
      },
      {
        "base": [
          127963,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":classical-building:"
        ],
        "animated": false
      },
      {
        "base": [
          128136
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":barber-pole:"
        ],
        "animated": false
      },
      {
        "base": [
          9970
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fountain:"
        ],
        "animated": false
      },
      {
        "base": [
          9961,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shinto-shrine:"
        ],
        "animated": false
      },
      {
        "base": [
          128333
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":synagogue:"
        ],
        "animated": false
      },
      {
        "base": [
          128332
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mosque:"
        ],
        "animated": false
      },
      {
        "base": [
          128331
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kaaba:"
        ],
        "animated": false
      },
      {
        "base": [
          128725
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hindu-temple:"
        ],
        "animated": false
      },
      {
        "base": [
          9962
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":church:"
        ],
        "animated": false
      },
      {
        "base": [
          128146
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wedding:"
        ],
        "animated": false
      },
      {
        "base": [
          127977
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":love-hotel:"
        ],
        "animated": false
      },
      {
        "base": [
          127983
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Japanese-castle:"
        ],
        "animated": false
      },
      {
        "base": [
          127984
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":castle:"
        ],
        "animated": false
      },
      {
        "base": [
          127959,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":construction-building:"
        ],
        "animated": false
      },
      {
        "base": [
          127970
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":office-building:"
        ],
        "animated": false
      },
      {
        "base": [
          127981
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":factory:"
        ],
        "animated": false
      },
      {
        "base": [
          127980
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":department-store:"
        ],
        "animated": false
      },
      {
        "base": [
          127978
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":convenience-store:"
        ],
        "animated": false
      },
      {
        "base": [
          127967,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stadium:"
        ],
        "animated": false
      },
      {
        "base": [
          127974
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bank:"
        ],
        "animated": false
      },
      {
        "base": [
          127979
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":school:"
        ],
        "animated": false
      },
      {
        "base": [
          127976
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hotel:"
        ],
        "animated": false
      },
      {
        "base": [
          127971
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Japanese-post-office:"
        ],
        "animated": false
      },
      {
        "base": [
          127972
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":post-office:"
        ],
        "animated": false
      },
      {
        "base": [
          127973
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hospital:"
        ],
        "animated": false
      },
      {
        "base": [
          127962,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":derelict-house:"
        ],
        "animated": false
      },
      {
        "base": [
          127968
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":house:"
        ],
        "animated": false
      },
      {
        "base": [
          127969
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":house-with-garden:"
        ],
        "animated": false
      },
      {
        "base": [
          127960,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":houses:"
        ],
        "animated": false
      },
      {
        "base": [
          128726
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hut:"
        ],
        "animated": false
      },
      {
        "base": [
          9978
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tent:"
        ],
        "animated": false
      },
      {
        "base": [
          127957,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":camping:"
        ],
        "animated": false
      },
      {
        "base": [
          9969,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":umbrella-on-ground:"
        ],
        "animated": false
      },
      {
        "base": [
          127961,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cityscape:"
        ],
        "animated": false
      },
      {
        "base": [
          127750
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunset-cityscape:"
        ],
        "animated": false
      },
      {
        "base": [
          127751
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunset:"
        ],
        "animated": false
      },
      {
        "base": [
          127747
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":night-with-stars:"
        ],
        "animated": false
      },
      {
        "base": [
          127753
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bridge-at-night:"
        ],
        "animated": false
      },
      {
        "base": [
          127745
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":foggy:"
        ],
        "animated": false
      },
      {
        "base": [
          128740,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":railway-track:"
        ],
        "animated": false
      },
      {
        "base": [
          128739,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":motorway:"
        ],
        "animated": false
      },
      {
        "base": [
          128510
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":map-of-Japan:"
        ],
        "animated": false
      },
      {
        "base": [
          128506,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":world-map:"
        ],
        "animated": false
      },
      {
        "base": [
          127760
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":globe-with-meridians:"
        ],
        "animated": false
      },
      {
        "base": [
          128186
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":seat:"
        ],
        "animated": false
      },
      {
        "base": [
          129523
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":luggage:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "Activities and events",
    "emoji": [
      {
        "base": [
          127881
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":party-popper:"
        ],
        "animated": true
      },
      {
        "base": [
          127882
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":confetti-ball:"
        ],
        "animated": true
      },
      {
        "base": [
          127880
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":balloon:"
        ],
        "animated": true
      },
      {
        "base": [
          127874
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":birthday-cake:"
        ],
        "animated": true
      },
      {
        "base": [
          127872
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ribbon:"
        ],
        "animated": false
      },
      {
        "base": [
          127873
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wrapped-gift:"
        ],
        "animated": false
      },
      {
        "base": [
          127879
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sparkler:"
        ],
        "animated": false
      },
      {
        "base": [
          127878
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fireworks:"
        ],
        "animated": true
      },
      {
        "base": [
          129512
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":firecracker:"
        ],
        "animated": false
      },
      {
        "base": [
          129511
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":red-envelope:"
        ],
        "animated": false
      },
      {
        "base": [
          129684
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":diya-lamp:"
        ],
        "animated": false
      },
      {
        "base": [
          129669
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pi\u00f1ata:"
        ],
        "animated": false
      },
      {
        "base": [
          129705
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mirror-ball:",
          ":disco-ball:"
        ],
        "animated": true
      },
      {
        "base": [
          127888
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wind-chime:"
        ],
        "animated": false
      },
      {
        "base": [
          127887
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":carp-streamer:"
        ],
        "animated": false
      },
      {
        "base": [
          127886
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Japanese-dolls:"
        ],
        "animated": false
      },
      {
        "base": [
          127889
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":moon-viewing-ceremony:"
        ],
        "animated": false
      },
      {
        "base": [
          127885
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pine-decoration:"
        ],
        "animated": false
      },
      {
        "base": [
          127883
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tanabata-tree:"
        ],
        "animated": false
      },
      {
        "base": [
          127876
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Christmas-tree:"
        ],
        "animated": false
      },
      {
        "base": [
          127875
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":jack-o-lantern:"
        ],
        "animated": false
      },
      {
        "base": [
          127895,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":reminder-ribbon:"
        ],
        "animated": false
      },
      {
        "base": [
          129351
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gold-medal:",
          ":1st-place-medal:"
        ],
        "animated": false
      },
      {
        "base": [
          129352
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":silver-medal:",
          ":2nd-place-medal:"
        ],
        "animated": false
      },
      {
        "base": [
          129353
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bronze-medal:",
          ":3rd-place-medal:"
        ],
        "animated": false
      },
      {
        "base": [
          127941
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":medal:"
        ],
        "animated": false
      },
      {
        "base": [
          127894,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":military-medal:"
        ],
        "animated": false
      },
      {
        "base": [
          127942
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trophy:"
        ],
        "animated": false
      },
      {
        "base": [
          128226
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":loudspeaker:"
        ],
        "animated": false
      },
      {
        "base": [
          9917
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":soccer-ball:"
        ],
        "animated": true
      },
      {
        "base": [
          9918
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":baseball:"
        ],
        "animated": false
      },
      {
        "base": [
          129358
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":softball:"
        ],
        "animated": false
      },
      {
        "base": [
          127936
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":basketball:"
        ],
        "animated": false
      },
      {
        "base": [
          127952
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":volleyball:"
        ],
        "animated": false
      },
      {
        "base": [
          127944
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":american-football:"
        ],
        "animated": false
      },
      {
        "base": [
          127945
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rugby-football:"
        ],
        "animated": false
      },
      {
        "base": [
          129349
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":goal-net:"
        ],
        "animated": false
      },
      {
        "base": [
          127934
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tennis:"
        ],
        "animated": false
      },
      {
        "base": [
          127992
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":badminton:"
        ],
        "animated": false
      },
      {
        "base": [
          129357
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lacrosse:"
        ],
        "animated": false
      },
      {
        "base": [
          127951
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cricket-game:"
        ],
        "animated": false
      },
      {
        "base": [
          127953
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":field-hockey:"
        ],
        "animated": false
      },
      {
        "base": [
          127954
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ice-hockey:"
        ],
        "animated": false
      },
      {
        "base": [
          129356
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":curling-stone:"
        ],
        "animated": false
      },
      {
        "base": [
          128759
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sled:"
        ],
        "animated": false
      },
      {
        "base": [
          127935
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":skis:"
        ],
        "animated": false
      },
      {
        "base": [
          9976,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ice-skate:"
        ],
        "animated": false
      },
      {
        "base": [
          128764
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":roller-skates:"
        ],
        "animated": false
      },
      {
        "base": [
          129648
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ballet-shoes:"
        ],
        "animated": false
      },
      {
        "base": [
          128761
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":skateboard:"
        ],
        "animated": false
      },
      {
        "base": [
          9971
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flag-in-hole:"
        ],
        "animated": false
      },
      {
        "base": [
          127919
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":direct-hit:",
          ":target:"
        ],
        "animated": true
      },
      {
        "base": [
          127993
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bow-and-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          129359
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flying-disc:"
        ],
        "animated": false
      },
      {
        "base": [
          129667
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":boomerang:"
        ],
        "animated": false
      },
      {
        "base": [
          129665
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kite:"
        ],
        "animated": false
      },
      {
        "base": [
          127907
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fishing-pole:"
        ],
        "animated": false
      },
      {
        "base": [
          129343
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":diving-mask:"
        ],
        "animated": false
      },
      {
        "base": [
          129649
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":one-piece-swimsuit:"
        ],
        "animated": false
      },
      {
        "base": [
          127933
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":running-shirt:"
        ],
        "animated": false
      },
      {
        "base": [
          129355
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":martial-arts-uniform:"
        ],
        "animated": false
      },
      {
        "base": [
          129354
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":boxing-glove:"
        ],
        "animated": false
      },
      {
        "base": [
          127921
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":8-ball:"
        ],
        "animated": false
      },
      {
        "base": [
          127955
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ping-pong:"
        ],
        "animated": false
      },
      {
        "base": [
          127923
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bowling:"
        ],
        "animated": false
      },
      {
        "base": [
          9823,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chess-pawn:"
        ],
        "animated": false
      },
      {
        "base": [
          129664
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yo-yo:"
        ],
        "animated": false
      },
      {
        "base": [
          129513
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":jigsaw:"
        ],
        "animated": false
      },
      {
        "base": [
          127918
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":video-game:"
        ],
        "animated": false
      },
      {
        "base": [
          128377,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":joystick:"
        ],
        "animated": false
      },
      {
        "base": [
          128126
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":alien-monster:"
        ],
        "animated": false
      },
      {
        "base": [
          128299
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pistol:"
        ],
        "animated": false
      },
      {
        "base": [
          127922
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":die:"
        ],
        "animated": false
      },
      {
        "base": [
          127920
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":slot-machine:"
        ],
        "animated": false
      },
      {
        "base": [
          127924
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flower-playing-cards:"
        ],
        "animated": false
      },
      {
        "base": [
          126980
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mahjong-red-dragon:"
        ],
        "animated": false
      },
      {
        "base": [
          127183
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":joker:"
        ],
        "animated": false
      },
      {
        "base": [
          129668
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wand:"
        ],
        "animated": false
      },
      {
        "base": [
          127913
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":game-die:"
        ],
        "animated": false
      },
      {
        "base": [
          128247
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":camera:"
        ],
        "animated": false
      },
      {
        "base": [
          128248
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":camera-flash:"
        ],
        "animated": false
      },
      {
        "base": [
          128444,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":framed-picture:"
        ],
        "animated": false
      },
      {
        "base": [
          127912
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":artist-palette:"
        ],
        "animated": false
      },
      {
        "base": [
          128396,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":paintbrush:"
        ],
        "animated": false
      },
      {
        "base": [
          128397,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crayon:"
        ],
        "animated": false
      },
      {
        "base": [
          129697
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":needle:"
        ],
        "animated": false
      },
      {
        "base": [
          129525
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":thread:"
        ],
        "animated": false
      },
      {
        "base": [
          129526
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yarn:"
        ],
        "animated": false
      },
      {
        "base": [
          127929
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":piano:",
          ":musical-keyboard:"
        ],
        "animated": false
      },
      {
        "base": [
          127927
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":saxophone:"
        ],
        "animated": false
      },
      {
        "base": [
          127930
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trumpet:"
        ],
        "animated": false
      },
      {
        "base": [
          127928
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":guitar:"
        ],
        "animated": false
      },
      {
        "base": [
          129685
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":banjo:"
        ],
        "animated": false
      },
      {
        "base": [
          127931
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":violin:"
        ],
        "animated": true
      },
      {
        "base": [
          129688
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":long-drum:"
        ],
        "animated": false
      },
      {
        "base": [
          129345
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":drum:"
        ],
        "animated": true
      },
      {
        "base": [
          129671
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":maracas:"
        ],
        "animated": true
      },
      {
        "base": [
          129672
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flute:"
        ],
        "animated": false
      },
      {
        "base": [
          129687
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":accordion:"
        ],
        "animated": false
      },
      {
        "base": [
          127908
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":microphone:"
        ],
        "animated": false
      },
      {
        "base": [
          127911
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":headphone:"
        ],
        "animated": false
      },
      {
        "base": [
          127898,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":level-slider:"
        ],
        "animated": false
      },
      {
        "base": [
          127899,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":control-knobs:"
        ],
        "animated": false
      },
      {
        "base": [
          127897,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":studio-microphone:"
        ],
        "animated": false
      },
      {
        "base": [
          128251
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":radio:"
        ],
        "animated": false
      },
      {
        "base": [
          128250
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":television:"
        ],
        "animated": false
      },
      {
        "base": [
          128252
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":videocassette:"
        ],
        "animated": false
      },
      {
        "base": [
          128249
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":video-camera:"
        ],
        "animated": false
      },
      {
        "base": [
          128253,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":film-projector:"
        ],
        "animated": false
      },
      {
        "base": [
          127909
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":movie-camera:"
        ],
        "animated": false
      },
      {
        "base": [
          127902,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":film:"
        ],
        "animated": false
      },
      {
        "base": [
          127916
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clapper:"
        ],
        "animated": false
      },
      {
        "base": [
          127917
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":performing-arts:"
        ],
        "animated": false
      },
      {
        "base": [
          127915
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ticket:"
        ],
        "animated": false
      },
      {
        "base": [
          127903,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":admission-tickets:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "Objects",
    "emoji": [
      {
        "base": [
          128241
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mobile-phone:"
        ],
        "animated": false
      },
      {
        "base": [
          9742,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":telephone:"
        ],
        "animated": false
      },
      {
        "base": [
          128222
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":telephone-receiver:"
        ],
        "animated": false
      },
      {
        "base": [
          128223
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pager:"
        ],
        "animated": false
      },
      {
        "base": [
          128224
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fax-machine:"
        ],
        "animated": false
      },
      {
        "base": [
          128268
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":electric-plug:"
        ],
        "animated": false
      },
      {
        "base": [
          128267
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":battery-full:"
        ],
        "animated": true
      },
      {
        "base": [
          129707
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":battery-low:"
        ],
        "animated": true
      },
      {
        "base": [
          128434,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trackball:"
        ],
        "animated": false
      },
      {
        "base": [
          128189
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":computer-disk:"
        ],
        "animated": false
      },
      {
        "base": [
          128190
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":floppy-disk:"
        ],
        "animated": false
      },
      {
        "base": [
          128191
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":optical-disk:"
        ],
        "animated": false
      },
      {
        "base": [
          128192
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dvd:"
        ],
        "animated": false
      },
      {
        "base": [
          128421,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":desktop-computer:"
        ],
        "animated": false
      },
      {
        "base": [
          128187
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":laptop-computer:"
        ],
        "animated": false
      },
      {
        "base": [
          9000,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":keyboard:"
        ],
        "animated": false
      },
      {
        "base": [
          128424,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":printer:"
        ],
        "animated": false
      },
      {
        "base": [
          128433,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":computer-mouse:"
        ],
        "animated": false
      },
      {
        "base": [
          129689
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":coin:"
        ],
        "animated": false
      },
      {
        "base": [
          128184
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":money-with-wings:"
        ],
        "animated": true
      },
      {
        "base": [
          128181
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dollar:"
        ],
        "animated": false
      },
      {
        "base": [
          128180
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yen:"
        ],
        "animated": false
      },
      {
        "base": [
          128182
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":euro:"
        ],
        "animated": false
      },
      {
        "base": [
          128183
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pound:"
        ],
        "animated": false
      },
      {
        "base": [
          128179
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":credit-card:"
        ],
        "animated": false
      },
      {
        "base": [
          128176
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":money-bag:"
        ],
        "animated": false
      },
      {
        "base": [
          129534
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":receipt:"
        ],
        "animated": false
      },
      {
        "base": [
          129518
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":abacus:"
        ],
        "animated": false
      },
      {
        "base": [
          9878,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":balance-scale:"
        ],
        "animated": false
      },
      {
        "base": [
          128722
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shopping-cart:"
        ],
        "animated": false
      },
      {
        "base": [
          128717,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shopping-bags:"
        ],
        "animated": false
      },
      {
        "base": [
          128367,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":candle:"
        ],
        "animated": false
      },
      {
        "base": [
          128161
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":light-bulb:"
        ],
        "animated": true
      },
      {
        "base": [
          128294
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flashlight:"
        ],
        "animated": false
      },
      {
        "base": [
          127982
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":red-paper-lantern:"
        ],
        "animated": false
      },
      {
        "base": [
          129521
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bricks:"
        ],
        "animated": false
      },
      {
        "base": [
          129695
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":window:"
        ],
        "animated": false
      },
      {
        "base": [
          129694
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mirror:"
        ],
        "animated": false
      },
      {
        "base": [
          128682
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":door:"
        ],
        "animated": false
      },
      {
        "base": [
          129681
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chair:"
        ],
        "animated": false
      },
      {
        "base": [
          128719,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bed:"
        ],
        "animated": false
      },
      {
        "base": [
          128715,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":couch-and-lamp:"
        ],
        "animated": false
      },
      {
        "base": [
          128703
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shower:"
        ],
        "animated": false
      },
      {
        "base": [
          128705
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bathtub:"
        ],
        "animated": false
      },
      {
        "base": [
          128701
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":toilet:"
        ],
        "animated": false
      },
      {
        "base": [
          129531
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":roll-of-paper:"
        ],
        "animated": false
      },
      {
        "base": [
          129696
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":plunger:"
        ],
        "animated": false
      },
      {
        "base": [
          129528
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":teddy-bear:"
        ],
        "animated": false
      },
      {
        "base": [
          129670
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nesting-doll:"
        ],
        "animated": false
      },
      {
        "base": [
          129527
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":safety-pin:"
        ],
        "animated": false
      },
      {
        "base": [
          129698
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":knot:"
        ],
        "animated": false
      },
      {
        "base": [
          129529
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":broom:"
        ],
        "animated": false
      },
      {
        "base": [
          129524
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lotion-bottle:"
        ],
        "animated": false
      },
      {
        "base": [
          129533
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sponge:"
        ],
        "animated": false
      },
      {
        "base": [
          129532
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":soap:"
        ],
        "animated": false
      },
      {
        "base": [
          129701
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":toothbrush:"
        ],
        "animated": false
      },
      {
        "base": [
          129682
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":razor:"
        ],
        "animated": false
      },
      {
        "base": [
          129710
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hair-pick:"
        ],
        "animated": false
      },
      {
        "base": [
          129530
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":basket:"
        ],
        "animated": false
      },
      {
        "base": [
          129510
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":socks:"
        ],
        "animated": false
      },
      {
        "base": [
          129508
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gloves:"
        ],
        "animated": false
      },
      {
        "base": [
          129507
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":scarf:"
        ],
        "animated": false
      },
      {
        "base": [
          128086
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":jeans:"
        ],
        "animated": false
      },
      {
        "base": [
          128085
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":t-shirt:"
        ],
        "animated": false
      },
      {
        "base": [
          127933
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":running-shirt:"
        ],
        "animated": false
      },
      {
        "base": [
          128090
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":woman\u2019s-clothes:"
        ],
        "animated": false
      },
      {
        "base": [
          128084
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":necktie:"
        ],
        "animated": false
      },
      {
        "base": [
          128087
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dress:"
        ],
        "animated": false
      },
      {
        "base": [
          128088
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":kimono:"
        ],
        "animated": false
      },
      {
        "base": [
          129403
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sari:"
        ],
        "animated": false
      },
      {
        "base": [
          129649
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":one-piece-swimsuit:"
        ],
        "animated": false
      },
      {
        "base": [
          128089
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bikini:"
        ],
        "animated": false
      },
      {
        "base": [
          129651
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shorts:"
        ],
        "animated": false
      },
      {
        "base": [
          129650
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":swim-brief:"
        ],
        "animated": false
      },
      {
        "base": [
          129509
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":coat:"
        ],
        "animated": false
      },
      {
        "base": [
          129404
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lab-coat:"
        ],
        "animated": false
      },
      {
        "base": [
          129466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":safety-vest:"
        ],
        "animated": false
      },
      {
        "base": [
          9937,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rescue-worker\u2019s-helmet:"
        ],
        "animated": false
      },
      {
        "base": [
          129686
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":military-helmet:"
        ],
        "animated": false
      },
      {
        "base": [
          127891
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":graduation-cap:"
        ],
        "animated": true
      },
      {
        "base": [
          127913
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":top-hat:"
        ],
        "animated": false
      },
      {
        "base": [
          128082
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":woman\u2019s-hat:"
        ],
        "animated": false
      },
      {
        "base": [
          129506
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":billed-cap:"
        ],
        "animated": false
      },
      {
        "base": [
          128081
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crown:"
        ],
        "animated": false
      },
      {
        "base": [
          129709
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fan:"
        ],
        "animated": false
      },
      {
        "base": [
          127890
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":school-backpack:"
        ],
        "animated": false
      },
      {
        "base": [
          128093
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clutch-bag:"
        ],
        "animated": false
      },
      {
        "base": [
          128091
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":purse:"
        ],
        "animated": false
      },
      {
        "base": [
          128092
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":handbag:"
        ],
        "animated": false
      },
      {
        "base": [
          128188
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":briefcase:"
        ],
        "animated": false
      },
      {
        "base": [
          129523
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":luggage:"
        ],
        "animated": false
      },
      {
        "base": [
          9730,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":umbrella:"
        ],
        "animated": true
      },
      {
        "base": [
          127746
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":closed-umbrella:"
        ],
        "animated": false
      },
      {
        "base": [
          128141
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ring:"
        ],
        "animated": false
      },
      {
        "base": [
          128142
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gem-stone:"
        ],
        "animated": true
      },
      {
        "base": [
          128132
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lipstick:"
        ],
        "animated": false
      },
      {
        "base": [
          128096
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":high-heeled-shoe:"
        ],
        "animated": false
      },
      {
        "base": [
          128095
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":running-shoe:"
        ],
        "animated": false
      },
      {
        "base": [
          128094
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":man\u2019s-shoe:"
        ],
        "animated": false
      },
      {
        "base": [
          129407
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flat-shoe:"
        ],
        "animated": false
      },
      {
        "base": [
          129652
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":flip-flop:",
          ":thong-sandal:"
        ],
        "animated": false
      },
      {
        "base": [
          128097
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sandal:"
        ],
        "animated": false
      },
      {
        "base": [
          128098
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":boot:"
        ],
        "animated": false
      },
      {
        "base": [
          129406
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hiking-boot:"
        ],
        "animated": false
      },
      {
        "base": [
          129455
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":probing-cane:"
        ],
        "animated": false
      },
      {
        "base": [
          128374,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sunglasses:"
        ],
        "animated": false
      },
      {
        "base": [
          128083
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":glasses:"
        ],
        "animated": false
      },
      {
        "base": [
          129405
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":goggles:"
        ],
        "animated": false
      },
      {
        "base": [
          9879,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":alembic:"
        ],
        "animated": false
      },
      {
        "base": [
          129515
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":petri-dish:"
        ],
        "animated": false
      },
      {
        "base": [
          129514
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":test-tube:"
        ],
        "animated": false
      },
      {
        "base": [
          127777,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":thermometer:"
        ],
        "animated": false
      },
      {
        "base": [
          128137
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":syringe:"
        ],
        "animated": false
      },
      {
        "base": [
          128138
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pill:"
        ],
        "animated": false
      },
      {
        "base": [
          129657
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":adhesive-bandage:"
        ],
        "animated": false
      },
      {
        "base": [
          129658
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stethoscope:"
        ],
        "animated": false
      },
      {
        "base": [
          129659
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":x-ray:"
        ],
        "animated": false
      },
      {
        "base": [
          129516
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dna:"
        ],
        "animated": false
      },
      {
        "base": [
          128301
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":telescope:"
        ],
        "animated": false
      },
      {
        "base": [
          128300
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":microscope:"
        ],
        "animated": false
      },
      {
        "base": [
          128225
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":satellite-antenna:"
        ],
        "animated": false
      },
      {
        "base": [
          128752,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":satellite:"
        ],
        "animated": false
      },
      {
        "base": [
          129519
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fire-extinguisher:"
        ],
        "animated": false
      },
      {
        "base": [
          129683
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":axe:"
        ],
        "animated": false
      },
      {
        "base": [
          129692
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ladder:"
        ],
        "animated": false
      },
      {
        "base": [
          129699
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bucket:"
        ],
        "animated": false
      },
      {
        "base": [
          129693
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hook:"
        ],
        "animated": false
      },
      {
        "base": [
          129522
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":magnet:"
        ],
        "animated": false
      },
      {
        "base": [
          129520
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":toolbox:"
        ],
        "animated": false
      },
      {
        "base": [
          128476,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clamp:"
        ],
        "animated": false
      },
      {
        "base": [
          128297
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nut-and-bolt:"
        ],
        "animated": false
      },
      {
        "base": [
          129691
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":screwdriver:"
        ],
        "animated": false
      },
      {
        "base": [
          129690
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":saw:"
        ],
        "animated": false
      },
      {
        "base": [
          128295
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wrench:"
        ],
        "animated": false
      },
      {
        "base": [
          128296
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hammer:"
        ],
        "animated": false
      },
      {
        "base": [
          9874,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hammer-and-pick:"
        ],
        "animated": false
      },
      {
        "base": [
          128736,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hammer-and-wrench:"
        ],
        "animated": false
      },
      {
        "base": [
          9935,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pick:"
        ],
        "animated": false
      },
      {
        "base": [
          9881,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gear:"
        ],
        "animated": false
      },
      {
        "base": [
          128279
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":link:"
        ],
        "animated": false
      },
      {
        "base": [
          9939,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chains:"
        ],
        "animated": false
      },
      {
        "base": [
          128206
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":paperclip:"
        ],
        "animated": false
      },
      {
        "base": [
          128391,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":linked-paperclips:"
        ],
        "animated": false
      },
      {
        "base": [
          128207
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":straight-ruler:"
        ],
        "animated": false
      },
      {
        "base": [
          128208
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":triangular-ruler:"
        ],
        "animated": false
      },
      {
        "base": [
          128396,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":paintbrush:"
        ],
        "animated": false
      },
      {
        "base": [
          128397,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crayon:"
        ],
        "animated": false
      },
      {
        "base": [
          128394,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pen:"
        ],
        "animated": false
      },
      {
        "base": [
          128395,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fountain-pen:"
        ],
        "animated": false
      },
      {
        "base": [
          10002,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-nib:"
        ],
        "animated": false
      },
      {
        "base": [
          9999,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pencil:"
        ],
        "animated": false
      },
      {
        "base": [
          128221
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":memo:"
        ],
        "animated": false
      },
      {
        "base": [
          128214
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":open-book:"
        ],
        "animated": false
      },
      {
        "base": [
          128218
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":books:"
        ],
        "animated": false
      },
      {
        "base": [
          128210
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ledger:"
        ],
        "animated": false
      },
      {
        "base": [
          128212
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":notebook-with-decorative-cover:"
        ],
        "animated": false
      },
      {
        "base": [
          128213
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":closed-book:"
        ],
        "animated": false
      },
      {
        "base": [
          128211
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":notebook:"
        ],
        "animated": false
      },
      {
        "base": [
          128215
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-book:"
        ],
        "animated": false
      },
      {
        "base": [
          128216
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-book:"
        ],
        "animated": false
      },
      {
        "base": [
          128217
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orange-book:"
        ],
        "animated": false
      },
      {
        "base": [
          128278
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bookmark:"
        ],
        "animated": false
      },
      {
        "base": [
          128466,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spiral-notepad:"
        ],
        "animated": false
      },
      {
        "base": [
          128196
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":page-facing-up:"
        ],
        "animated": false
      },
      {
        "base": [
          128195
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":page-with-curl:"
        ],
        "animated": false
      },
      {
        "base": [
          128203
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clipboard:"
        ],
        "animated": false
      },
      {
        "base": [
          128209
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bookmark-tabs:"
        ],
        "animated": false
      },
      {
        "base": [
          128194
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":open-file-folder:"
        ],
        "animated": false
      },
      {
        "base": [
          128193
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":file-folder:"
        ],
        "animated": false
      },
      {
        "base": [
          128450,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":card-index-dividers:"
        ],
        "animated": false
      },
      {
        "base": [
          128451,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":card-file-box:"
        ],
        "animated": false
      },
      {
        "base": [
          128452,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":file-cabinet:"
        ],
        "animated": false
      },
      {
        "base": [
          128202
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bar-chart:"
        ],
        "animated": false
      },
      {
        "base": [
          128200
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chart-increasing:"
        ],
        "animated": false
      },
      {
        "base": [
          128201
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chart-decreasing:"
        ],
        "animated": false
      },
      {
        "base": [
          128199
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":card-index:"
        ],
        "animated": false
      },
      {
        "base": [
          129706
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":id:"
        ],
        "animated": false
      },
      {
        "base": [
          128204
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pushpin:"
        ],
        "animated": false
      },
      {
        "base": [
          128205
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":round-pushpin:"
        ],
        "animated": false
      },
      {
        "base": [
          9986,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":scissors:"
        ],
        "animated": false
      },
      {
        "base": [
          128465,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wastebasket:"
        ],
        "animated": false
      },
      {
        "base": [
          128240
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":newspaper:"
        ],
        "animated": false
      },
      {
        "base": [
          128478,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rolled-up-newspaper:"
        ],
        "animated": false
      },
      {
        "base": [
          127991,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":label:"
        ],
        "animated": false
      },
      {
        "base": [
          128230
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":package:"
        ],
        "animated": false
      },
      {
        "base": [
          128235
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":closed-mailbox-with-raised:"
        ],
        "animated": false
      },
      {
        "base": [
          128234
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":closed-mailbox-with-lowered:"
        ],
        "animated": false
      },
      {
        "base": [
          128236
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":open-mailbox-with-raised:"
        ],
        "animated": false
      },
      {
        "base": [
          128237
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":open-mailbox-with-lowered:"
        ],
        "animated": false
      },
      {
        "base": [
          128238
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":postbox:"
        ],
        "animated": false
      },
      {
        "base": [
          9993,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":envelope:"
        ],
        "animated": false
      },
      {
        "base": [
          128231
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":e-mail:"
        ],
        "animated": false
      },
      {
        "base": [
          128233
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":envelope-with-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          128232
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":incoming-envelope:"
        ],
        "animated": false
      },
      {
        "base": [
          128140
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":love-letter:"
        ],
        "animated": false
      },
      {
        "base": [
          128228
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":outbox-tray:"
        ],
        "animated": false
      },
      {
        "base": [
          128229
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":inbox-tray:"
        ],
        "animated": false
      },
      {
        "base": [
          128499,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ballot-box:"
        ],
        "animated": false
      },
      {
        "base": [
          128347
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":twelve-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128359
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":twelve-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128336
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":one-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128348
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":one-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128337
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":two-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128349
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":two-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128338
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":three-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128350
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":three-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128339
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":four-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128351
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":four-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128340
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":five-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128352
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":five-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128341
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":six-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128353
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":six-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128342
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":seven-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128354
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":seven-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128343
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eight-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128355
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eight-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128344
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nine-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128356
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nine-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128345
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ten-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128357
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ten-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          128346
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eleven-o-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          128358
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eleven-thirty:"
        ],
        "animated": false
      },
      {
        "base": [
          9201,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stopwatch:"
        ],
        "animated": false
      },
      {
        "base": [
          8986
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":watch:"
        ],
        "animated": false
      },
      {
        "base": [
          128368,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mantelpiece-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          8987
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hourglass-done:"
        ],
        "animated": false
      },
      {
        "base": [
          9203
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hourglass-not-done:"
        ],
        "animated": false
      },
      {
        "base": [
          9202,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":timer-clock:"
        ],
        "animated": false
      },
      {
        "base": [
          9200
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":alarm-clock:"
        ],
        "animated": true
      },
      {
        "base": [
          128197
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":calendar:"
        ],
        "animated": false
      },
      {
        "base": [
          128198
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":tear-off-calendar:"
        ],
        "animated": false
      },
      {
        "base": [
          128467,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spiral-calendar:"
        ],
        "animated": false
      },
      {
        "base": [
          129703
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":placard:"
        ],
        "animated": false
      },
      {
        "base": [
          128718,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bellhop-bell:"
        ],
        "animated": true
      },
      {
        "base": [
          128276
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bell:"
        ],
        "animated": true
      },
      {
        "base": [
          128239
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":postal-horn:"
        ],
        "animated": false
      },
      {
        "base": [
          128226
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":loudspeaker:"
        ],
        "animated": false
      },
      {
        "base": [
          128227
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":megaphone:"
        ],
        "animated": false
      },
      {
        "base": [
          128269
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":magnifying-glass-tilted-left:"
        ],
        "animated": false
      },
      {
        "base": [
          128270
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":magnifying-glass-tilted-right:"
        ],
        "animated": false
      },
      {
        "base": [
          128302
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crystal-ball:"
        ],
        "animated": false
      },
      {
        "base": [
          129535
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":evil-eye:",
          ":nazar-amulet:"
        ],
        "animated": false
      },
      {
        "base": [
          129708
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hamsa:"
        ],
        "animated": false
      },
      {
        "base": [
          128255
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":prayer-beads:"
        ],
        "animated": false
      },
      {
        "base": [
          127994
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":amphora:"
        ],
        "animated": false
      },
      {
        "base": [
          9905,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":urn:"
        ],
        "animated": false
      },
      {
        "base": [
          9904,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":coffin:"
        ],
        "animated": false
      },
      {
        "base": [
          129702
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":headstone:"
        ],
        "animated": false
      },
      {
        "base": [
          128684
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cigarette:"
        ],
        "animated": false
      },
      {
        "base": [
          128163
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bomb:"
        ],
        "animated": false
      },
      {
        "base": [
          129700
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mouse-trap:"
        ],
        "animated": false
      },
      {
        "base": [
          128220
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":scroll:"
        ],
        "animated": false
      },
      {
        "base": [
          9876,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crossed-swords:"
        ],
        "animated": false
      },
      {
        "base": [
          128481,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dagger:"
        ],
        "animated": false
      },
      {
        "base": [
          128737,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shield:"
        ],
        "animated": false
      },
      {
        "base": [
          128477,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":old-key:"
        ],
        "animated": false
      },
      {
        "base": [
          128273
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":key:"
        ],
        "animated": false
      },
      {
        "base": [
          128272
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lock-with-key:"
        ],
        "animated": false
      },
      {
        "base": [
          128271
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lock-with-pen:"
        ],
        "animated": false
      },
      {
        "base": [
          128274
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":locked:"
        ],
        "animated": false
      },
      {
        "base": [
          128275
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":unlocked:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "Symbols",
    "emoji": [
      {
        "base": [
          128308
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":red-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128992
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orange-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128993
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yellow-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128994
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128309
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128995
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":purple-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128996
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":brown-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          9899
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          9898
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          128997
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":red-square:"
        ],
        "animated": false
      },
      {
        "base": [
          128999
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orange-square:"
        ],
        "animated": false
      },
      {
        "base": [
          129000
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yellow-square:"
        ],
        "animated": false
      },
      {
        "base": [
          129001
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-square:"
        ],
        "animated": false
      },
      {
        "base": [
          128998
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-square:"
        ],
        "animated": false
      },
      {
        "base": [
          129002
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":purple-square:"
        ],
        "animated": false
      },
      {
        "base": [
          129003
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":brown-square:"
        ],
        "animated": false
      },
      {
        "base": [
          11035
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-square:"
        ],
        "animated": false
      },
      {
        "base": [
          11036
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-square:"
        ],
        "animated": false
      },
      {
        "base": [
          10084,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":red-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129505
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orange-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128155
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yellow-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128154
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":green-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128153
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128156
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":purple-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129294
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":brown-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          128420
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129293
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129655
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pink-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129653
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":light-blue-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          129654
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":gray-heart:"
        ],
        "animated": true
      },
      {
        "base": [
          9829,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":heart:"
        ],
        "animated": false
      },
      {
        "base": [
          9830,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":diamond:"
        ],
        "animated": false
      },
      {
        "base": [
          9827,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":club:"
        ],
        "animated": false
      },
      {
        "base": [
          9824,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":spade:"
        ],
        "animated": false
      },
      {
        "base": [
          9800
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Aries:"
        ],
        "animated": true
      },
      {
        "base": [
          9801
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Taurus:"
        ],
        "animated": true
      },
      {
        "base": [
          9802
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Gemini:"
        ],
        "animated": true
      },
      {
        "base": [
          9803
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cancer:"
        ],
        "animated": true
      },
      {
        "base": [
          9804
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Leo:"
        ],
        "animated": true
      },
      {
        "base": [
          9805
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Virgo:"
        ],
        "animated": true
      },
      {
        "base": [
          9806
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Libra:"
        ],
        "animated": true
      },
      {
        "base": [
          9807
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Scorpio:"
        ],
        "animated": true
      },
      {
        "base": [
          9808
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Sagittarius:"
        ],
        "animated": true
      },
      {
        "base": [
          9809
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Capricorn:"
        ],
        "animated": true
      },
      {
        "base": [
          9810
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Aquarius:"
        ],
        "animated": true
      },
      {
        "base": [
          9811
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Pisces:"
        ],
        "animated": true
      },
      {
        "base": [
          9934
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ophiuchus:"
        ],
        "animated": true
      },
      {
        "base": [
          9792,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":female-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          9794,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":male-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          9895,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trans-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          128173
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":thought-bubble:",
          ":thought-balloon:"
        ],
        "animated": false
      },
      {
        "base": [
          128495,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":anger-bubble:"
        ],
        "animated": false
      },
      {
        "base": [
          128172
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":speech-bubble:"
        ],
        "animated": false
      },
      {
        "base": [
          128488,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":speech-bubble-leftwards:"
        ],
        "animated": false
      },
      {
        "base": [
          10069
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":exclamation-mark-white:"
        ],
        "animated": false
      },
      {
        "base": [
          10071
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":exclamation:",
          ":exclamation-mark:"
        ],
        "animated": false
      },
      {
        "base": [
          10068
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":question-mark-white:"
        ],
        "animated": false
      },
      {
        "base": [
          10067
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":question:",
          ":question-mark:",
          ":?:"
        ],
        "animated": false
      },
      {
        "base": [
          8265,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":exclamation-question-mark:",
          ":!?:"
        ],
        "animated": false
      },
      {
        "base": [
          8252,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":exclamation-double:",
          ":!!:"
        ],
        "animated": true
      },
      {
        "base": [
          11093
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":large-circle:"
        ],
        "animated": false
      },
      {
        "base": [
          10060
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":x:",
          ":cross-mark:"
        ],
        "animated": true
      },
      {
        "base": [
          128683
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":prohibited:"
        ],
        "animated": false
      },
      {
        "base": [
          128691
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-bicycles:"
        ],
        "animated": false
      },
      {
        "base": [
          128685
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-smoking:"
        ],
        "animated": false
      },
      {
        "base": [
          128687
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-littering:"
        ],
        "animated": false
      },
      {
        "base": [
          128689
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":non-potable-water:"
        ],
        "animated": false
      },
      {
        "base": [
          128695
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-pedestrians:"
        ],
        "animated": false
      },
      {
        "base": [
          128245
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-mobile-phones:"
        ],
        "animated": false
      },
      {
        "base": [
          128286
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-under-eighteen:"
        ],
        "animated": false
      },
      {
        "base": [
          128277
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-sound:",
          ":no-bell:"
        ],
        "animated": false
      },
      {
        "base": [
          128263
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mute:"
        ],
        "animated": false
      },
      {
        "base": [
          127344,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":a-button:",
          ":blood-type-a:"
        ],
        "animated": false
      },
      {
        "base": [
          127374
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ab-button:",
          ":blood-type-ab:"
        ],
        "animated": false
      },
      {
        "base": [
          127345,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":b-button:",
          ":blood-type-b:"
        ],
        "animated": false
      },
      {
        "base": [
          127358,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":o-button:",
          ":blood-type-o:"
        ],
        "animated": false
      },
      {
        "base": [
          127377
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cl-button:"
        ],
        "animated": false
      },
      {
        "base": [
          127384
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sos:"
        ],
        "animated": false
      },
      {
        "base": [
          128721
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stop:"
        ],
        "animated": false
      },
      {
        "base": [
          9940
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-entry:"
        ],
        "animated": false
      },
      {
        "base": [
          128219
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":name-badge:"
        ],
        "animated": false
      },
      {
        "base": [
          9832,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":hot-springs:"
        ],
        "animated": false
      },
      {
        "base": [
          128162
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":anger:"
        ],
        "animated": false
      },
      {
        "base": [
          128315
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":triangle-pointed-down:"
        ],
        "animated": false
      },
      {
        "base": [
          128314
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":triangle-pointed-up:"
        ],
        "animated": false
      },
      {
        "base": [
          127568
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bargain:"
        ],
        "animated": false
      },
      {
        "base": [
          12953,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":secret:"
        ],
        "animated": false
      },
      {
        "base": [
          12951,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":congratulations:"
        ],
        "animated": false
      },
      {
        "base": [
          127540
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":passing-grade:"
        ],
        "animated": false
      },
      {
        "base": [
          127541
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":no-vacancy:"
        ],
        "animated": false
      },
      {
        "base": [
          127545
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":discount:"
        ],
        "animated": false
      },
      {
        "base": [
          127538
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":prohibited-button:"
        ],
        "animated": false
      },
      {
        "base": [
          127569
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":accept:"
        ],
        "animated": false
      },
      {
        "base": [
          127542
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":not-free-of-charge:"
        ],
        "animated": false
      },
      {
        "base": [
          127514
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":free-of-charge:"
        ],
        "animated": false
      },
      {
        "base": [
          127544
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":application:"
        ],
        "animated": false
      },
      {
        "base": [
          127546
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":open-for-business:"
        ],
        "animated": false
      },
      {
        "base": [
          127543,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":monthly-amount:"
        ],
        "animated": false
      },
      {
        "base": [
          10036,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eight-pointed-star:"
        ],
        "animated": false
      },
      {
        "base": [
          128310
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":diamond-orange-large:"
        ],
        "animated": false
      },
      {
        "base": [
          128312
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":diamond-orange-small:"
        ],
        "animated": false
      },
      {
        "base": [
          128262
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":bright:",
          ":brightness:"
        ],
        "animated": false
      },
      {
        "base": [
          128261
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dim:",
          ":dimness:"
        ],
        "animated": false
      },
      {
        "base": [
          127386
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":vs:"
        ],
        "animated": false
      },
      {
        "base": [
          127910
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cinema:"
        ],
        "animated": false
      },
      {
        "base": [
          128246
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":signal-strength:"
        ],
        "animated": false
      },
      {
        "base": [
          128257
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":repeat:"
        ],
        "animated": false
      },
      {
        "base": [
          128258
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":repeat-one:"
        ],
        "animated": false
      },
      {
        "base": [
          128256
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":shuffle:",
          ":twisted-rightwards-arrows:"
        ],
        "animated": false
      },
      {
        "base": [
          9654,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":arrow-forward:",
          ":play-button:"
        ],
        "animated": false
      },
      {
        "base": [
          9193
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fast-forward:"
        ],
        "animated": false
      },
      {
        "base": [
          9197,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":next-track:",
          ":play-next:",
          ":next:",
          ":right-pointing-double-triangle-with-vertical-bar:"
        ],
        "animated": false
      },
      {
        "base": [
          9199,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":play-or-pause:",
          ":right-pointing-triangle-with-double-vertical-bar:"
        ],
        "animated": false
      },
      {
        "base": [
          9664,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":reverse:",
          ":leftwards-triangle:",
          ":arrow-backward:"
        ],
        "animated": false
      },
      {
        "base": [
          9194
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rewind:",
          ":leftwards-double-triangles:"
        ],
        "animated": false
      },
      {
        "base": [
          9198,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":previous:",
          ":left-pointing-double-triangle-with-vertical-bar:"
        ],
        "animated": false
      },
      {
        "base": [
          128316
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":upwards:",
          ":arrow-up:",
          ":triangle-up:"
        ],
        "animated": false
      },
      {
        "base": [
          9195
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fast-up:",
          ":double-triangle-up:"
        ],
        "animated": false
      },
      {
        "base": [
          128317
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":downwards:",
          ":arrow-down:",
          ":triangle-down:"
        ],
        "animated": false
      },
      {
        "base": [
          9196
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fast-down:",
          ":double-triangle-down:"
        ],
        "animated": false
      },
      {
        "base": [
          9208,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pause:",
          ":double-vertical-bar:"
        ],
        "animated": false
      },
      {
        "base": [
          9209,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":stop-button:",
          ":square-button:"
        ],
        "animated": false
      },
      {
        "base": [
          9210,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":record:"
        ],
        "animated": false
      },
      {
        "base": [
          9167,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eject:",
          ":triangle-up-with-horizontal-bar:"
        ],
        "animated": false
      },
      {
        "base": [
          128244
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":phone-off:"
        ],
        "animated": false
      },
      {
        "base": [
          128732
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wireless:"
        ],
        "animated": false
      },
      {
        "base": [
          128243
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":vibration:",
          ":vibration-mode:"
        ],
        "animated": false
      },
      {
        "base": [
          128242
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":phone-with-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          128264
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":low-volume:",
          ":speaker-low-volume:"
        ],
        "animated": false
      },
      {
        "base": [
          128265
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":medium-volume:",
          ":speaker-medium-volume:"
        ],
        "animated": false
      },
      {
        "base": [
          128266
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":high-volume:",
          ":speaker-high-volume:"
        ],
        "animated": false
      },
      {
        "base": [
          127932
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":musical-score:",
          ":treble-clef:"
        ],
        "animated": false
      },
      {
        "base": [
          127925
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":musical-note:"
        ],
        "animated": false
      },
      {
        "base": [
          127926
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":musical-notes:"
        ],
        "animated": true
      },
      {
        "base": [
          9762,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":radioactive:"
        ],
        "animated": false
      },
      {
        "base": [
          9763,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":biohazard:"
        ],
        "animated": false
      },
      {
        "base": [
          9888,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":warning:"
        ],
        "animated": false
      },
      {
        "base": [
          128696
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":children-crossing:"
        ],
        "animated": false
      },
      {
        "base": [
          9884,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":fleur-de-lis:"
        ],
        "animated": false
      },
      {
        "base": [
          128305
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trident-emblem:"
        ],
        "animated": false
      },
      {
        "base": [
          12349,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":part-alternation-mark:"
        ],
        "animated": false
      },
      {
        "base": [
          128304
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Japanese-symbol-for-beginner:",
          ":beginner:"
        ],
        "animated": false
      },
      {
        "base": [
          10035,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eight-spoked-asterisk:"
        ],
        "animated": false
      },
      {
        "base": [
          10055,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":sparkle:"
        ],
        "animated": false
      },
      {
        "base": [
          9851,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":recycling-symbol:"
        ],
        "animated": false
      },
      {
        "base": [
          128177
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":currency-exchange:"
        ],
        "animated": false
      },
      {
        "base": [
          128178
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":dollar-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          128185
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chart-increasing-with-yen:"
        ],
        "animated": false
      },
      {
        "base": [
          127535
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":reserved:"
        ],
        "animated": false
      },
      {
        "base": [
          10062
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":x-mark:",
          ":cross mark button:",
          ":no-mark:"
        ],
        "animated": false
      },
      {
        "base": [
          9989
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":check-mark:",
          ":check-mark-green:"
        ],
        "animated": true
      },
      {
        "base": [
          10004,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":check-mark-black:"
        ],
        "animated": false
      },
      {
        "base": [
          9745,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":check-mark-button:",
          ":vote:"
        ],
        "animated": false
      },
      {
        "base": [
          11014,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":up-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8599,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":up-right-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          10145,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":right-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8600,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":down-right-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          11015,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":down-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8601,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":down-left-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          11013,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":left-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8598,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":up-left-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8597,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":up-down-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8596,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":left-right-arrow:"
        ],
        "animated": false
      },
      {
        "base": [
          8617,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":right-arrow-curving-left:"
        ],
        "animated": false
      },
      {
        "base": [
          8618,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":left-arrow-curving-right:"
        ],
        "animated": false
      },
      {
        "base": [
          10548,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":right-arrow-curving-up:"
        ],
        "animated": false
      },
      {
        "base": [
          10549,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":right-arrow-curving-down:"
        ],
        "animated": false
      },
      {
        "base": [
          128259
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":clockwise-arrows:"
        ],
        "animated": false
      },
      {
        "base": [
          128260
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":counterclockwise-arrows:"
        ],
        "animated": false
      },
      {
        "base": [
          128281
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":back:",
          ":arrow-back:"
        ],
        "animated": false
      },
      {
        "base": [
          128283
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":on:",
          ":arrow-on:"
        ],
        "animated": false
      },
      {
        "base": [
          128285
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":top:",
          ":arrow-top:"
        ],
        "animated": false
      },
      {
        "base": [
          128282
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":end:",
          ":arrow-end:"
        ],
        "animated": false
      },
      {
        "base": [
          128284
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":soon:",
          ":arrow-soon:"
        ],
        "animated": false
      },
      {
        "base": [
          127381
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":new:"
        ],
        "animated": false
      },
      {
        "base": [
          127379
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":free:"
        ],
        "animated": false
      },
      {
        "base": [
          127385
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":up!:"
        ],
        "animated": false
      },
      {
        "base": [
          127383
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ok-button:"
        ],
        "animated": false
      },
      {
        "base": [
          127378
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":cool:"
        ],
        "animated": true
      },
      {
        "base": [
          127382
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ng:"
        ],
        "animated": false
      },
      {
        "base": [
          8505,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":information:"
        ],
        "animated": false
      },
      {
        "base": [
          127359,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Parking:"
        ],
        "animated": false
      },
      {
        "base": [
          127489
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":here:"
        ],
        "animated": false
      },
      {
        "base": [
          127490,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":service-charge:"
        ],
        "animated": false
      },
      {
        "base": [
          127539
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":vacancy:"
        ],
        "animated": false
      },
      {
        "base": [
          128291
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":symbols:"
        ],
        "animated": false
      },
      {
        "base": [
          128292
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":letters:",
          ":abc:"
        ],
        "animated": false
      },
      {
        "base": [
          128288
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":uppercase-letters:"
        ],
        "animated": false
      },
      {
        "base": [
          128289
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":lowercase-letters:"
        ],
        "animated": false
      },
      {
        "base": [
          128290
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":numbers:"
        ],
        "animated": false
      },
      {
        "base": [
          35,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":#:",
          ":number-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          42,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":asterisk:",
          ":keycap-asterisk:"
        ],
        "animated": false
      },
      {
        "base": [
          48,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":zero:",
          ":keycap-zero:"
        ],
        "animated": false
      },
      {
        "base": [
          49,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":one:",
          ":keycap-one:"
        ],
        "animated": false
      },
      {
        "base": [
          50,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":two:",
          ":keycap-two:"
        ],
        "animated": false
      },
      {
        "base": [
          51,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":three:",
          ":keycap-three:"
        ],
        "animated": false
      },
      {
        "base": [
          52,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":four:",
          ":keycap-four:"
        ],
        "animated": false
      },
      {
        "base": [
          53,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":five:",
          ":keycap-five:"
        ],
        "animated": false
      },
      {
        "base": [
          54,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":six:",
          ":keycap-six:"
        ],
        "animated": false
      },
      {
        "base": [
          55,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":seven:",
          ":keycap-seven:"
        ],
        "animated": false
      },
      {
        "base": [
          56,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eight:",
          ":keycap-eight:"
        ],
        "animated": false
      },
      {
        "base": [
          57,
          65039,
          8419
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":nine:",
          ":keycap-nine:"
        ],
        "animated": false
      },
      {
        "base": [
          128287
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ten:",
          ":keycap-ten:"
        ],
        "animated": false
      },
      {
        "base": [
          128160
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":diamond-jewel:"
        ],
        "animated": false
      },
      {
        "base": [
          128311
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-diamond-large:"
        ],
        "animated": false
      },
      {
        "base": [
          128313
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":blue-diamond-small:"
        ],
        "animated": false
      },
      {
        "base": [
          127760
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":globe:"
        ],
        "animated": false
      },
      {
        "base": [
          127975
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":ATM:"
        ],
        "animated": false
      },
      {
        "base": [
          9410,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":metro-sign:",
          ":circled-m:"
        ],
        "animated": false
      },
      {
        "base": [
          128702
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":water-closet:"
        ],
        "animated": false
      },
      {
        "base": [
          128699
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":restroom:"
        ],
        "animated": false
      },
      {
        "base": [
          128697
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":mens-room:"
        ],
        "animated": false
      },
      {
        "base": [
          128698
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":womens-room:"
        ],
        "animated": false
      },
      {
        "base": [
          9855
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wheelchair-symbol:"
        ],
        "animated": false
      },
      {
        "base": [
          128700
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":baby-symbol:"
        ],
        "animated": false
      },
      {
        "base": [
          128727
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":elevator:"
        ],
        "animated": false
      },
      {
        "base": [
          128686
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":litter:"
        ],
        "animated": false
      },
      {
        "base": [
          128688
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":water-faucet:"
        ],
        "animated": false
      },
      {
        "base": [
          128706
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":passport-control:"
        ],
        "animated": false
      },
      {
        "base": [
          128707
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":customs:"
        ],
        "animated": false
      },
      {
        "base": [
          128708
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":baggage-claim:"
        ],
        "animated": false
      },
      {
        "base": [
          128709
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":left-luggage:"
        ],
        "animated": false
      },
      {
        "base": [
          128159
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":heart-box:"
        ],
        "animated": false
      },
      {
        "base": [
          9883,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":atom-symbol:"
        ],
        "animated": false
      },
      {
        "base": [
          128720
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":place-of-worship:"
        ],
        "animated": false
      },
      {
        "base": [
          128329,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":om:"
        ],
        "animated": false
      },
      {
        "base": [
          9784,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wheel-of-dharma:"
        ],
        "animated": false
      },
      {
        "base": [
          9774,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":peace-symbol:"
        ],
        "animated": false
      },
      {
        "base": [
          9775,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":yin-yang:"
        ],
        "animated": false
      },
      {
        "base": [
          9770,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":star-and-crescent:"
        ],
        "animated": false
      },
      {
        "base": [
          129711
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":khanda:"
        ],
        "animated": false
      },
      {
        "base": [
          10013,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":latin-cross:"
        ],
        "animated": false
      },
      {
        "base": [
          9766,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":orthodox-cross:"
        ],
        "animated": false
      },
      {
        "base": [
          10017,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":star-of-David:"
        ],
        "animated": false
      },
      {
        "base": [
          128303
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":star-of-david-with-dot:"
        ],
        "animated": false
      },
      {
        "base": [
          128334
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":menorah:"
        ],
        "animated": false
      },
      {
        "base": [
          9854,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":infinity:"
        ],
        "animated": false
      },
      {
        "base": [
          127380
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":id-button:"
        ],
        "animated": false
      },
      {
        "base": [
          9877,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":medical-symbol:"
        ],
        "animated": false
      },
      {
        "base": [
          10006,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":multiplication-x:"
        ],
        "animated": false
      },
      {
        "base": [
          10133
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":plus-sign:",
          ":+:"
        ],
        "animated": true
      },
      {
        "base": [
          10134
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":minus-sign:",
          ":-:"
        ],
        "animated": false
      },
      {
        "base": [
          10135
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":division-sign:"
        ],
        "animated": false
      },
      {
        "base": [
          129008
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":equals-sign:",
          ":=:"
        ],
        "animated": false
      },
      {
        "base": [
          10160
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":curly-loop:"
        ],
        "animated": false
      },
      {
        "base": [
          10175
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":curly-loop-double:"
        ],
        "animated": false
      },
      {
        "base": [
          12336,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":wavy-dash:"
        ],
        "animated": false
      },
      {
        "base": [
          169,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":copyright:"
        ],
        "animated": false
      },
      {
        "base": [
          174,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":registered:"
        ],
        "animated": false
      },
      {
        "base": [
          8482,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trade-mark:"
        ],
        "animated": false
      },
      {
        "base": [
          128280
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":radio-button:"
        ],
        "animated": false
      },
      {
        "base": [
          128307
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-square-button:"
        ],
        "animated": false
      },
      {
        "base": [
          9724,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-square-medium:"
        ],
        "animated": false
      },
      {
        "base": [
          9726
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-square-medium-small:"
        ],
        "animated": false
      },
      {
        "base": [
          9642,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-square-small:"
        ],
        "animated": false
      },
      {
        "base": [
          128306
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":button-black-square:"
        ],
        "animated": false
      },
      {
        "base": [
          9723,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-square-medium:"
        ],
        "animated": false
      },
      {
        "base": [
          9725
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-square-medium-small:"
        ],
        "animated": false
      },
      {
        "base": [
          9643,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-square-small:"
        ],
        "animated": false
      },
      {
        "base": [
          128065,
          65039,
          8205,
          128488,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":eye-bubble:"
        ],
        "animated": false
      }
    ]
  },
  {
    "group": "Flags",
    "emoji": [
      {
        "base": [
          127937
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":chequered-flag:"
        ],
        "animated": true
      },
      {
        "base": [
          128681
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":triangular-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127884
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":crossed-flags:"
        ],
        "animated": false
      },
      {
        "base": [
          127988
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":black-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127987,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":white-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127987,
          65039,
          8205,
          127752
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":rainbow-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127987,
          65039,
          8205,
          9895,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":trans-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127988,
          8205,
          9760,
          65039
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":pirate-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ascension-Island-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Andorra-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":United-Arab-Emirates-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Afghanistan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Antigua-Barbuda-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Anguilla-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Albania-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Armenia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Angola-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127478
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Antarctica-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Argentina-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":American-Samoa-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Austria-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Australia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Aruba-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127485
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":\u00c5land-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127462,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Azerbaijan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bosnia-Herzegovina-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127463
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Barbados-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bangladesh-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Belgium-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Burkina-Faso-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bulgaria-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bahrain-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Burundi-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127471
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Benin-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St-Barth\u00e9lemy-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bermuda-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Brunei-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bolivia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127478
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Caribbean-Netherlands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Brazil-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bahamas-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bhutan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Bouvet-Island-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Botswana-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Belarus-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127463,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Belize-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Canada-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cocos-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Congo-Kinshasa-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Central-African-Republic-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Congo-Brazzaville-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Switzerland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":C\u00f4te-d\u2019Ivoire-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cook-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Chile-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cameroon-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":China-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Colombia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Clipperton-Island-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Costa-Rica-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cuba-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cape-Verde-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cura\u00e7ao-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127485
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Christmas-Island-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cyprus-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127464,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Czechia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Germany-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Diego-Garcia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127471
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Djibouti-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Denmark-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Dominica-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Dominican Republic-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127465,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Algeria-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ceuta-Melilla-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ecuador-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Estonia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Egypt-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Western-Sahara-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Eritrea-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Spain-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ethiopia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127466,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":European-Union-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127467,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Finland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127467,
          127471
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Fiji-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127467,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Falkland-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127467,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Micronesia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127467,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Faroe-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127467,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":France-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Gabon-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127463
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":United-Kingdom-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Grenada-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Georgia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":French Guiana-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guernsey-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ghana-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Gibraltar-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Greenland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Gambia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guinea-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guadeloupe-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127478
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Equatorial-Guinea-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Greece-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":South-Georgia-South-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guatemala-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guam-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guinea-Bissau-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127468,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Guyana-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127469,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Hong-Kong-SAR-China-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127469,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Heard-McDonald Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127469,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Honduras-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127469,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Croatia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127469,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Haiti-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127469,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Hungary-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Canary-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Indonesia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ireland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Israel-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Isle-of-Man-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":India-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":British-Indian-Ocean-Territory-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127478
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Iraq-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Iran-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Iceland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127470,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Italy-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127471,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Jersey-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127471,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Jamaica-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127471,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Jordan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127471,
          127477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Japan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Kenya-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Kyrgyzstan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cambodia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Kiribati-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Comoros-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St. Kitts & Nevis-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":North Korea-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":South Korea-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Kuwait-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Cayman Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127472,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Kazakhstan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Laos-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127463
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Lebanon-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St. Lucia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Liechtenstein-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Sri Lanka-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Liberia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Lesotho-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Lithuania-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Luxembourg-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Latvia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127473,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Libya-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Morocco-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Monaco-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Moldova-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Montenegro-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St-Martin-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Madagascar-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Marshall-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Macedonia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mali-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Myanmar-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mongolia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Macau-SAR-China-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Northern-Mariana-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127478
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Martinique-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mauritania-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Montserrat-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Malta-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mauritius-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Maldives-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Malawi-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127485
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mexico-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Malaysia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127474,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mozambique-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Namibia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":New-Caledonia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Niger-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Norfolk-Island-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Nigeria-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Nicaragua-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Netherlands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Norway-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127477
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Nepal-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Nauru-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Niue-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127475,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":New-Zealand-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127476,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Oman-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Panama-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Peru-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":French-Polynesia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Papua-New-Guinea-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Philippines-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Pakistan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Poland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St-Pierre-Miquelon-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Pitcairn-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Puerto-Rico-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Palestinian-Territories-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Portugal-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Palau-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127477,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Paraguay-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127478,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Qatar-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127479,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":R\u00e9union-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127479,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Romania-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127479,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Serbia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127479,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Russia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127479,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Rwanda-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Saudi-Arabia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127463
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Solomon-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Seychelles-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Sudan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Sweden-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Singapore-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St-Helena-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Slovenia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127471
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Svalbard-Jan Mayen-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Slovakia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Sierra-Leone-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":San-Marino-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Senegal-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Somalia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Suriname-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":South-Sudan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":S\u00e3o-Tom\u00e9-Pr\u00edncipe-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":El-Salvador-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127485
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Sint-Maarten-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Syria-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127480,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Swaziland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tristan-da-Cunha-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Turks-Caicos Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127465
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Chad-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":French-Southern-Territories-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Togo-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127469
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Thailand-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127471
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tajikistan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tokelau-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127473
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Timor-Leste-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Turkmenistan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tunisia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127476
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tonga-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127479
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Turkey-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Trinidad-Tobago-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127483
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tuvalu-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Taiwan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127481,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Tanzania-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Ukraine-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Uganda-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":US-Outlying Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":United-Nations-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":United-States-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127486
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Uruguay-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127482,
          127487
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Uzbekistan-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Vatican City-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127464
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":St-Vincent-Grenadines-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Venezuela-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127468
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":British-Virgin Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127470
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":US-Virgin-Islands-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127475
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Vietnam-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127483,
          127482
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Vanuatu-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127484,
          127467
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Wallis-Futuna-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127484,
          127480
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Samoa-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127485,
          127472
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Kosovo-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127486,
          127466
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Yemen-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127486,
          127481
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Mayotte-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127487,
          127462
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":South-Africa-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127487,
          127474
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Zambia-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127487,
          127484
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Zimbabwe-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127988,
          917607,
          917602,
          917605,
          917614,
          917607,
          917631
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":England-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127988,
          917607,
          917602,
          917619,
          917603,
          917620,
          917631
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Scotland-flag:"
        ],
        "animated": false
      },
      {
        "base": [
          127988,
          917607,
          917602,
          917623,
          917612,
          917619,
          917631
        ],
        "alternates": [],
        "emoticons": [],
        "shortcodes": [
          ":Wales-flag:"
        ],
        "animated": false
      }
    ]
  }
];



/***/ }),

/***/ "./src/fontlist.js":
/*!*************************!*\
  !*** ./src/fontlist.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fontList: () => (/* binding */ fontList)
/* harmony export */ });


const fontList = {
	"text": {
		"Bitter": "https://raw.githubusercontent.com/google/fonts/main/ofl/bitter/Bitter%5Bwght%5D.ttf",
		"Bitter-Italic": "https://raw.githubusercontent.com/google/fonts/main/ofl/bitter/Bitter-Italic%5Bwght%5D.ttf",
		"Blaka Ink": "https://raw.githubusercontent.com/google/fonts/main/ofl/blakaink/BlakaInk-Regular.ttf",
		"Bungee Color": "https://raw.githubusercontent.com/google/fonts/main/ofl/bungeecolor/BungeeColor-Regular.ttf",
		"Bungee Spice": "https://raw.githubusercontent.com/google/fonts/main/ofl/bungeespice/BungeeSpice-Regular.ttf",
		"Foldit": "https://raw.githubusercontent.com/google/fonts/main/ofl/foldit/Foldit%5Bwght%5D.ttf",
		"Gimme Constructo": "https://www.axis-praxis.org/samsa/fonts/figma/GimmeConstructoVariablev03VF.woff2",
		"Nabla": "https://raw.githubusercontent.com/google/fonts/main/ofl/nabla/Nabla%5BEDPT%2CEHLT%5D.ttf",
		"Rocher": "https://www.axis-praxis.org/samsa/fonts/figma/RocherColorGX.woff2",
		"Snoese Color": "https://www.axis-praxis.org/samsa/fonts/figma/SnoeseColorVariable.woff2",
	},
	"emoji": {
		"Noto Color Emoji": "https://fonts.gstatic.com/s/notocoloremoji/v25/Yq6P-KqIXTD0t4D9z1ESnKM3-HpFWRxHy9WY8YXt1PQ.woff2",
		"Noto Mono Emoji": "https://fonts.gstatic.com/s/notoemoji/v47/bMrymSyK7YY-MEu6aWjPJGaTe34h0Wq7.woff2",
	},
}




/***/ }),

/***/ "../../node_modules/buffer/index.js":
/*!******************************************!*\
  !*** ../../node_modules/buffer/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



const base64 = __webpack_require__(/*! base64-js */ "../../node_modules/buffer/node_modules/base64-js/index.js")
const ieee754 = __webpack_require__(/*! ieee754 */ "../../node_modules/ieee754/index.js")
const customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

const K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    const arr = new Uint8Array(1)
    const proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  const buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  const valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  const b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  const length = byteLength(string, encoding) | 0
  let buf = createBuffer(length)

  const actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  const length = array.length < 0 ? 0 : checked(array.length) | 0
  const buf = createBuffer(length)
  for (let i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    const copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  let buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    const len = checked(obj.length) | 0
    const buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  let x = a.length
  let y = b.length

  for (let i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  let i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  const buffer = Buffer.allocUnsafe(length)
  let pos = 0
  for (i = 0; i < list.length; ++i) {
    let buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)
        buf.copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  const len = string.length
  const mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  let loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  const i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  const len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (let i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  const len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (let i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  const len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (let i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  const length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  let str = ''
  const max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  let x = thisEnd - thisStart
  let y = end - start
  const len = Math.min(x, y)

  const thisCopy = this.slice(thisStart, thisEnd)
  const targetCopy = target.slice(start, end)

  for (let i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  let indexSize = 1
  let arrLength = arr.length
  let valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  let i
  if (dir) {
    let foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      let found = true
      for (let j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  const remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  const strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  let i
  for (i = 0; i < length; ++i) {
    const parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  const remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  const res = []

  let i = start
  while (i < end) {
    const firstByte = buf[i]
    let codePoint = null
    let bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      let secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
const MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  const len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  let res = ''
  let i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  const len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  let out = ''
  for (let i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  const bytes = buf.slice(start, end)
  let res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (let i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  const len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  const newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  let val = this[offset + --byteLength]
  let mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const lo = first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24

  const hi = this[++offset] +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24

  return BigInt(lo) + (BigInt(hi) << BigInt(32))
})

Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const hi = first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  const lo = this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last

  return (BigInt(hi) << BigInt(32)) + BigInt(lo)
})

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let i = byteLength
  let mul = 1
  let val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = this[offset + 4] +
    this[offset + 5] * 2 ** 8 +
    this[offset + 6] * 2 ** 16 +
    (last << 24) // Overflow

  return (BigInt(val) << BigInt(32)) +
    BigInt(first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24)
})

Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  return (BigInt(val) << BigInt(32)) +
    BigInt(this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last)
})

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let mul = 1
  let i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let i = byteLength - 1
  let mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function wrtBigUInt64LE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  return offset
}

function wrtBigUInt64BE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset + 7] = lo
  lo = lo >> 8
  buf[offset + 6] = lo
  lo = lo >> 8
  buf[offset + 5] = lo
  lo = lo >> 8
  buf[offset + 4] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset + 3] = hi
  hi = hi >> 8
  buf[offset + 2] = hi
  hi = hi >> 8
  buf[offset + 1] = hi
  hi = hi >> 8
  buf[offset] = hi
  return offset + 8
}

Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = 0
  let mul = 1
  let sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = byteLength - 1
  let mul = 1
  let sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  const len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      const code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  let i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    const bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    const len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// CUSTOM ERRORS
// =============

// Simplified versions from Node, changed for Buffer-only usage
const errors = {}
function E (sym, getMessage, Base) {
  errors[sym] = class NodeError extends Base {
    constructor () {
      super()

      Object.defineProperty(this, 'message', {
        value: getMessage.apply(this, arguments),
        writable: true,
        configurable: true
      })

      // Add the error code to the name to include it in the stack trace.
      this.name = `${this.name} [${sym}]`
      // Access the stack to generate the error message including the error code
      // from the name.
      this.stack // eslint-disable-line no-unused-expressions
      // Reset the name to the actual name.
      delete this.name
    }

    get code () {
      return sym
    }

    set code (value) {
      Object.defineProperty(this, 'code', {
        configurable: true,
        enumerable: true,
        value,
        writable: true
      })
    }

    toString () {
      return `${this.name} [${sym}]: ${this.message}`
    }
  }
}

E('ERR_BUFFER_OUT_OF_BOUNDS',
  function (name) {
    if (name) {
      return `${name} is outside of buffer bounds`
    }

    return 'Attempt to access memory outside buffer bounds'
  }, RangeError)
E('ERR_INVALID_ARG_TYPE',
  function (name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`
  }, TypeError)
E('ERR_OUT_OF_RANGE',
  function (str, range, input) {
    let msg = `The value of "${str}" is out of range.`
    let received = input
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input))
    } else if (typeof input === 'bigint') {
      received = String(input)
      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
        received = addNumericalSeparator(received)
      }
      received += 'n'
    }
    msg += ` It must be ${range}. Received ${received}`
    return msg
  }, RangeError)

function addNumericalSeparator (val) {
  let res = ''
  let i = val.length
  const start = val[0] === '-' ? 1 : 0
  for (; i >= start + 4; i -= 3) {
    res = `_${val.slice(i - 3, i)}${res}`
  }
  return `${val.slice(0, i)}${res}`
}

// CHECK FUNCTIONS
// ===============

function checkBounds (buf, offset, byteLength) {
  validateNumber(offset, 'offset')
  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {
    boundsError(offset, buf.length - (byteLength + 1))
  }
}

function checkIntBI (value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    const n = typeof min === 'bigint' ? 'n' : ''
    let range
    if (byteLength > 3) {
      if (min === 0 || min === BigInt(0)) {
        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`
      } else {
        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +
                `${(byteLength + 1) * 8 - 1}${n}`
      }
    } else {
      range = `>= ${min}${n} and <= ${max}${n}`
    }
    throw new errors.ERR_OUT_OF_RANGE('value', range, value)
  }
  checkBounds(buf, offset, byteLength)
}

function validateNumber (value, name) {
  if (typeof value !== 'number') {
    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)
  }
}

function boundsError (value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type)
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)
  }

  if (length < 0) {
    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()
  }

  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',
                                    `>= ${type ? 1 : 0} and <= ${length}`,
                                    value)
}

// HELPER FUNCTIONS
// ================

const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  let codePoint
  const length = string.length
  let leadSurrogate = null
  const bytes = []

  for (let i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  let c, hi, lo
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  let i
  for (i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
const hexSliceLookupTable = (function () {
  const alphabet = '0123456789abcdef'
  const table = new Array(256)
  for (let i = 0; i < 16; ++i) {
    const i16 = i * 16
    for (let j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

// Return not function with Error if BigInt not supported
function defineBigIntMethod (fn) {
  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn
}

function BufferBigIntNotDefined () {
  throw new Error('BigInt not supported')
}


/***/ }),

/***/ "../../node_modules/buffer/node_modules/base64-js/index.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/buffer/node_modules/base64-js/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "../../node_modules/ieee754/index.js":
/*!*******************************************!*\
  !*** ../../node_modules/ieee754/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*********************!*\
  !*** ./src/code.ts ***!
  \*********************/

// Code in this file has access to the *figma document* via the figma global object.
// Browser APIs in the <script> tag inside "ui.html" which has a
// full browser environment (See https://www.figma.com/plugin-docs/how-plugins-run).
// https://www.figma.com/plugin-docs/plugin-quickstart-guide/
// Each time you start VS Code, do:
// 1. Hit Ctrl-Shift-B in Windows, or Command-Shift-B for Mac.
// 2. Select watch-tsconfig.json
// Webpack and bundling
// https://www.figma.com/plugin-docs/libraries-and-bundling/
const { fontList } = __webpack_require__(/*! ./fontlist.js */ "./src/fontlist.js"); // get list of fonts
const { emojiMetadata } = __webpack_require__(/*! ./emoji_15_0_ordering.js */ "./src/emoji_15_0_ordering.js"); // get emoji definitions, originally source is https://github.com/googlefonts/emoji-metadata/blob/main/emoji_15_0_ordering.json
const { SamsaFont, SamsaGlyph, SamsaInstance, SamsaBuffer, SAMSAGLOBAL } = __webpack_require__(/*! samsa-core */ "./node_modules/samsa-core/index.js");
// brotli (this works!)
const buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js");
const brotliDecompressFunction = __webpack_require__(/*! ../node_modules/brotli/decompress */ "./node_modules/brotli/decompress.js");
// GLOBAL object
const GLOBAL = {
    figmaNodeId: null,
};
// show the HTML page in "ui.html"
figma.showUI(__uiFiles__.main, { width: 314, height: 600, title: "COLRv1 fonts" });
// this is the main font object: you can only have one font at a time
let font = {};
// get current text color
const textNodeTest = figma.createText();
const textColor = textNodeTest.type == "SOLID" ? textNodeTest.fills[0].color : { r: 0, g: 0, b: 0 };
textNodeTest.remove();
// set up defaults, send init message to UI
const defaults = {
    textColor: textColor,
};
// initial messages to UI
figma.ui.postMessage({ type: "init", defaults: defaults });
figma.ui.postMessage({ type: "font-list", fontList: fontList });
figma.ui.postMessage({ type: "emoji-ordering", emojiMetadata: emojiMetadata });
// Calls to "parent.postMessage" from within the HTML page will trigger this
// callback. The callback will be passed the "pluginMessage" property of the
// posted message.
figma.ui.onmessage = msg => {
    var _a;
    switch (msg.type) {
        case "fetch-emojis": {
            const emojiSVGs = {}; // we return an object of SVGs indexed by the string that invokes the emoji (the UI already knows about the arrangement of emojis)
            // we return an object of SVGs indexed by string
            emojiMetadata[msg.emojiType].emoji.forEach((emojiChar) => {
                const instance = font.instance(); // no axis settings for now, so we get the default instance
                const str = String.fromCodePoint(...emojiChar.base);
                const strings = [str];
                emojiChar.alternates.forEach((alternate) => strings.push(String.fromCodePoint(...alternate))); // get the alternate strings as well
                strings.forEach(str => emojiSVGs[str] = instance.renderText({ text: str, fontSize: 24, format: "svg" })); // render all the strings to svg, store the svg strings in the emojiSVGs object
            });
            // send the emoji svgs back to UI using message type "emoji-svgs"
            figma.ui.postMessage({ type: "emoji-svgs", emojiType: msg.emojiType, svgs: emojiSVGs });
            break;
        }
        case "fetch-font": {
            fetch(msg.url)
                .then(response => {
                console.log("Loaded response: ", response);
                return response.arrayBuffer();
            })
                .then(arrayBuffer => {
                console.log(`File loaded (${arrayBuffer.byteLength} bytes)`);
                const options = {
                    fontFace: msg.url,
                    allGlyphs: true,
                    allTVTs: true,
                };
                // load the font, decompress it if necessary
                const fingerprint = new DataView(arrayBuffer, 0, 4).getUint32(0);
                let fontBuffer;
                if (fingerprint === SAMSAGLOBAL.fingerprints.WOFF2) { // does the fingerprint indicate WOFF2?
                    console.log("WOFF2 font detected");
                    fontBuffer = new SamsaBuffer(arrayBuffer).decodeWOFF2({
                        bufferObject: buffer.Buffer,
                        brotliDecompress: brotliDecompressFunction,
                        ignoreInstructions: true,
                        ignoreChecksums: true,
                    });
                    console.log(`WOFF2 font decompressed to TTF (${fontBuffer.byteLength} bytes)`);
                    // TODO: check it really is a TTF!
                }
                else {
                    fontBuffer = new SamsaBuffer(arrayBuffer);
                }
                // make a SamsaFont object from the uncompressed ttf
                // - font is a global variable (TODO: have it as GLOBAL.font?)
                font = new SamsaFont(fontBuffer, options);
                console.log("TTF font loaded");
                // signal to the UI that we’ve got the font, by sending its names, fvar, CPAL
                // - TODO: send these all as one message?
                figma.ui.postMessage({ type: "font-fetched" });
                // variable font?
                if (font.fvar && font.fvar.axisCount) {
                    font.fvar.axes.forEach((axis) => {
                        axis.name = font.names[axis.axisNameID];
                    });
                    figma.ui.postMessage({ type: "fvar", fvar: { instances: font.fvar.instances, axes: font.fvar.axes } });
                }
                // color font?
                if (font.CPAL && (!msg.excludes || !msg.excludes.includes("CPAL"))) { // we might not need CPAL at the front end
                    font.CPAL.hexColors = {}; // must use an object here... (sparse arrays in JSON are HUGE!)
                    font.CPAL.palettes.forEach((palette) => {
                        palette.colors.forEach((color) => {
                            font.CPAL.hexColors[color] = font.hexColorFromU32(color);
                        });
                    });
                    figma.ui.postMessage({ type: "CPAL", CPAL: { colors: font.CPAL.colors, palettes: font.CPAL.palettes, hexColors: font.CPAL.hexColors } });
                }
                figma.ui.postMessage({ type: "font-data-delivered" });
            });
            break;
        }
        case "render": {
            // get svg from text, font, size, axisSettings, palette
            const instance = font.instance(msg.options.fvs);
            let svgString = instance.renderText({
                text: msg.options.text,
                fontSize: msg.options.fontSize,
                paletteId: (_a = msg.options.paletteId) !== null && _a !== void 0 ? _a : 0,
                format: "svg",
            });
            let node = null; // tried node:BaseNode|null = null but that didn’t work, thanks TypeScript!
            let relativeTransform = null;
            if (GLOBAL.figmaNodeId !== null) {
                node = figma.getNodeById(GLOBAL.figmaNodeId);
                if (node !== null) {
                    relativeTransform = node.relativeTransform;
                    node.remove();
                }
                else {
                    GLOBAL.figmaNodeId = null;
                }
            }
            node = figma.createNodeFromSvg(svgString); // convert SVG to node and add it to the page
            if (relativeTransform) {
                node.relativeTransform = relativeTransform;
            }
            // store node id so we can remove it later
            GLOBAL.figmaNodeId = node.id;
            // set node metadata
            node.setPluginData("creator", "Figma-COLRv1-plugin-LORP");
            node.setPluginData("dateCreated", new Date().toISOString());
            node.setPluginData("font", font.names[6]); // PostScript name
            node.setPluginData("fontSize", msg.options.fontSize.toString());
            node.setPluginData("text", msg.options.text);
            node.setPluginData("tuple", `[${instance.tuple.join()}]`);
            break;
        }
        case "palette-edit": {
            if (font.CPAL) {
                const paletteId = parseInt(msg.paletteId);
                const entryId = parseInt(msg.entryId);
                const palette = font.CPAL.palettes[paletteId];
                if (palette && palette.colors[entryId] !== undefined) {
                    palette.colors[entryId] = font.u32FromHexColor(msg.color);
                }
            }
            break;
        }
        case "cancel": {
            figma.closePlugin();
            break;
        }
    }
};

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,